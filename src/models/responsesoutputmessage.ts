/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  ResponsesMessageContent,
  ResponsesMessageContent$inboundSchema,
  ResponsesMessageContent$Outbound,
  ResponsesMessageContent$outboundSchema,
} from "./responsesmessagecontent.js";
import {
  ResponsesMessageStatus,
  ResponsesMessageStatus$inboundSchema,
  ResponsesMessageStatus$Outbound,
  ResponsesMessageStatus$outboundSchema,
} from "./responsesmessagestatus.js";

export const ResponsesOutputMessageType = {
  Message: "message",
} as const;
export type ResponsesOutputMessageType = ClosedEnum<
  typeof ResponsesOutputMessageType
>;

export const ResponsesOutputMessageRole = {
  Assistant: "assistant",
} as const;
export type ResponsesOutputMessageRole = ClosedEnum<
  typeof ResponsesOutputMessageRole
>;

/**
 * Output message from assistant
 */
export type ResponsesOutputMessage = {
  type: ResponsesOutputMessageType;
  id: string;
  status: ResponsesMessageStatus;
  role: ResponsesOutputMessageRole;
  content: Array<ResponsesMessageContent>;
};

/** @internal */
export const ResponsesOutputMessageType$inboundSchema: z.ZodNativeEnum<
  typeof ResponsesOutputMessageType
> = z.nativeEnum(ResponsesOutputMessageType);

/** @internal */
export const ResponsesOutputMessageType$outboundSchema: z.ZodNativeEnum<
  typeof ResponsesOutputMessageType
> = ResponsesOutputMessageType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesOutputMessageType$ {
  /** @deprecated use `ResponsesOutputMessageType$inboundSchema` instead. */
  export const inboundSchema = ResponsesOutputMessageType$inboundSchema;
  /** @deprecated use `ResponsesOutputMessageType$outboundSchema` instead. */
  export const outboundSchema = ResponsesOutputMessageType$outboundSchema;
}

/** @internal */
export const ResponsesOutputMessageRole$inboundSchema: z.ZodNativeEnum<
  typeof ResponsesOutputMessageRole
> = z.nativeEnum(ResponsesOutputMessageRole);

/** @internal */
export const ResponsesOutputMessageRole$outboundSchema: z.ZodNativeEnum<
  typeof ResponsesOutputMessageRole
> = ResponsesOutputMessageRole$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesOutputMessageRole$ {
  /** @deprecated use `ResponsesOutputMessageRole$inboundSchema` instead. */
  export const inboundSchema = ResponsesOutputMessageRole$inboundSchema;
  /** @deprecated use `ResponsesOutputMessageRole$outboundSchema` instead. */
  export const outboundSchema = ResponsesOutputMessageRole$outboundSchema;
}

/** @internal */
export const ResponsesOutputMessage$inboundSchema: z.ZodType<
  ResponsesOutputMessage,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: ResponsesOutputMessageType$inboundSchema,
  id: z.string(),
  status: ResponsesMessageStatus$inboundSchema,
  role: ResponsesOutputMessageRole$inboundSchema,
  content: z.array(ResponsesMessageContent$inboundSchema),
});

/** @internal */
export type ResponsesOutputMessage$Outbound = {
  type: string;
  id: string;
  status: ResponsesMessageStatus$Outbound;
  role: string;
  content: Array<ResponsesMessageContent$Outbound>;
};

/** @internal */
export const ResponsesOutputMessage$outboundSchema: z.ZodType<
  ResponsesOutputMessage$Outbound,
  z.ZodTypeDef,
  ResponsesOutputMessage
> = z.object({
  type: ResponsesOutputMessageType$outboundSchema,
  id: z.string(),
  status: ResponsesMessageStatus$outboundSchema,
  role: ResponsesOutputMessageRole$outboundSchema,
  content: z.array(ResponsesMessageContent$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesOutputMessage$ {
  /** @deprecated use `ResponsesOutputMessage$inboundSchema` instead. */
  export const inboundSchema = ResponsesOutputMessage$inboundSchema;
  /** @deprecated use `ResponsesOutputMessage$outboundSchema` instead. */
  export const outboundSchema = ResponsesOutputMessage$outboundSchema;
  /** @deprecated use `ResponsesOutputMessage$Outbound` instead. */
  export type Outbound = ResponsesOutputMessage$Outbound;
}

export function responsesOutputMessageToJSON(
  responsesOutputMessage: ResponsesOutputMessage,
): string {
  return JSON.stringify(
    ResponsesOutputMessage$outboundSchema.parse(responsesOutputMessage),
  );
}

export function responsesOutputMessageFromJSON(
  jsonString: string,
): SafeParseResult<ResponsesOutputMessage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponsesOutputMessage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponsesOutputMessage' from JSON`,
  );
}
