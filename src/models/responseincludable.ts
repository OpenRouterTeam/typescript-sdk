/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

/**
 * Includable fields for response
 */
export const ResponseIncludable = {
  FileSearchCallResults: "file_search_call.results",
  MessageInputImageImageUrl: "message.input_image.image_url",
  ComputerCallOutputOutputImageUrl: "computer_call_output.output.image_url",
  ReasoningEncryptedContent: "reasoning.encrypted_content",
  CodeInterpreterCallOutputs: "code_interpreter_call.outputs",
} as const;
/**
 * Includable fields for response
 */
export type ResponseIncludable = OpenEnum<typeof ResponseIncludable>;

/** @internal */
export const ResponseIncludable$inboundSchema: z.ZodType<
  ResponseIncludable,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(ResponseIncludable),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const ResponseIncludable$outboundSchema: z.ZodType<
  ResponseIncludable,
  z.ZodTypeDef,
  ResponseIncludable
> = z.union([
  z.nativeEnum(ResponseIncludable),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseIncludable$ {
  /** @deprecated use `ResponseIncludable$inboundSchema` instead. */
  export const inboundSchema = ResponseIncludable$inboundSchema;
  /** @deprecated use `ResponseIncludable$outboundSchema` instead. */
  export const outboundSchema = ResponseIncludable$outboundSchema;
}
