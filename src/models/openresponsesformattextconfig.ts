/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v4";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  OpenResponsesFormatJSONObject,
  OpenResponsesFormatJSONObject$inboundSchema,
  OpenResponsesFormatJSONObject$Outbound,
  OpenResponsesFormatJSONObject$outboundSchema,
} from "./openresponsesformatjsonobject.js";
import {
  OpenResponsesFormatJSONSchema,
  OpenResponsesFormatJSONSchema$inboundSchema,
  OpenResponsesFormatJSONSchema$Outbound,
  OpenResponsesFormatJSONSchema$outboundSchema,
} from "./openresponsesformatjsonschema.js";
import {
  OpenResponsesFormatText,
  OpenResponsesFormatText$inboundSchema,
  OpenResponsesFormatText$Outbound,
  OpenResponsesFormatText$outboundSchema,
} from "./openresponsesformattext.js";

/**
 * Text response format configuration
 */
export type OpenResponsesFormatTextConfig =
  | OpenResponsesFormatJSONSchema
  | OpenResponsesFormatText
  | OpenResponsesFormatJSONObject;

/** @internal */
export const OpenResponsesFormatTextConfig$inboundSchema: z.ZodType<
  OpenResponsesFormatTextConfig,
  unknown
> = z.union([
  OpenResponsesFormatJSONSchema$inboundSchema,
  OpenResponsesFormatText$inboundSchema,
  OpenResponsesFormatJSONObject$inboundSchema,
]);

/** @internal */
export type OpenResponsesFormatTextConfig$Outbound =
  | OpenResponsesFormatJSONSchema$Outbound
  | OpenResponsesFormatText$Outbound
  | OpenResponsesFormatJSONObject$Outbound;

/** @internal */
export const OpenResponsesFormatTextConfig$outboundSchema: z.ZodType<
  OpenResponsesFormatTextConfig$Outbound,
  OpenResponsesFormatTextConfig
> = z.union([
  OpenResponsesFormatJSONSchema$outboundSchema,
  OpenResponsesFormatText$outboundSchema,
  OpenResponsesFormatJSONObject$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesFormatTextConfig$ {
  /** @deprecated use `OpenResponsesFormatTextConfig$inboundSchema` instead. */
  export const inboundSchema = OpenResponsesFormatTextConfig$inboundSchema;
  /** @deprecated use `OpenResponsesFormatTextConfig$outboundSchema` instead. */
  export const outboundSchema = OpenResponsesFormatTextConfig$outboundSchema;
  /** @deprecated use `OpenResponsesFormatTextConfig$Outbound` instead. */
  export type Outbound = OpenResponsesFormatTextConfig$Outbound;
}

export function openResponsesFormatTextConfigToJSON(
  openResponsesFormatTextConfig: OpenResponsesFormatTextConfig,
): string {
  return JSON.stringify(
    OpenResponsesFormatTextConfig$outboundSchema.parse(
      openResponsesFormatTextConfig,
    ),
  );
}

export function openResponsesFormatTextConfigFromJSON(
  jsonString: string,
): SafeParseResult<OpenResponsesFormatTextConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OpenResponsesFormatTextConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OpenResponsesFormatTextConfig' from JSON`,
  );
}
