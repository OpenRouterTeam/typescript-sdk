/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export const URLCitationAnnotationDetailType = {
  UrlCitation: "url_citation",
} as const;
export type URLCitationAnnotationDetailType = ClosedEnum<
  typeof URLCitationAnnotationDetailType
>;

export type UrlCitation = {
  endIndex: number;
  startIndex: number;
  title: string;
  url: string;
  content?: string | undefined;
};

/**
 * URL citation annotation
 */
export type URLCitationAnnotationDetail = {
  type: URLCitationAnnotationDetailType;
  urlCitation: UrlCitation;
};

/** @internal */
export const URLCitationAnnotationDetailType$inboundSchema: z.ZodNativeEnum<
  typeof URLCitationAnnotationDetailType
> = z.nativeEnum(URLCitationAnnotationDetailType);

/** @internal */
export const URLCitationAnnotationDetailType$outboundSchema: z.ZodNativeEnum<
  typeof URLCitationAnnotationDetailType
> = URLCitationAnnotationDetailType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace URLCitationAnnotationDetailType$ {
  /** @deprecated use `URLCitationAnnotationDetailType$inboundSchema` instead. */
  export const inboundSchema = URLCitationAnnotationDetailType$inboundSchema;
  /** @deprecated use `URLCitationAnnotationDetailType$outboundSchema` instead. */
  export const outboundSchema = URLCitationAnnotationDetailType$outboundSchema;
}

/** @internal */
export const UrlCitation$inboundSchema: z.ZodType<
  UrlCitation,
  z.ZodTypeDef,
  unknown
> = z.object({
  end_index: z.number(),
  start_index: z.number(),
  title: z.string(),
  url: z.string(),
  content: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "end_index": "endIndex",
    "start_index": "startIndex",
  });
});

/** @internal */
export type UrlCitation$Outbound = {
  end_index: number;
  start_index: number;
  title: string;
  url: string;
  content?: string | undefined;
};

/** @internal */
export const UrlCitation$outboundSchema: z.ZodType<
  UrlCitation$Outbound,
  z.ZodTypeDef,
  UrlCitation
> = z.object({
  endIndex: z.number(),
  startIndex: z.number(),
  title: z.string(),
  url: z.string(),
  content: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    endIndex: "end_index",
    startIndex: "start_index",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UrlCitation$ {
  /** @deprecated use `UrlCitation$inboundSchema` instead. */
  export const inboundSchema = UrlCitation$inboundSchema;
  /** @deprecated use `UrlCitation$outboundSchema` instead. */
  export const outboundSchema = UrlCitation$outboundSchema;
  /** @deprecated use `UrlCitation$Outbound` instead. */
  export type Outbound = UrlCitation$Outbound;
}

export function urlCitationToJSON(urlCitation: UrlCitation): string {
  return JSON.stringify(UrlCitation$outboundSchema.parse(urlCitation));
}

export function urlCitationFromJSON(
  jsonString: string,
): SafeParseResult<UrlCitation, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => UrlCitation$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'UrlCitation' from JSON`,
  );
}

/** @internal */
export const URLCitationAnnotationDetail$inboundSchema: z.ZodType<
  URLCitationAnnotationDetail,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: URLCitationAnnotationDetailType$inboundSchema,
  url_citation: z.lazy(() => UrlCitation$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "url_citation": "urlCitation",
  });
});

/** @internal */
export type URLCitationAnnotationDetail$Outbound = {
  type: string;
  url_citation: UrlCitation$Outbound;
};

/** @internal */
export const URLCitationAnnotationDetail$outboundSchema: z.ZodType<
  URLCitationAnnotationDetail$Outbound,
  z.ZodTypeDef,
  URLCitationAnnotationDetail
> = z.object({
  type: URLCitationAnnotationDetailType$outboundSchema,
  urlCitation: z.lazy(() => UrlCitation$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    urlCitation: "url_citation",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace URLCitationAnnotationDetail$ {
  /** @deprecated use `URLCitationAnnotationDetail$inboundSchema` instead. */
  export const inboundSchema = URLCitationAnnotationDetail$inboundSchema;
  /** @deprecated use `URLCitationAnnotationDetail$outboundSchema` instead. */
  export const outboundSchema = URLCitationAnnotationDetail$outboundSchema;
  /** @deprecated use `URLCitationAnnotationDetail$Outbound` instead. */
  export type Outbound = URLCitationAnnotationDetail$Outbound;
}

export function urlCitationAnnotationDetailToJSON(
  urlCitationAnnotationDetail: URLCitationAnnotationDetail,
): string {
  return JSON.stringify(
    URLCitationAnnotationDetail$outboundSchema.parse(
      urlCitationAnnotationDetail,
    ),
  );
}

export function urlCitationAnnotationDetailFromJSON(
  jsonString: string,
): SafeParseResult<URLCitationAnnotationDetail, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => URLCitationAnnotationDetail$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'URLCitationAnnotationDetail' from JSON`,
  );
}
