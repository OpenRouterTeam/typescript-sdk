/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  ResponseImageGenerationCallStatus,
  ResponseImageGenerationCallStatus$inboundSchema,
  ResponseImageGenerationCallStatus$outboundSchema,
} from "./responseimagegenerationcallstatus.js";

export const ResponsesImageGenerationCallType = {
  ImageGenerationCall: "image_generation_call",
} as const;
export type ResponsesImageGenerationCallType = ClosedEnum<
  typeof ResponsesImageGenerationCallType
>;

/**
 * Image generation call in Responses API
 */
export type ResponsesImageGenerationCall = {
  type: ResponsesImageGenerationCallType;
  id: string;
  result: string | null;
  status: ResponseImageGenerationCallStatus;
};

/** @internal */
export const ResponsesImageGenerationCallType$inboundSchema: z.ZodNativeEnum<
  typeof ResponsesImageGenerationCallType
> = z.nativeEnum(ResponsesImageGenerationCallType);

/** @internal */
export const ResponsesImageGenerationCallType$outboundSchema: z.ZodNativeEnum<
  typeof ResponsesImageGenerationCallType
> = ResponsesImageGenerationCallType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesImageGenerationCallType$ {
  /** @deprecated use `ResponsesImageGenerationCallType$inboundSchema` instead. */
  export const inboundSchema = ResponsesImageGenerationCallType$inboundSchema;
  /** @deprecated use `ResponsesImageGenerationCallType$outboundSchema` instead. */
  export const outboundSchema = ResponsesImageGenerationCallType$outboundSchema;
}

/** @internal */
export const ResponsesImageGenerationCall$inboundSchema: z.ZodType<
  ResponsesImageGenerationCall,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: ResponsesImageGenerationCallType$inboundSchema,
  id: z.string(),
  result: z.nullable(z.string()),
  status: ResponseImageGenerationCallStatus$inboundSchema,
});

/** @internal */
export type ResponsesImageGenerationCall$Outbound = {
  type: string;
  id: string;
  result: string | null;
  status: string;
};

/** @internal */
export const ResponsesImageGenerationCall$outboundSchema: z.ZodType<
  ResponsesImageGenerationCall$Outbound,
  z.ZodTypeDef,
  ResponsesImageGenerationCall
> = z.object({
  type: ResponsesImageGenerationCallType$outboundSchema,
  id: z.string(),
  result: z.nullable(z.string()),
  status: ResponseImageGenerationCallStatus$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesImageGenerationCall$ {
  /** @deprecated use `ResponsesImageGenerationCall$inboundSchema` instead. */
  export const inboundSchema = ResponsesImageGenerationCall$inboundSchema;
  /** @deprecated use `ResponsesImageGenerationCall$outboundSchema` instead. */
  export const outboundSchema = ResponsesImageGenerationCall$outboundSchema;
  /** @deprecated use `ResponsesImageGenerationCall$Outbound` instead. */
  export type Outbound = ResponsesImageGenerationCall$Outbound;
}

export function responsesImageGenerationCallToJSON(
  responsesImageGenerationCall: ResponsesImageGenerationCall,
): string {
  return JSON.stringify(
    ResponsesImageGenerationCall$outboundSchema.parse(
      responsesImageGenerationCall,
    ),
  );
}

export function responsesImageGenerationCallFromJSON(
  jsonString: string,
): SafeParseResult<ResponsesImageGenerationCall, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponsesImageGenerationCall$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponsesImageGenerationCall' from JSON`,
  );
}
