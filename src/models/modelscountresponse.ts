/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v4";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * Model count data
 */
export type ModelsCountResponse = {};

/** @internal */
export const ModelsCountResponse$inboundSchema: z.ZodType<
  ModelsCountResponse,
  unknown
> = z.object({});

/** @internal */
export type ModelsCountResponse$Outbound = {};

/** @internal */
export const ModelsCountResponse$outboundSchema: z.ZodType<
  ModelsCountResponse$Outbound,
  ModelsCountResponse
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ModelsCountResponse$ {
  /** @deprecated use `ModelsCountResponse$inboundSchema` instead. */
  export const inboundSchema = ModelsCountResponse$inboundSchema;
  /** @deprecated use `ModelsCountResponse$outboundSchema` instead. */
  export const outboundSchema = ModelsCountResponse$outboundSchema;
  /** @deprecated use `ModelsCountResponse$Outbound` instead. */
  export type Outbound = ModelsCountResponse$Outbound;
}

export function modelsCountResponseToJSON(
  modelsCountResponse: ModelsCountResponse,
): string {
  return JSON.stringify(
    ModelsCountResponse$outboundSchema.parse(modelsCountResponse),
  );
}

export function modelsCountResponseFromJSON(
  jsonString: string,
): SafeParseResult<ModelsCountResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ModelsCountResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ModelsCountResponse' from JSON`,
  );
}
