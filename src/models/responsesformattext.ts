/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export const ResponsesFormatTextType = {
  Text: "text",
} as const;
export type ResponsesFormatTextType = ClosedEnum<
  typeof ResponsesFormatTextType
>;

/**
 * Plain text response format
 */
export type ResponsesFormatText = {
  type: ResponsesFormatTextType;
};

/** @internal */
export const ResponsesFormatTextType$inboundSchema: z.ZodNativeEnum<
  typeof ResponsesFormatTextType
> = z.nativeEnum(ResponsesFormatTextType);

/** @internal */
export const ResponsesFormatTextType$outboundSchema: z.ZodNativeEnum<
  typeof ResponsesFormatTextType
> = ResponsesFormatTextType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesFormatTextType$ {
  /** @deprecated use `ResponsesFormatTextType$inboundSchema` instead. */
  export const inboundSchema = ResponsesFormatTextType$inboundSchema;
  /** @deprecated use `ResponsesFormatTextType$outboundSchema` instead. */
  export const outboundSchema = ResponsesFormatTextType$outboundSchema;
}

/** @internal */
export const ResponsesFormatText$inboundSchema: z.ZodType<
  ResponsesFormatText,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: ResponsesFormatTextType$inboundSchema,
});

/** @internal */
export type ResponsesFormatText$Outbound = {
  type: string;
};

/** @internal */
export const ResponsesFormatText$outboundSchema: z.ZodType<
  ResponsesFormatText$Outbound,
  z.ZodTypeDef,
  ResponsesFormatText
> = z.object({
  type: ResponsesFormatTextType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesFormatText$ {
  /** @deprecated use `ResponsesFormatText$inboundSchema` instead. */
  export const inboundSchema = ResponsesFormatText$inboundSchema;
  /** @deprecated use `ResponsesFormatText$outboundSchema` instead. */
  export const outboundSchema = ResponsesFormatText$outboundSchema;
  /** @deprecated use `ResponsesFormatText$Outbound` instead. */
  export type Outbound = ResponsesFormatText$Outbound;
}

export function responsesFormatTextToJSON(
  responsesFormatText: ResponsesFormatText,
): string {
  return JSON.stringify(
    ResponsesFormatText$outboundSchema.parse(responsesFormatText),
  );
}

export function responsesFormatTextFromJSON(
  jsonString: string,
): SafeParseResult<ResponsesFormatText, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponsesFormatText$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponsesFormatText' from JSON`,
  );
}
