/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export const ResponseInputMessageItemRoleDeveloper = {
  Developer: "developer",
} as const;
export type ResponseInputMessageItemRoleDeveloper = ClosedEnum<
  typeof ResponseInputMessageItemRoleDeveloper
>;

export const ResponseInputMessageItemRoleSystem = {
  System: "system",
} as const;
export type ResponseInputMessageItemRoleSystem = ClosedEnum<
  typeof ResponseInputMessageItemRoleSystem
>;

export const ResponseInputMessageItemRoleUser = {
  User: "user",
} as const;
export type ResponseInputMessageItemRoleUser = ClosedEnum<
  typeof ResponseInputMessageItemRoleUser
>;

export type ResponseInputMessageItemRole =
  | ResponseInputMessageItemRoleUser
  | ResponseInputMessageItemRoleSystem
  | ResponseInputMessageItemRoleDeveloper;

/** @internal */
export const ResponseInputMessageItemRoleDeveloper$inboundSchema:
  z.ZodNativeEnum<typeof ResponseInputMessageItemRoleDeveloper> = z.nativeEnum(
    ResponseInputMessageItemRoleDeveloper,
  );

/** @internal */
export const ResponseInputMessageItemRoleDeveloper$outboundSchema:
  z.ZodNativeEnum<typeof ResponseInputMessageItemRoleDeveloper> =
    ResponseInputMessageItemRoleDeveloper$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseInputMessageItemRoleDeveloper$ {
  /** @deprecated use `ResponseInputMessageItemRoleDeveloper$inboundSchema` instead. */
  export const inboundSchema =
    ResponseInputMessageItemRoleDeveloper$inboundSchema;
  /** @deprecated use `ResponseInputMessageItemRoleDeveloper$outboundSchema` instead. */
  export const outboundSchema =
    ResponseInputMessageItemRoleDeveloper$outboundSchema;
}

/** @internal */
export const ResponseInputMessageItemRoleSystem$inboundSchema: z.ZodNativeEnum<
  typeof ResponseInputMessageItemRoleSystem
> = z.nativeEnum(ResponseInputMessageItemRoleSystem);

/** @internal */
export const ResponseInputMessageItemRoleSystem$outboundSchema: z.ZodNativeEnum<
  typeof ResponseInputMessageItemRoleSystem
> = ResponseInputMessageItemRoleSystem$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseInputMessageItemRoleSystem$ {
  /** @deprecated use `ResponseInputMessageItemRoleSystem$inboundSchema` instead. */
  export const inboundSchema = ResponseInputMessageItemRoleSystem$inboundSchema;
  /** @deprecated use `ResponseInputMessageItemRoleSystem$outboundSchema` instead. */
  export const outboundSchema =
    ResponseInputMessageItemRoleSystem$outboundSchema;
}

/** @internal */
export const ResponseInputMessageItemRoleUser$inboundSchema: z.ZodNativeEnum<
  typeof ResponseInputMessageItemRoleUser
> = z.nativeEnum(ResponseInputMessageItemRoleUser);

/** @internal */
export const ResponseInputMessageItemRoleUser$outboundSchema: z.ZodNativeEnum<
  typeof ResponseInputMessageItemRoleUser
> = ResponseInputMessageItemRoleUser$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseInputMessageItemRoleUser$ {
  /** @deprecated use `ResponseInputMessageItemRoleUser$inboundSchema` instead. */
  export const inboundSchema = ResponseInputMessageItemRoleUser$inboundSchema;
  /** @deprecated use `ResponseInputMessageItemRoleUser$outboundSchema` instead. */
  export const outboundSchema = ResponseInputMessageItemRoleUser$outboundSchema;
}

/** @internal */
export const ResponseInputMessageItemRole$inboundSchema: z.ZodType<
  ResponseInputMessageItemRole,
  z.ZodTypeDef,
  unknown
> = z.union([
  ResponseInputMessageItemRoleUser$inboundSchema,
  ResponseInputMessageItemRoleSystem$inboundSchema,
  ResponseInputMessageItemRoleDeveloper$inboundSchema,
]);

/** @internal */
export type ResponseInputMessageItemRole$Outbound = string | string | string;

/** @internal */
export const ResponseInputMessageItemRole$outboundSchema: z.ZodType<
  ResponseInputMessageItemRole$Outbound,
  z.ZodTypeDef,
  ResponseInputMessageItemRole
> = z.union([
  ResponseInputMessageItemRoleUser$outboundSchema,
  ResponseInputMessageItemRoleSystem$outboundSchema,
  ResponseInputMessageItemRoleDeveloper$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseInputMessageItemRole$ {
  /** @deprecated use `ResponseInputMessageItemRole$inboundSchema` instead. */
  export const inboundSchema = ResponseInputMessageItemRole$inboundSchema;
  /** @deprecated use `ResponseInputMessageItemRole$outboundSchema` instead. */
  export const outboundSchema = ResponseInputMessageItemRole$outboundSchema;
  /** @deprecated use `ResponseInputMessageItemRole$Outbound` instead. */
  export type Outbound = ResponseInputMessageItemRole$Outbound;
}

export function responseInputMessageItemRoleToJSON(
  responseInputMessageItemRole: ResponseInputMessageItemRole,
): string {
  return JSON.stringify(
    ResponseInputMessageItemRole$outboundSchema.parse(
      responseInputMessageItemRole,
    ),
  );
}

export function responseInputMessageItemRoleFromJSON(
  jsonString: string,
): SafeParseResult<ResponseInputMessageItemRole, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponseInputMessageItemRole$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponseInputMessageItemRole' from JSON`,
  );
}
