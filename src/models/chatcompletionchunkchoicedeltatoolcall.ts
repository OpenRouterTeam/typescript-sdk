/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ChatCompletionChunkChoiceDeltaToolCallFunction = {
  name?: string | undefined;
  arguments?: string | undefined;
};

export type ChatCompletionChunkChoiceDeltaToolCall = {
  index: number;
  id?: string | undefined;
  type?: "function" | undefined;
  function?: ChatCompletionChunkChoiceDeltaToolCallFunction | undefined;
};

/** @internal */
export const ChatCompletionChunkChoiceDeltaToolCallFunction$inboundSchema:
  z.ZodType<
    ChatCompletionChunkChoiceDeltaToolCallFunction,
    z.ZodTypeDef,
    unknown
  > = z.object({
    name: z.string().optional(),
    arguments: z.string().optional(),
  });

/** @internal */
export type ChatCompletionChunkChoiceDeltaToolCallFunction$Outbound = {
  name?: string | undefined;
  arguments?: string | undefined;
};

/** @internal */
export const ChatCompletionChunkChoiceDeltaToolCallFunction$outboundSchema:
  z.ZodType<
    ChatCompletionChunkChoiceDeltaToolCallFunction$Outbound,
    z.ZodTypeDef,
    ChatCompletionChunkChoiceDeltaToolCallFunction
  > = z.object({
    name: z.string().optional(),
    arguments: z.string().optional(),
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionChunkChoiceDeltaToolCallFunction$ {
  /** @deprecated use `ChatCompletionChunkChoiceDeltaToolCallFunction$inboundSchema` instead. */
  export const inboundSchema =
    ChatCompletionChunkChoiceDeltaToolCallFunction$inboundSchema;
  /** @deprecated use `ChatCompletionChunkChoiceDeltaToolCallFunction$outboundSchema` instead. */
  export const outboundSchema =
    ChatCompletionChunkChoiceDeltaToolCallFunction$outboundSchema;
  /** @deprecated use `ChatCompletionChunkChoiceDeltaToolCallFunction$Outbound` instead. */
  export type Outbound =
    ChatCompletionChunkChoiceDeltaToolCallFunction$Outbound;
}

export function chatCompletionChunkChoiceDeltaToolCallFunctionToJSON(
  chatCompletionChunkChoiceDeltaToolCallFunction:
    ChatCompletionChunkChoiceDeltaToolCallFunction,
): string {
  return JSON.stringify(
    ChatCompletionChunkChoiceDeltaToolCallFunction$outboundSchema.parse(
      chatCompletionChunkChoiceDeltaToolCallFunction,
    ),
  );
}

export function chatCompletionChunkChoiceDeltaToolCallFunctionFromJSON(
  jsonString: string,
): SafeParseResult<
  ChatCompletionChunkChoiceDeltaToolCallFunction,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      ChatCompletionChunkChoiceDeltaToolCallFunction$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'ChatCompletionChunkChoiceDeltaToolCallFunction' from JSON`,
  );
}

/** @internal */
export const ChatCompletionChunkChoiceDeltaToolCall$inboundSchema: z.ZodType<
  ChatCompletionChunkChoiceDeltaToolCall,
  z.ZodTypeDef,
  unknown
> = z.object({
  index: z.number(),
  id: z.string().optional(),
  type: z.literal("function").optional(),
  function: z.lazy(() =>
    ChatCompletionChunkChoiceDeltaToolCallFunction$inboundSchema
  ).optional(),
});

/** @internal */
export type ChatCompletionChunkChoiceDeltaToolCall$Outbound = {
  index: number;
  id?: string | undefined;
  type?: "function" | undefined;
  function?:
    | ChatCompletionChunkChoiceDeltaToolCallFunction$Outbound
    | undefined;
};

/** @internal */
export const ChatCompletionChunkChoiceDeltaToolCall$outboundSchema: z.ZodType<
  ChatCompletionChunkChoiceDeltaToolCall$Outbound,
  z.ZodTypeDef,
  ChatCompletionChunkChoiceDeltaToolCall
> = z.object({
  index: z.number(),
  id: z.string().optional(),
  type: z.literal("function").optional(),
  function: z.lazy(() =>
    ChatCompletionChunkChoiceDeltaToolCallFunction$outboundSchema
  ).optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionChunkChoiceDeltaToolCall$ {
  /** @deprecated use `ChatCompletionChunkChoiceDeltaToolCall$inboundSchema` instead. */
  export const inboundSchema =
    ChatCompletionChunkChoiceDeltaToolCall$inboundSchema;
  /** @deprecated use `ChatCompletionChunkChoiceDeltaToolCall$outboundSchema` instead. */
  export const outboundSchema =
    ChatCompletionChunkChoiceDeltaToolCall$outboundSchema;
  /** @deprecated use `ChatCompletionChunkChoiceDeltaToolCall$Outbound` instead. */
  export type Outbound = ChatCompletionChunkChoiceDeltaToolCall$Outbound;
}

export function chatCompletionChunkChoiceDeltaToolCallToJSON(
  chatCompletionChunkChoiceDeltaToolCall:
    ChatCompletionChunkChoiceDeltaToolCall,
): string {
  return JSON.stringify(
    ChatCompletionChunkChoiceDeltaToolCall$outboundSchema.parse(
      chatCompletionChunkChoiceDeltaToolCall,
    ),
  );
}

export function chatCompletionChunkChoiceDeltaToolCallFromJSON(
  jsonString: string,
): SafeParseResult<ChatCompletionChunkChoiceDeltaToolCall, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ChatCompletionChunkChoiceDeltaToolCall$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatCompletionChunkChoiceDeltaToolCall' from JSON`,
  );
}
