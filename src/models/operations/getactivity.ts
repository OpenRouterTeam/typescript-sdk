/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type GetActivityRequest = {
  date?: string | undefined;
};

/**
 * Returns user activity data grouped by endpoint
 */
export type GetActivityResponse = {
  /**
   * List of activity items
   */
  data: Array<models.ActivityItem>;
};

/** @internal */
export const GetActivityRequest$inboundSchema: z.ZodType<
  GetActivityRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  date: z.string().optional(),
});

/** @internal */
export type GetActivityRequest$Outbound = {
  date?: string | undefined;
};

/** @internal */
export const GetActivityRequest$outboundSchema: z.ZodType<
  GetActivityRequest$Outbound,
  z.ZodTypeDef,
  GetActivityRequest
> = z.object({
  date: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetActivityRequest$ {
  /** @deprecated use `GetActivityRequest$inboundSchema` instead. */
  export const inboundSchema = GetActivityRequest$inboundSchema;
  /** @deprecated use `GetActivityRequest$outboundSchema` instead. */
  export const outboundSchema = GetActivityRequest$outboundSchema;
  /** @deprecated use `GetActivityRequest$Outbound` instead. */
  export type Outbound = GetActivityRequest$Outbound;
}

export function getActivityRequestToJSON(
  getActivityRequest: GetActivityRequest,
): string {
  return JSON.stringify(
    GetActivityRequest$outboundSchema.parse(getActivityRequest),
  );
}

export function getActivityRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetActivityRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetActivityRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetActivityRequest' from JSON`,
  );
}

/** @internal */
export const GetActivityResponse$inboundSchema: z.ZodType<
  GetActivityResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.array(models.ActivityItem$inboundSchema),
});

/** @internal */
export type GetActivityResponse$Outbound = {
  data: Array<models.ActivityItem$Outbound>;
};

/** @internal */
export const GetActivityResponse$outboundSchema: z.ZodType<
  GetActivityResponse$Outbound,
  z.ZodTypeDef,
  GetActivityResponse
> = z.object({
  data: z.array(models.ActivityItem$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetActivityResponse$ {
  /** @deprecated use `GetActivityResponse$inboundSchema` instead. */
  export const inboundSchema = GetActivityResponse$inboundSchema;
  /** @deprecated use `GetActivityResponse$outboundSchema` instead. */
  export const outboundSchema = GetActivityResponse$outboundSchema;
  /** @deprecated use `GetActivityResponse$Outbound` instead. */
  export type Outbound = GetActivityResponse$Outbound;
}

export function getActivityResponseToJSON(
  getActivityResponse: GetActivityResponse,
): string {
  return JSON.stringify(
    GetActivityResponse$outboundSchema.parse(getActivityResponse),
  );
}

export function getActivityResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetActivityResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetActivityResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetActivityResponse' from JSON`,
  );
}
