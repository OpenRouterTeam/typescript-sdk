/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

/**
 * Model count data
 */
export type GetModelsCountData = {
  /**
   * Total number of available models
   */
  count: number;
};

/**
 * Returns the total count of available models
 */
export type GetModelsCountResponseBody = {
  /**
   * Model count data
   */
  data: GetModelsCountData;
};

export type GetModelsCountResponse =
  | GetModelsCountResponseBody
  | models.ErrorResponse;

/** @internal */
export const GetModelsCountData$inboundSchema: z.ZodType<
  GetModelsCountData,
  z.ZodTypeDef,
  unknown
> = z.object({
  count: z.number(),
});

/** @internal */
export type GetModelsCountData$Outbound = {
  count: number;
};

/** @internal */
export const GetModelsCountData$outboundSchema: z.ZodType<
  GetModelsCountData$Outbound,
  z.ZodTypeDef,
  GetModelsCountData
> = z.object({
  count: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetModelsCountData$ {
  /** @deprecated use `GetModelsCountData$inboundSchema` instead. */
  export const inboundSchema = GetModelsCountData$inboundSchema;
  /** @deprecated use `GetModelsCountData$outboundSchema` instead. */
  export const outboundSchema = GetModelsCountData$outboundSchema;
  /** @deprecated use `GetModelsCountData$Outbound` instead. */
  export type Outbound = GetModelsCountData$Outbound;
}

export function getModelsCountDataToJSON(
  getModelsCountData: GetModelsCountData,
): string {
  return JSON.stringify(
    GetModelsCountData$outboundSchema.parse(getModelsCountData),
  );
}

export function getModelsCountDataFromJSON(
  jsonString: string,
): SafeParseResult<GetModelsCountData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetModelsCountData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetModelsCountData' from JSON`,
  );
}

/** @internal */
export const GetModelsCountResponseBody$inboundSchema: z.ZodType<
  GetModelsCountResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => GetModelsCountData$inboundSchema),
});

/** @internal */
export type GetModelsCountResponseBody$Outbound = {
  data: GetModelsCountData$Outbound;
};

/** @internal */
export const GetModelsCountResponseBody$outboundSchema: z.ZodType<
  GetModelsCountResponseBody$Outbound,
  z.ZodTypeDef,
  GetModelsCountResponseBody
> = z.object({
  data: z.lazy(() => GetModelsCountData$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetModelsCountResponseBody$ {
  /** @deprecated use `GetModelsCountResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetModelsCountResponseBody$inboundSchema;
  /** @deprecated use `GetModelsCountResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetModelsCountResponseBody$outboundSchema;
  /** @deprecated use `GetModelsCountResponseBody$Outbound` instead. */
  export type Outbound = GetModelsCountResponseBody$Outbound;
}

export function getModelsCountResponseBodyToJSON(
  getModelsCountResponseBody: GetModelsCountResponseBody,
): string {
  return JSON.stringify(
    GetModelsCountResponseBody$outboundSchema.parse(getModelsCountResponseBody),
  );
}

export function getModelsCountResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetModelsCountResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetModelsCountResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetModelsCountResponseBody' from JSON`,
  );
}

/** @internal */
export const GetModelsCountResponse$inboundSchema: z.ZodType<
  GetModelsCountResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GetModelsCountResponseBody$inboundSchema),
  models.ErrorResponse$inboundSchema,
]);

/** @internal */
export type GetModelsCountResponse$Outbound =
  | GetModelsCountResponseBody$Outbound
  | models.ErrorResponse$Outbound;

/** @internal */
export const GetModelsCountResponse$outboundSchema: z.ZodType<
  GetModelsCountResponse$Outbound,
  z.ZodTypeDef,
  GetModelsCountResponse
> = z.union([
  z.lazy(() => GetModelsCountResponseBody$outboundSchema),
  models.ErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetModelsCountResponse$ {
  /** @deprecated use `GetModelsCountResponse$inboundSchema` instead. */
  export const inboundSchema = GetModelsCountResponse$inboundSchema;
  /** @deprecated use `GetModelsCountResponse$outboundSchema` instead. */
  export const outboundSchema = GetModelsCountResponse$outboundSchema;
  /** @deprecated use `GetModelsCountResponse$Outbound` instead. */
  export type Outbound = GetModelsCountResponse$Outbound;
}

export function getModelsCountResponseToJSON(
  getModelsCountResponse: GetModelsCountResponse,
): string {
  return JSON.stringify(
    GetModelsCountResponse$outboundSchema.parse(getModelsCountResponse),
  );
}

export function getModelsCountResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetModelsCountResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetModelsCountResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetModelsCountResponse' from JSON`,
  );
}
