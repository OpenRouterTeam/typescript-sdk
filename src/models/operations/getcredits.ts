/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type GetCreditsData = {
  /**
   * Total credits purchased
   */
  totalCredits: number;
  /**
   * Total credits used
   */
  totalUsage: number;
};

/**
 * Returns the total credits purchased and used
 */
export type GetCreditsResponseBody = {
  data: GetCreditsData;
};

export type GetCreditsResponse = GetCreditsResponseBody | models.ErrorResponse;

/** @internal */
export const GetCreditsData$inboundSchema: z.ZodType<
  GetCreditsData,
  z.ZodTypeDef,
  unknown
> = z.object({
  total_credits: z.number(),
  total_usage: z.number(),
}).transform((v) => {
  return remap$(v, {
    "total_credits": "totalCredits",
    "total_usage": "totalUsage",
  });
});

/** @internal */
export type GetCreditsData$Outbound = {
  total_credits: number;
  total_usage: number;
};

/** @internal */
export const GetCreditsData$outboundSchema: z.ZodType<
  GetCreditsData$Outbound,
  z.ZodTypeDef,
  GetCreditsData
> = z.object({
  totalCredits: z.number(),
  totalUsage: z.number(),
}).transform((v) => {
  return remap$(v, {
    totalCredits: "total_credits",
    totalUsage: "total_usage",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCreditsData$ {
  /** @deprecated use `GetCreditsData$inboundSchema` instead. */
  export const inboundSchema = GetCreditsData$inboundSchema;
  /** @deprecated use `GetCreditsData$outboundSchema` instead. */
  export const outboundSchema = GetCreditsData$outboundSchema;
  /** @deprecated use `GetCreditsData$Outbound` instead. */
  export type Outbound = GetCreditsData$Outbound;
}

export function getCreditsDataToJSON(getCreditsData: GetCreditsData): string {
  return JSON.stringify(GetCreditsData$outboundSchema.parse(getCreditsData));
}

export function getCreditsDataFromJSON(
  jsonString: string,
): SafeParseResult<GetCreditsData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCreditsData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCreditsData' from JSON`,
  );
}

/** @internal */
export const GetCreditsResponseBody$inboundSchema: z.ZodType<
  GetCreditsResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => GetCreditsData$inboundSchema),
});

/** @internal */
export type GetCreditsResponseBody$Outbound = {
  data: GetCreditsData$Outbound;
};

/** @internal */
export const GetCreditsResponseBody$outboundSchema: z.ZodType<
  GetCreditsResponseBody$Outbound,
  z.ZodTypeDef,
  GetCreditsResponseBody
> = z.object({
  data: z.lazy(() => GetCreditsData$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCreditsResponseBody$ {
  /** @deprecated use `GetCreditsResponseBody$inboundSchema` instead. */
  export const inboundSchema = GetCreditsResponseBody$inboundSchema;
  /** @deprecated use `GetCreditsResponseBody$outboundSchema` instead. */
  export const outboundSchema = GetCreditsResponseBody$outboundSchema;
  /** @deprecated use `GetCreditsResponseBody$Outbound` instead. */
  export type Outbound = GetCreditsResponseBody$Outbound;
}

export function getCreditsResponseBodyToJSON(
  getCreditsResponseBody: GetCreditsResponseBody,
): string {
  return JSON.stringify(
    GetCreditsResponseBody$outboundSchema.parse(getCreditsResponseBody),
  );
}

export function getCreditsResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<GetCreditsResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCreditsResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCreditsResponseBody' from JSON`,
  );
}

/** @internal */
export const GetCreditsResponse$inboundSchema: z.ZodType<
  GetCreditsResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => GetCreditsResponseBody$inboundSchema),
  models.ErrorResponse$inboundSchema,
]);

/** @internal */
export type GetCreditsResponse$Outbound =
  | GetCreditsResponseBody$Outbound
  | models.ErrorResponse$Outbound;

/** @internal */
export const GetCreditsResponse$outboundSchema: z.ZodType<
  GetCreditsResponse$Outbound,
  z.ZodTypeDef,
  GetCreditsResponse
> = z.union([
  z.lazy(() => GetCreditsResponseBody$outboundSchema),
  models.ErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetCreditsResponse$ {
  /** @deprecated use `GetCreditsResponse$inboundSchema` instead. */
  export const inboundSchema = GetCreditsResponse$inboundSchema;
  /** @deprecated use `GetCreditsResponse$outboundSchema` instead. */
  export const outboundSchema = GetCreditsResponse$outboundSchema;
  /** @deprecated use `GetCreditsResponse$Outbound` instead. */
  export type Outbound = GetCreditsResponse$Outbound;
}

export function getCreditsResponseToJSON(
  getCreditsResponse: GetCreditsResponse,
): string {
  return JSON.stringify(
    GetCreditsResponse$outboundSchema.parse(getCreditsResponse),
  );
}

export function getCreditsResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetCreditsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetCreditsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetCreditsResponse' from JSON`,
  );
}
