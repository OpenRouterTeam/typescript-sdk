/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

/**
 * Model count data
 */
export type ListModelsCountData = {
  /**
   * Total number of available models
   */
  count: number;
};

/**
 * Returns the total count of available models
 */
export type ListModelsCountResponseBody = {
  /**
   * Model count data
   */
  data: ListModelsCountData;
};

export type ListModelsCountResponse =
  | ListModelsCountResponseBody
  | models.ErrorResponse;

/** @internal */
export const ListModelsCountData$inboundSchema: z.ZodType<
  ListModelsCountData,
  z.ZodTypeDef,
  unknown
> = z.object({
  count: z.number(),
});

/** @internal */
export type ListModelsCountData$Outbound = {
  count: number;
};

/** @internal */
export const ListModelsCountData$outboundSchema: z.ZodType<
  ListModelsCountData$Outbound,
  z.ZodTypeDef,
  ListModelsCountData
> = z.object({
  count: z.number(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListModelsCountData$ {
  /** @deprecated use `ListModelsCountData$inboundSchema` instead. */
  export const inboundSchema = ListModelsCountData$inboundSchema;
  /** @deprecated use `ListModelsCountData$outboundSchema` instead. */
  export const outboundSchema = ListModelsCountData$outboundSchema;
  /** @deprecated use `ListModelsCountData$Outbound` instead. */
  export type Outbound = ListModelsCountData$Outbound;
}

export function listModelsCountDataToJSON(
  listModelsCountData: ListModelsCountData,
): string {
  return JSON.stringify(
    ListModelsCountData$outboundSchema.parse(listModelsCountData),
  );
}

export function listModelsCountDataFromJSON(
  jsonString: string,
): SafeParseResult<ListModelsCountData, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListModelsCountData$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListModelsCountData' from JSON`,
  );
}

/** @internal */
export const ListModelsCountResponseBody$inboundSchema: z.ZodType<
  ListModelsCountResponseBody,
  z.ZodTypeDef,
  unknown
> = z.object({
  data: z.lazy(() => ListModelsCountData$inboundSchema),
});

/** @internal */
export type ListModelsCountResponseBody$Outbound = {
  data: ListModelsCountData$Outbound;
};

/** @internal */
export const ListModelsCountResponseBody$outboundSchema: z.ZodType<
  ListModelsCountResponseBody$Outbound,
  z.ZodTypeDef,
  ListModelsCountResponseBody
> = z.object({
  data: z.lazy(() => ListModelsCountData$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListModelsCountResponseBody$ {
  /** @deprecated use `ListModelsCountResponseBody$inboundSchema` instead. */
  export const inboundSchema = ListModelsCountResponseBody$inboundSchema;
  /** @deprecated use `ListModelsCountResponseBody$outboundSchema` instead. */
  export const outboundSchema = ListModelsCountResponseBody$outboundSchema;
  /** @deprecated use `ListModelsCountResponseBody$Outbound` instead. */
  export type Outbound = ListModelsCountResponseBody$Outbound;
}

export function listModelsCountResponseBodyToJSON(
  listModelsCountResponseBody: ListModelsCountResponseBody,
): string {
  return JSON.stringify(
    ListModelsCountResponseBody$outboundSchema.parse(
      listModelsCountResponseBody,
    ),
  );
}

export function listModelsCountResponseBodyFromJSON(
  jsonString: string,
): SafeParseResult<ListModelsCountResponseBody, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListModelsCountResponseBody$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListModelsCountResponseBody' from JSON`,
  );
}

/** @internal */
export const ListModelsCountResponse$inboundSchema: z.ZodType<
  ListModelsCountResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  z.lazy(() => ListModelsCountResponseBody$inboundSchema),
  models.ErrorResponse$inboundSchema,
]);

/** @internal */
export type ListModelsCountResponse$Outbound =
  | ListModelsCountResponseBody$Outbound
  | models.ErrorResponse$Outbound;

/** @internal */
export const ListModelsCountResponse$outboundSchema: z.ZodType<
  ListModelsCountResponse$Outbound,
  z.ZodTypeDef,
  ListModelsCountResponse
> = z.union([
  z.lazy(() => ListModelsCountResponseBody$outboundSchema),
  models.ErrorResponse$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListModelsCountResponse$ {
  /** @deprecated use `ListModelsCountResponse$inboundSchema` instead. */
  export const inboundSchema = ListModelsCountResponse$inboundSchema;
  /** @deprecated use `ListModelsCountResponse$outboundSchema` instead. */
  export const outboundSchema = ListModelsCountResponse$outboundSchema;
  /** @deprecated use `ListModelsCountResponse$Outbound` instead. */
  export type Outbound = ListModelsCountResponse$Outbound;
}

export function listModelsCountResponseToJSON(
  listModelsCountResponse: ListModelsCountResponse,
): string {
  return JSON.stringify(
    ListModelsCountResponse$outboundSchema.parse(listModelsCountResponse),
  );
}

export function listModelsCountResponseFromJSON(
  jsonString: string,
): SafeParseResult<ListModelsCountResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListModelsCountResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListModelsCountResponse' from JSON`,
  );
}
