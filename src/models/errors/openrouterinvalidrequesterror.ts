/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as models from "../index.js";
import { OpenRouterError } from "./openroutererror.js";

/**
 * OpenRouter invalid request error response
 */
export type OpenRouterInvalidRequestErrorData = {
  /**
   * Error object structure
   */
  error: models.OpenRouterInvalidRequestErrorError;
};

/**
 * OpenRouter invalid request error response
 */
export class OpenRouterInvalidRequestError extends OpenRouterError {
  /**
   * Error object structure
   */
  error: models.OpenRouterInvalidRequestErrorError;

  /** The original data that was passed to this error instance. */
  data$: OpenRouterInvalidRequestErrorData;

  constructor(
    err: OpenRouterInvalidRequestErrorData,
    httpMeta: { response: Response; request: Request; body: string },
  ) {
    const message = err.error?.message
      || `API error occurred: ${JSON.stringify(err)}`;
    super(message, httpMeta);
    this.data$ = err;
    this.error = err.error;

    this.name = "OpenRouterInvalidRequestError";
  }
}

/** @internal */
export const OpenRouterInvalidRequestError$inboundSchema: z.ZodType<
  OpenRouterInvalidRequestError,
  z.ZodTypeDef,
  unknown
> = z.object({
  error: z.lazy(() => models.OpenRouterInvalidRequestErrorError$inboundSchema),
  request$: z.instanceof(Request),
  response$: z.instanceof(Response),
  body$: z.string(),
})
  .transform((v) => {
    return new OpenRouterInvalidRequestError(v, {
      request: v.request$,
      response: v.response$,
      body: v.body$,
    });
  });

/** @internal */
export type OpenRouterInvalidRequestError$Outbound = {
  error: models.OpenRouterInvalidRequestErrorError$Outbound;
};

/** @internal */
export const OpenRouterInvalidRequestError$outboundSchema: z.ZodType<
  OpenRouterInvalidRequestError$Outbound,
  z.ZodTypeDef,
  OpenRouterInvalidRequestError
> = z.instanceof(OpenRouterInvalidRequestError)
  .transform(v => v.data$)
  .pipe(z.object({
    error: z.lazy(() =>
      models.OpenRouterInvalidRequestErrorError$outboundSchema
    ),
  }));

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenRouterInvalidRequestError$ {
  /** @deprecated use `OpenRouterInvalidRequestError$inboundSchema` instead. */
  export const inboundSchema = OpenRouterInvalidRequestError$inboundSchema;
  /** @deprecated use `OpenRouterInvalidRequestError$outboundSchema` instead. */
  export const outboundSchema = OpenRouterInvalidRequestError$outboundSchema;
  /** @deprecated use `OpenRouterInvalidRequestError$Outbound` instead. */
  export type Outbound = OpenRouterInvalidRequestError$Outbound;
}
