/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v4";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

export const ImageGenerationStatus = {
  InProgress: "in_progress",
  Completed: "completed",
  Generating: "generating",
  Failed: "failed",
} as const;
export type ImageGenerationStatus = OpenEnum<typeof ImageGenerationStatus>;

/** @internal */
export const ImageGenerationStatus$inboundSchema: z.ZodType<
  ImageGenerationStatus,
  unknown
> = z
  .union([
    z.enum(ImageGenerationStatus),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const ImageGenerationStatus$outboundSchema: z.ZodType<
  ImageGenerationStatus,
  ImageGenerationStatus
> = z.union([
  z.enum(ImageGenerationStatus),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ImageGenerationStatus$ {
  /** @deprecated use `ImageGenerationStatus$inboundSchema` instead. */
  export const inboundSchema = ImageGenerationStatus$inboundSchema;
  /** @deprecated use `ImageGenerationStatus$outboundSchema` instead. */
  export const outboundSchema = ImageGenerationStatus$outboundSchema;
}
