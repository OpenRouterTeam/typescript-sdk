/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export const OpenResponsesReasoningSummaryTextDoneEventType = {
  ResponseReasoningSummaryTextDone: "response.reasoning_summary_text.done",
} as const;
export type OpenResponsesReasoningSummaryTextDoneEventType = ClosedEnum<
  typeof OpenResponsesReasoningSummaryTextDoneEventType
>;

/**
 * Event emitted when reasoning summary text streaming is complete
 */
export type OpenResponsesReasoningSummaryTextDoneEvent = {
  type: OpenResponsesReasoningSummaryTextDoneEventType;
  itemId: string;
  outputIndex: number;
  summaryIndex: number;
  text: string;
  sequenceNumber: number;
};

/** @internal */
export const OpenResponsesReasoningSummaryTextDoneEventType$inboundSchema:
  z.ZodNativeEnum<typeof OpenResponsesReasoningSummaryTextDoneEventType> = z
    .nativeEnum(OpenResponsesReasoningSummaryTextDoneEventType);

/** @internal */
export const OpenResponsesReasoningSummaryTextDoneEventType$outboundSchema:
  z.ZodNativeEnum<typeof OpenResponsesReasoningSummaryTextDoneEventType> =
    OpenResponsesReasoningSummaryTextDoneEventType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesReasoningSummaryTextDoneEventType$ {
  /** @deprecated use `OpenResponsesReasoningSummaryTextDoneEventType$inboundSchema` instead. */
  export const inboundSchema =
    OpenResponsesReasoningSummaryTextDoneEventType$inboundSchema;
  /** @deprecated use `OpenResponsesReasoningSummaryTextDoneEventType$outboundSchema` instead. */
  export const outboundSchema =
    OpenResponsesReasoningSummaryTextDoneEventType$outboundSchema;
}

/** @internal */
export const OpenResponsesReasoningSummaryTextDoneEvent$inboundSchema:
  z.ZodType<OpenResponsesReasoningSummaryTextDoneEvent, z.ZodTypeDef, unknown> =
    z.object({
      type: OpenResponsesReasoningSummaryTextDoneEventType$inboundSchema,
      item_id: z.string(),
      output_index: z.number(),
      summary_index: z.number(),
      text: z.string(),
      sequence_number: z.number(),
    }).transform((v) => {
      return remap$(v, {
        "item_id": "itemId",
        "output_index": "outputIndex",
        "summary_index": "summaryIndex",
        "sequence_number": "sequenceNumber",
      });
    });

/** @internal */
export type OpenResponsesReasoningSummaryTextDoneEvent$Outbound = {
  type: string;
  item_id: string;
  output_index: number;
  summary_index: number;
  text: string;
  sequence_number: number;
};

/** @internal */
export const OpenResponsesReasoningSummaryTextDoneEvent$outboundSchema:
  z.ZodType<
    OpenResponsesReasoningSummaryTextDoneEvent$Outbound,
    z.ZodTypeDef,
    OpenResponsesReasoningSummaryTextDoneEvent
  > = z.object({
    type: OpenResponsesReasoningSummaryTextDoneEventType$outboundSchema,
    itemId: z.string(),
    outputIndex: z.number(),
    summaryIndex: z.number(),
    text: z.string(),
    sequenceNumber: z.number(),
  }).transform((v) => {
    return remap$(v, {
      itemId: "item_id",
      outputIndex: "output_index",
      summaryIndex: "summary_index",
      sequenceNumber: "sequence_number",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesReasoningSummaryTextDoneEvent$ {
  /** @deprecated use `OpenResponsesReasoningSummaryTextDoneEvent$inboundSchema` instead. */
  export const inboundSchema =
    OpenResponsesReasoningSummaryTextDoneEvent$inboundSchema;
  /** @deprecated use `OpenResponsesReasoningSummaryTextDoneEvent$outboundSchema` instead. */
  export const outboundSchema =
    OpenResponsesReasoningSummaryTextDoneEvent$outboundSchema;
  /** @deprecated use `OpenResponsesReasoningSummaryTextDoneEvent$Outbound` instead. */
  export type Outbound = OpenResponsesReasoningSummaryTextDoneEvent$Outbound;
}

export function openResponsesReasoningSummaryTextDoneEventToJSON(
  openResponsesReasoningSummaryTextDoneEvent:
    OpenResponsesReasoningSummaryTextDoneEvent,
): string {
  return JSON.stringify(
    OpenResponsesReasoningSummaryTextDoneEvent$outboundSchema.parse(
      openResponsesReasoningSummaryTextDoneEvent,
    ),
  );
}

export function openResponsesReasoningSummaryTextDoneEventFromJSON(
  jsonString: string,
): SafeParseResult<
  OpenResponsesReasoningSummaryTextDoneEvent,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      OpenResponsesReasoningSummaryTextDoneEvent$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'OpenResponsesReasoningSummaryTextDoneEvent' from JSON`,
  );
}
