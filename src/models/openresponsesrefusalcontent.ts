/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v4";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export const OpenResponsesRefusalContentType = {
  Refusal: "refusal",
} as const;
export type OpenResponsesRefusalContentType = ClosedEnum<
  typeof OpenResponsesRefusalContentType
>;

export type OpenResponsesRefusalContent = {
  type: OpenResponsesRefusalContentType;
  refusal: string;
};

/** @internal */
export const OpenResponsesRefusalContentType$inboundSchema: z.ZodEnum<
  typeof OpenResponsesRefusalContentType
> = z.enum(OpenResponsesRefusalContentType);

/** @internal */
export const OpenResponsesRefusalContentType$outboundSchema: z.ZodEnum<
  typeof OpenResponsesRefusalContentType
> = OpenResponsesRefusalContentType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesRefusalContentType$ {
  /** @deprecated use `OpenResponsesRefusalContentType$inboundSchema` instead. */
  export const inboundSchema = OpenResponsesRefusalContentType$inboundSchema;
  /** @deprecated use `OpenResponsesRefusalContentType$outboundSchema` instead. */
  export const outboundSchema = OpenResponsesRefusalContentType$outboundSchema;
}

/** @internal */
export const OpenResponsesRefusalContent$inboundSchema: z.ZodType<
  OpenResponsesRefusalContent,
  unknown
> = z.object({
  type: OpenResponsesRefusalContentType$inboundSchema,
  refusal: z.string(),
});

/** @internal */
export type OpenResponsesRefusalContent$Outbound = {
  type: string;
  refusal: string;
};

/** @internal */
export const OpenResponsesRefusalContent$outboundSchema: z.ZodType<
  OpenResponsesRefusalContent$Outbound,
  OpenResponsesRefusalContent
> = z.object({
  type: OpenResponsesRefusalContentType$outboundSchema,
  refusal: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesRefusalContent$ {
  /** @deprecated use `OpenResponsesRefusalContent$inboundSchema` instead. */
  export const inboundSchema = OpenResponsesRefusalContent$inboundSchema;
  /** @deprecated use `OpenResponsesRefusalContent$outboundSchema` instead. */
  export const outboundSchema = OpenResponsesRefusalContent$outboundSchema;
  /** @deprecated use `OpenResponsesRefusalContent$Outbound` instead. */
  export type Outbound = OpenResponsesRefusalContent$Outbound;
}

export function openResponsesRefusalContentToJSON(
  openResponsesRefusalContent: OpenResponsesRefusalContent,
): string {
  return JSON.stringify(
    OpenResponsesRefusalContent$outboundSchema.parse(
      openResponsesRefusalContent,
    ),
  );
}

export function openResponsesRefusalContentFromJSON(
  jsonString: string,
): SafeParseResult<OpenResponsesRefusalContent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OpenResponsesRefusalContent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OpenResponsesRefusalContent' from JSON`,
  );
}
