/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export const ResponseInputMessageRoleDeveloper = {
  Developer: "developer",
} as const;
export type ResponseInputMessageRoleDeveloper = ClosedEnum<
  typeof ResponseInputMessageRoleDeveloper
>;

export const ResponseInputMessageRoleAssistant = {
  Assistant: "assistant",
} as const;
export type ResponseInputMessageRoleAssistant = ClosedEnum<
  typeof ResponseInputMessageRoleAssistant
>;

export const ResponseInputMessageRoleSystem = {
  System: "system",
} as const;
export type ResponseInputMessageRoleSystem = ClosedEnum<
  typeof ResponseInputMessageRoleSystem
>;

export const ResponseInputMessageRoleUser = {
  User: "user",
} as const;
export type ResponseInputMessageRoleUser = ClosedEnum<
  typeof ResponseInputMessageRoleUser
>;

export type ResponseInputMessageRole =
  | ResponseInputMessageRoleUser
  | ResponseInputMessageRoleSystem
  | ResponseInputMessageRoleAssistant
  | ResponseInputMessageRoleDeveloper;

/** @internal */
export const ResponseInputMessageRoleDeveloper$inboundSchema: z.ZodNativeEnum<
  typeof ResponseInputMessageRoleDeveloper
> = z.nativeEnum(ResponseInputMessageRoleDeveloper);

/** @internal */
export const ResponseInputMessageRoleDeveloper$outboundSchema: z.ZodNativeEnum<
  typeof ResponseInputMessageRoleDeveloper
> = ResponseInputMessageRoleDeveloper$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseInputMessageRoleDeveloper$ {
  /** @deprecated use `ResponseInputMessageRoleDeveloper$inboundSchema` instead. */
  export const inboundSchema = ResponseInputMessageRoleDeveloper$inboundSchema;
  /** @deprecated use `ResponseInputMessageRoleDeveloper$outboundSchema` instead. */
  export const outboundSchema =
    ResponseInputMessageRoleDeveloper$outboundSchema;
}

/** @internal */
export const ResponseInputMessageRoleAssistant$inboundSchema: z.ZodNativeEnum<
  typeof ResponseInputMessageRoleAssistant
> = z.nativeEnum(ResponseInputMessageRoleAssistant);

/** @internal */
export const ResponseInputMessageRoleAssistant$outboundSchema: z.ZodNativeEnum<
  typeof ResponseInputMessageRoleAssistant
> = ResponseInputMessageRoleAssistant$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseInputMessageRoleAssistant$ {
  /** @deprecated use `ResponseInputMessageRoleAssistant$inboundSchema` instead. */
  export const inboundSchema = ResponseInputMessageRoleAssistant$inboundSchema;
  /** @deprecated use `ResponseInputMessageRoleAssistant$outboundSchema` instead. */
  export const outboundSchema =
    ResponseInputMessageRoleAssistant$outboundSchema;
}

/** @internal */
export const ResponseInputMessageRoleSystem$inboundSchema: z.ZodNativeEnum<
  typeof ResponseInputMessageRoleSystem
> = z.nativeEnum(ResponseInputMessageRoleSystem);

/** @internal */
export const ResponseInputMessageRoleSystem$outboundSchema: z.ZodNativeEnum<
  typeof ResponseInputMessageRoleSystem
> = ResponseInputMessageRoleSystem$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseInputMessageRoleSystem$ {
  /** @deprecated use `ResponseInputMessageRoleSystem$inboundSchema` instead. */
  export const inboundSchema = ResponseInputMessageRoleSystem$inboundSchema;
  /** @deprecated use `ResponseInputMessageRoleSystem$outboundSchema` instead. */
  export const outboundSchema = ResponseInputMessageRoleSystem$outboundSchema;
}

/** @internal */
export const ResponseInputMessageRoleUser$inboundSchema: z.ZodNativeEnum<
  typeof ResponseInputMessageRoleUser
> = z.nativeEnum(ResponseInputMessageRoleUser);

/** @internal */
export const ResponseInputMessageRoleUser$outboundSchema: z.ZodNativeEnum<
  typeof ResponseInputMessageRoleUser
> = ResponseInputMessageRoleUser$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseInputMessageRoleUser$ {
  /** @deprecated use `ResponseInputMessageRoleUser$inboundSchema` instead. */
  export const inboundSchema = ResponseInputMessageRoleUser$inboundSchema;
  /** @deprecated use `ResponseInputMessageRoleUser$outboundSchema` instead. */
  export const outboundSchema = ResponseInputMessageRoleUser$outboundSchema;
}

/** @internal */
export const ResponseInputMessageRole$inboundSchema: z.ZodType<
  ResponseInputMessageRole,
  z.ZodTypeDef,
  unknown
> = z.union([
  ResponseInputMessageRoleUser$inboundSchema,
  ResponseInputMessageRoleSystem$inboundSchema,
  ResponseInputMessageRoleAssistant$inboundSchema,
  ResponseInputMessageRoleDeveloper$inboundSchema,
]);

/** @internal */
export type ResponseInputMessageRole$Outbound =
  | string
  | string
  | string
  | string;

/** @internal */
export const ResponseInputMessageRole$outboundSchema: z.ZodType<
  ResponseInputMessageRole$Outbound,
  z.ZodTypeDef,
  ResponseInputMessageRole
> = z.union([
  ResponseInputMessageRoleUser$outboundSchema,
  ResponseInputMessageRoleSystem$outboundSchema,
  ResponseInputMessageRoleAssistant$outboundSchema,
  ResponseInputMessageRoleDeveloper$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseInputMessageRole$ {
  /** @deprecated use `ResponseInputMessageRole$inboundSchema` instead. */
  export const inboundSchema = ResponseInputMessageRole$inboundSchema;
  /** @deprecated use `ResponseInputMessageRole$outboundSchema` instead. */
  export const outboundSchema = ResponseInputMessageRole$outboundSchema;
  /** @deprecated use `ResponseInputMessageRole$Outbound` instead. */
  export type Outbound = ResponseInputMessageRole$Outbound;
}

export function responseInputMessageRoleToJSON(
  responseInputMessageRole: ResponseInputMessageRole,
): string {
  return JSON.stringify(
    ResponseInputMessageRole$outboundSchema.parse(responseInputMessageRole),
  );
}

export function responseInputMessageRoleFromJSON(
  jsonString: string,
): SafeParseResult<ResponseInputMessageRole, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponseInputMessageRole$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponseInputMessageRole' from JSON`,
  );
}
