/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  ImageGenerationStatus,
  ImageGenerationStatus$inboundSchema,
  ImageGenerationStatus$outboundSchema,
} from "./imagegenerationstatus.js";
import {
  OpenResponsesOutputItemReasoning,
  OpenResponsesOutputItemReasoning$inboundSchema,
  OpenResponsesOutputItemReasoning$Outbound,
  OpenResponsesOutputItemReasoning$outboundSchema,
} from "./openresponsesoutputitemreasoning.js";
import {
  OpenResponsesOutputMessage,
  OpenResponsesOutputMessage$inboundSchema,
  OpenResponsesOutputMessage$Outbound,
  OpenResponsesOutputMessage$outboundSchema,
} from "./openresponsesoutputmessage.js";
import {
  WebSearchStatus,
  WebSearchStatus$inboundSchema,
  WebSearchStatus$outboundSchema,
} from "./websearchstatus.js";

export const ResponsesOutputItemTypeImageGenerationCall = {
  ImageGenerationCall: "image_generation_call",
} as const;
export type ResponsesOutputItemTypeImageGenerationCall = ClosedEnum<
  typeof ResponsesOutputItemTypeImageGenerationCall
>;

export type ResponsesOutputItemImageGenerationCall = {
  type: ResponsesOutputItemTypeImageGenerationCall;
  id: string;
  result: string | null;
  status: ImageGenerationStatus;
};

export const ResponsesOutputItemTypeFileSearchCall = {
  FileSearchCall: "file_search_call",
} as const;
export type ResponsesOutputItemTypeFileSearchCall = ClosedEnum<
  typeof ResponsesOutputItemTypeFileSearchCall
>;

export type ResponsesOutputItemFileSearchCall = {
  type: ResponsesOutputItemTypeFileSearchCall;
  id: string;
  queries: Array<string>;
  status: WebSearchStatus;
};

export const ResponsesOutputItemTypeWebSearchCall = {
  WebSearchCall: "web_search_call",
} as const;
export type ResponsesOutputItemTypeWebSearchCall = ClosedEnum<
  typeof ResponsesOutputItemTypeWebSearchCall
>;

export type ResponsesOutputItemWebSearchCall = {
  type: ResponsesOutputItemTypeWebSearchCall;
  id: string;
  status: WebSearchStatus;
};

export const ResponsesOutputItemTypeFunctionCall = {
  FunctionCall: "function_call",
} as const;
export type ResponsesOutputItemTypeFunctionCall = ClosedEnum<
  typeof ResponsesOutputItemTypeFunctionCall
>;

export const ResponsesOutputItemStatusInProgress = {
  InProgress: "in_progress",
} as const;
export type ResponsesOutputItemStatusInProgress = ClosedEnum<
  typeof ResponsesOutputItemStatusInProgress
>;

export const ResponsesOutputItemStatusIncomplete = {
  Incomplete: "incomplete",
} as const;
export type ResponsesOutputItemStatusIncomplete = ClosedEnum<
  typeof ResponsesOutputItemStatusIncomplete
>;

export const ResponsesOutputItemStatusCompleted = {
  Completed: "completed",
} as const;
export type ResponsesOutputItemStatusCompleted = ClosedEnum<
  typeof ResponsesOutputItemStatusCompleted
>;

export type ResponsesOutputItemStatusUnion =
  | ResponsesOutputItemStatusCompleted
  | ResponsesOutputItemStatusIncomplete
  | ResponsesOutputItemStatusInProgress;

export type ResponsesOutputItemFunctionCall = {
  type: ResponsesOutputItemTypeFunctionCall;
  id?: string | undefined;
  name: string;
  arguments: string;
  callId: string;
  status?:
    | ResponsesOutputItemStatusCompleted
    | ResponsesOutputItemStatusIncomplete
    | ResponsesOutputItemStatusInProgress
    | undefined;
};

/**
 * An output item from the response
 */
export type ResponsesOutputItem =
  | OpenResponsesOutputMessage
  | ResponsesOutputItemFunctionCall
  | ResponsesOutputItemFileSearchCall
  | ResponsesOutputItemImageGenerationCall
  | OpenResponsesOutputItemReasoning
  | ResponsesOutputItemWebSearchCall;

/** @internal */
export const ResponsesOutputItemTypeImageGenerationCall$inboundSchema:
  z.ZodNativeEnum<typeof ResponsesOutputItemTypeImageGenerationCall> = z
    .nativeEnum(ResponsesOutputItemTypeImageGenerationCall);

/** @internal */
export const ResponsesOutputItemTypeImageGenerationCall$outboundSchema:
  z.ZodNativeEnum<typeof ResponsesOutputItemTypeImageGenerationCall> =
    ResponsesOutputItemTypeImageGenerationCall$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesOutputItemTypeImageGenerationCall$ {
  /** @deprecated use `ResponsesOutputItemTypeImageGenerationCall$inboundSchema` instead. */
  export const inboundSchema =
    ResponsesOutputItemTypeImageGenerationCall$inboundSchema;
  /** @deprecated use `ResponsesOutputItemTypeImageGenerationCall$outboundSchema` instead. */
  export const outboundSchema =
    ResponsesOutputItemTypeImageGenerationCall$outboundSchema;
}

/** @internal */
export const ResponsesOutputItemImageGenerationCall$inboundSchema: z.ZodType<
  ResponsesOutputItemImageGenerationCall,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: ResponsesOutputItemTypeImageGenerationCall$inboundSchema,
  id: z.string(),
  result: z.nullable(z.string()),
  status: ImageGenerationStatus$inboundSchema,
});

/** @internal */
export type ResponsesOutputItemImageGenerationCall$Outbound = {
  type: string;
  id: string;
  result: string | null;
  status: string;
};

/** @internal */
export const ResponsesOutputItemImageGenerationCall$outboundSchema: z.ZodType<
  ResponsesOutputItemImageGenerationCall$Outbound,
  z.ZodTypeDef,
  ResponsesOutputItemImageGenerationCall
> = z.object({
  type: ResponsesOutputItemTypeImageGenerationCall$outboundSchema,
  id: z.string(),
  result: z.nullable(z.string()),
  status: ImageGenerationStatus$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesOutputItemImageGenerationCall$ {
  /** @deprecated use `ResponsesOutputItemImageGenerationCall$inboundSchema` instead. */
  export const inboundSchema =
    ResponsesOutputItemImageGenerationCall$inboundSchema;
  /** @deprecated use `ResponsesOutputItemImageGenerationCall$outboundSchema` instead. */
  export const outboundSchema =
    ResponsesOutputItemImageGenerationCall$outboundSchema;
  /** @deprecated use `ResponsesOutputItemImageGenerationCall$Outbound` instead. */
  export type Outbound = ResponsesOutputItemImageGenerationCall$Outbound;
}

export function responsesOutputItemImageGenerationCallToJSON(
  responsesOutputItemImageGenerationCall:
    ResponsesOutputItemImageGenerationCall,
): string {
  return JSON.stringify(
    ResponsesOutputItemImageGenerationCall$outboundSchema.parse(
      responsesOutputItemImageGenerationCall,
    ),
  );
}

export function responsesOutputItemImageGenerationCallFromJSON(
  jsonString: string,
): SafeParseResult<ResponsesOutputItemImageGenerationCall, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ResponsesOutputItemImageGenerationCall$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponsesOutputItemImageGenerationCall' from JSON`,
  );
}

/** @internal */
export const ResponsesOutputItemTypeFileSearchCall$inboundSchema:
  z.ZodNativeEnum<typeof ResponsesOutputItemTypeFileSearchCall> = z.nativeEnum(
    ResponsesOutputItemTypeFileSearchCall,
  );

/** @internal */
export const ResponsesOutputItemTypeFileSearchCall$outboundSchema:
  z.ZodNativeEnum<typeof ResponsesOutputItemTypeFileSearchCall> =
    ResponsesOutputItemTypeFileSearchCall$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesOutputItemTypeFileSearchCall$ {
  /** @deprecated use `ResponsesOutputItemTypeFileSearchCall$inboundSchema` instead. */
  export const inboundSchema =
    ResponsesOutputItemTypeFileSearchCall$inboundSchema;
  /** @deprecated use `ResponsesOutputItemTypeFileSearchCall$outboundSchema` instead. */
  export const outboundSchema =
    ResponsesOutputItemTypeFileSearchCall$outboundSchema;
}

/** @internal */
export const ResponsesOutputItemFileSearchCall$inboundSchema: z.ZodType<
  ResponsesOutputItemFileSearchCall,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: ResponsesOutputItemTypeFileSearchCall$inboundSchema,
  id: z.string(),
  queries: z.array(z.string()),
  status: WebSearchStatus$inboundSchema,
});

/** @internal */
export type ResponsesOutputItemFileSearchCall$Outbound = {
  type: string;
  id: string;
  queries: Array<string>;
  status: string;
};

/** @internal */
export const ResponsesOutputItemFileSearchCall$outboundSchema: z.ZodType<
  ResponsesOutputItemFileSearchCall$Outbound,
  z.ZodTypeDef,
  ResponsesOutputItemFileSearchCall
> = z.object({
  type: ResponsesOutputItemTypeFileSearchCall$outboundSchema,
  id: z.string(),
  queries: z.array(z.string()),
  status: WebSearchStatus$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesOutputItemFileSearchCall$ {
  /** @deprecated use `ResponsesOutputItemFileSearchCall$inboundSchema` instead. */
  export const inboundSchema = ResponsesOutputItemFileSearchCall$inboundSchema;
  /** @deprecated use `ResponsesOutputItemFileSearchCall$outboundSchema` instead. */
  export const outboundSchema =
    ResponsesOutputItemFileSearchCall$outboundSchema;
  /** @deprecated use `ResponsesOutputItemFileSearchCall$Outbound` instead. */
  export type Outbound = ResponsesOutputItemFileSearchCall$Outbound;
}

export function responsesOutputItemFileSearchCallToJSON(
  responsesOutputItemFileSearchCall: ResponsesOutputItemFileSearchCall,
): string {
  return JSON.stringify(
    ResponsesOutputItemFileSearchCall$outboundSchema.parse(
      responsesOutputItemFileSearchCall,
    ),
  );
}

export function responsesOutputItemFileSearchCallFromJSON(
  jsonString: string,
): SafeParseResult<ResponsesOutputItemFileSearchCall, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponsesOutputItemFileSearchCall$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponsesOutputItemFileSearchCall' from JSON`,
  );
}

/** @internal */
export const ResponsesOutputItemTypeWebSearchCall$inboundSchema:
  z.ZodNativeEnum<typeof ResponsesOutputItemTypeWebSearchCall> = z.nativeEnum(
    ResponsesOutputItemTypeWebSearchCall,
  );

/** @internal */
export const ResponsesOutputItemTypeWebSearchCall$outboundSchema:
  z.ZodNativeEnum<typeof ResponsesOutputItemTypeWebSearchCall> =
    ResponsesOutputItemTypeWebSearchCall$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesOutputItemTypeWebSearchCall$ {
  /** @deprecated use `ResponsesOutputItemTypeWebSearchCall$inboundSchema` instead. */
  export const inboundSchema =
    ResponsesOutputItemTypeWebSearchCall$inboundSchema;
  /** @deprecated use `ResponsesOutputItemTypeWebSearchCall$outboundSchema` instead. */
  export const outboundSchema =
    ResponsesOutputItemTypeWebSearchCall$outboundSchema;
}

/** @internal */
export const ResponsesOutputItemWebSearchCall$inboundSchema: z.ZodType<
  ResponsesOutputItemWebSearchCall,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: ResponsesOutputItemTypeWebSearchCall$inboundSchema,
  id: z.string(),
  status: WebSearchStatus$inboundSchema,
});

/** @internal */
export type ResponsesOutputItemWebSearchCall$Outbound = {
  type: string;
  id: string;
  status: string;
};

/** @internal */
export const ResponsesOutputItemWebSearchCall$outboundSchema: z.ZodType<
  ResponsesOutputItemWebSearchCall$Outbound,
  z.ZodTypeDef,
  ResponsesOutputItemWebSearchCall
> = z.object({
  type: ResponsesOutputItemTypeWebSearchCall$outboundSchema,
  id: z.string(),
  status: WebSearchStatus$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesOutputItemWebSearchCall$ {
  /** @deprecated use `ResponsesOutputItemWebSearchCall$inboundSchema` instead. */
  export const inboundSchema = ResponsesOutputItemWebSearchCall$inboundSchema;
  /** @deprecated use `ResponsesOutputItemWebSearchCall$outboundSchema` instead. */
  export const outboundSchema = ResponsesOutputItemWebSearchCall$outboundSchema;
  /** @deprecated use `ResponsesOutputItemWebSearchCall$Outbound` instead. */
  export type Outbound = ResponsesOutputItemWebSearchCall$Outbound;
}

export function responsesOutputItemWebSearchCallToJSON(
  responsesOutputItemWebSearchCall: ResponsesOutputItemWebSearchCall,
): string {
  return JSON.stringify(
    ResponsesOutputItemWebSearchCall$outboundSchema.parse(
      responsesOutputItemWebSearchCall,
    ),
  );
}

export function responsesOutputItemWebSearchCallFromJSON(
  jsonString: string,
): SafeParseResult<ResponsesOutputItemWebSearchCall, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponsesOutputItemWebSearchCall$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponsesOutputItemWebSearchCall' from JSON`,
  );
}

/** @internal */
export const ResponsesOutputItemTypeFunctionCall$inboundSchema: z.ZodNativeEnum<
  typeof ResponsesOutputItemTypeFunctionCall
> = z.nativeEnum(ResponsesOutputItemTypeFunctionCall);

/** @internal */
export const ResponsesOutputItemTypeFunctionCall$outboundSchema:
  z.ZodNativeEnum<typeof ResponsesOutputItemTypeFunctionCall> =
    ResponsesOutputItemTypeFunctionCall$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesOutputItemTypeFunctionCall$ {
  /** @deprecated use `ResponsesOutputItemTypeFunctionCall$inboundSchema` instead. */
  export const inboundSchema =
    ResponsesOutputItemTypeFunctionCall$inboundSchema;
  /** @deprecated use `ResponsesOutputItemTypeFunctionCall$outboundSchema` instead. */
  export const outboundSchema =
    ResponsesOutputItemTypeFunctionCall$outboundSchema;
}

/** @internal */
export const ResponsesOutputItemStatusInProgress$inboundSchema: z.ZodNativeEnum<
  typeof ResponsesOutputItemStatusInProgress
> = z.nativeEnum(ResponsesOutputItemStatusInProgress);

/** @internal */
export const ResponsesOutputItemStatusInProgress$outboundSchema:
  z.ZodNativeEnum<typeof ResponsesOutputItemStatusInProgress> =
    ResponsesOutputItemStatusInProgress$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesOutputItemStatusInProgress$ {
  /** @deprecated use `ResponsesOutputItemStatusInProgress$inboundSchema` instead. */
  export const inboundSchema =
    ResponsesOutputItemStatusInProgress$inboundSchema;
  /** @deprecated use `ResponsesOutputItemStatusInProgress$outboundSchema` instead. */
  export const outboundSchema =
    ResponsesOutputItemStatusInProgress$outboundSchema;
}

/** @internal */
export const ResponsesOutputItemStatusIncomplete$inboundSchema: z.ZodNativeEnum<
  typeof ResponsesOutputItemStatusIncomplete
> = z.nativeEnum(ResponsesOutputItemStatusIncomplete);

/** @internal */
export const ResponsesOutputItemStatusIncomplete$outboundSchema:
  z.ZodNativeEnum<typeof ResponsesOutputItemStatusIncomplete> =
    ResponsesOutputItemStatusIncomplete$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesOutputItemStatusIncomplete$ {
  /** @deprecated use `ResponsesOutputItemStatusIncomplete$inboundSchema` instead. */
  export const inboundSchema =
    ResponsesOutputItemStatusIncomplete$inboundSchema;
  /** @deprecated use `ResponsesOutputItemStatusIncomplete$outboundSchema` instead. */
  export const outboundSchema =
    ResponsesOutputItemStatusIncomplete$outboundSchema;
}

/** @internal */
export const ResponsesOutputItemStatusCompleted$inboundSchema: z.ZodNativeEnum<
  typeof ResponsesOutputItemStatusCompleted
> = z.nativeEnum(ResponsesOutputItemStatusCompleted);

/** @internal */
export const ResponsesOutputItemStatusCompleted$outboundSchema: z.ZodNativeEnum<
  typeof ResponsesOutputItemStatusCompleted
> = ResponsesOutputItemStatusCompleted$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesOutputItemStatusCompleted$ {
  /** @deprecated use `ResponsesOutputItemStatusCompleted$inboundSchema` instead. */
  export const inboundSchema = ResponsesOutputItemStatusCompleted$inboundSchema;
  /** @deprecated use `ResponsesOutputItemStatusCompleted$outboundSchema` instead. */
  export const outboundSchema =
    ResponsesOutputItemStatusCompleted$outboundSchema;
}

/** @internal */
export const ResponsesOutputItemStatusUnion$inboundSchema: z.ZodType<
  ResponsesOutputItemStatusUnion,
  z.ZodTypeDef,
  unknown
> = z.union([
  ResponsesOutputItemStatusCompleted$inboundSchema,
  ResponsesOutputItemStatusIncomplete$inboundSchema,
  ResponsesOutputItemStatusInProgress$inboundSchema,
]);

/** @internal */
export type ResponsesOutputItemStatusUnion$Outbound = string | string | string;

/** @internal */
export const ResponsesOutputItemStatusUnion$outboundSchema: z.ZodType<
  ResponsesOutputItemStatusUnion$Outbound,
  z.ZodTypeDef,
  ResponsesOutputItemStatusUnion
> = z.union([
  ResponsesOutputItemStatusCompleted$outboundSchema,
  ResponsesOutputItemStatusIncomplete$outboundSchema,
  ResponsesOutputItemStatusInProgress$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesOutputItemStatusUnion$ {
  /** @deprecated use `ResponsesOutputItemStatusUnion$inboundSchema` instead. */
  export const inboundSchema = ResponsesOutputItemStatusUnion$inboundSchema;
  /** @deprecated use `ResponsesOutputItemStatusUnion$outboundSchema` instead. */
  export const outboundSchema = ResponsesOutputItemStatusUnion$outboundSchema;
  /** @deprecated use `ResponsesOutputItemStatusUnion$Outbound` instead. */
  export type Outbound = ResponsesOutputItemStatusUnion$Outbound;
}

export function responsesOutputItemStatusUnionToJSON(
  responsesOutputItemStatusUnion: ResponsesOutputItemStatusUnion,
): string {
  return JSON.stringify(
    ResponsesOutputItemStatusUnion$outboundSchema.parse(
      responsesOutputItemStatusUnion,
    ),
  );
}

export function responsesOutputItemStatusUnionFromJSON(
  jsonString: string,
): SafeParseResult<ResponsesOutputItemStatusUnion, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponsesOutputItemStatusUnion$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponsesOutputItemStatusUnion' from JSON`,
  );
}

/** @internal */
export const ResponsesOutputItemFunctionCall$inboundSchema: z.ZodType<
  ResponsesOutputItemFunctionCall,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: ResponsesOutputItemTypeFunctionCall$inboundSchema,
  id: z.string().optional(),
  name: z.string(),
  arguments: z.string(),
  call_id: z.string(),
  status: z.union([
    ResponsesOutputItemStatusCompleted$inboundSchema,
    ResponsesOutputItemStatusIncomplete$inboundSchema,
    ResponsesOutputItemStatusInProgress$inboundSchema,
  ]).optional(),
}).transform((v) => {
  return remap$(v, {
    "call_id": "callId",
  });
});

/** @internal */
export type ResponsesOutputItemFunctionCall$Outbound = {
  type: string;
  id?: string | undefined;
  name: string;
  arguments: string;
  call_id: string;
  status?: string | string | string | undefined;
};

/** @internal */
export const ResponsesOutputItemFunctionCall$outboundSchema: z.ZodType<
  ResponsesOutputItemFunctionCall$Outbound,
  z.ZodTypeDef,
  ResponsesOutputItemFunctionCall
> = z.object({
  type: ResponsesOutputItemTypeFunctionCall$outboundSchema,
  id: z.string().optional(),
  name: z.string(),
  arguments: z.string(),
  callId: z.string(),
  status: z.union([
    ResponsesOutputItemStatusCompleted$outboundSchema,
    ResponsesOutputItemStatusIncomplete$outboundSchema,
    ResponsesOutputItemStatusInProgress$outboundSchema,
  ]).optional(),
}).transform((v) => {
  return remap$(v, {
    callId: "call_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesOutputItemFunctionCall$ {
  /** @deprecated use `ResponsesOutputItemFunctionCall$inboundSchema` instead. */
  export const inboundSchema = ResponsesOutputItemFunctionCall$inboundSchema;
  /** @deprecated use `ResponsesOutputItemFunctionCall$outboundSchema` instead. */
  export const outboundSchema = ResponsesOutputItemFunctionCall$outboundSchema;
  /** @deprecated use `ResponsesOutputItemFunctionCall$Outbound` instead. */
  export type Outbound = ResponsesOutputItemFunctionCall$Outbound;
}

export function responsesOutputItemFunctionCallToJSON(
  responsesOutputItemFunctionCall: ResponsesOutputItemFunctionCall,
): string {
  return JSON.stringify(
    ResponsesOutputItemFunctionCall$outboundSchema.parse(
      responsesOutputItemFunctionCall,
    ),
  );
}

export function responsesOutputItemFunctionCallFromJSON(
  jsonString: string,
): SafeParseResult<ResponsesOutputItemFunctionCall, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponsesOutputItemFunctionCall$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponsesOutputItemFunctionCall' from JSON`,
  );
}

/** @internal */
export const ResponsesOutputItem$inboundSchema: z.ZodType<
  ResponsesOutputItem,
  z.ZodTypeDef,
  unknown
> = z.union([
  OpenResponsesOutputMessage$inboundSchema,
  z.lazy(() => ResponsesOutputItemFunctionCall$inboundSchema),
  z.lazy(() => ResponsesOutputItemFileSearchCall$inboundSchema),
  z.lazy(() => ResponsesOutputItemImageGenerationCall$inboundSchema),
  OpenResponsesOutputItemReasoning$inboundSchema,
  z.lazy(() => ResponsesOutputItemWebSearchCall$inboundSchema),
]);

/** @internal */
export type ResponsesOutputItem$Outbound =
  | OpenResponsesOutputMessage$Outbound
  | ResponsesOutputItemFunctionCall$Outbound
  | ResponsesOutputItemFileSearchCall$Outbound
  | ResponsesOutputItemImageGenerationCall$Outbound
  | OpenResponsesOutputItemReasoning$Outbound
  | ResponsesOutputItemWebSearchCall$Outbound;

/** @internal */
export const ResponsesOutputItem$outboundSchema: z.ZodType<
  ResponsesOutputItem$Outbound,
  z.ZodTypeDef,
  ResponsesOutputItem
> = z.union([
  OpenResponsesOutputMessage$outboundSchema,
  z.lazy(() => ResponsesOutputItemFunctionCall$outboundSchema),
  z.lazy(() => ResponsesOutputItemFileSearchCall$outboundSchema),
  z.lazy(() => ResponsesOutputItemImageGenerationCall$outboundSchema),
  OpenResponsesOutputItemReasoning$outboundSchema,
  z.lazy(() => ResponsesOutputItemWebSearchCall$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesOutputItem$ {
  /** @deprecated use `ResponsesOutputItem$inboundSchema` instead. */
  export const inboundSchema = ResponsesOutputItem$inboundSchema;
  /** @deprecated use `ResponsesOutputItem$outboundSchema` instead. */
  export const outboundSchema = ResponsesOutputItem$outboundSchema;
  /** @deprecated use `ResponsesOutputItem$Outbound` instead. */
  export type Outbound = ResponsesOutputItem$Outbound;
}

export function responsesOutputItemToJSON(
  responsesOutputItem: ResponsesOutputItem,
): string {
  return JSON.stringify(
    ResponsesOutputItem$outboundSchema.parse(responsesOutputItem),
  );
}

export function responsesOutputItemFromJSON(
  jsonString: string,
): SafeParseResult<ResponsesOutputItem, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponsesOutputItem$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponsesOutputItem' from JSON`,
  );
}
