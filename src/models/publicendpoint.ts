/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v4";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * Information about a specific model endpoint
 */
export type PublicEndpoint = {};

/** @internal */
export const PublicEndpoint$inboundSchema: z.ZodType<PublicEndpoint, unknown> =
  z.object({});

/** @internal */
export type PublicEndpoint$Outbound = {};

/** @internal */
export const PublicEndpoint$outboundSchema: z.ZodType<
  PublicEndpoint$Outbound,
  PublicEndpoint
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace PublicEndpoint$ {
  /** @deprecated use `PublicEndpoint$inboundSchema` instead. */
  export const inboundSchema = PublicEndpoint$inboundSchema;
  /** @deprecated use `PublicEndpoint$outboundSchema` instead. */
  export const outboundSchema = PublicEndpoint$outboundSchema;
  /** @deprecated use `PublicEndpoint$Outbound` instead. */
  export type Outbound = PublicEndpoint$Outbound;
}

export function publicEndpointToJSON(publicEndpoint: PublicEndpoint): string {
  return JSON.stringify(PublicEndpoint$outboundSchema.parse(publicEndpoint));
}

export function publicEndpointFromJSON(
  jsonString: string,
): SafeParseResult<PublicEndpoint, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => PublicEndpoint$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'PublicEndpoint' from JSON`,
  );
}
