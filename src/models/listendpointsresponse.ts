/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v4";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * List of available endpoints for a model
 */
export type ListEndpointsResponse = {};

/** @internal */
export const ListEndpointsResponse$inboundSchema: z.ZodType<
  ListEndpointsResponse,
  unknown
> = z.object({});

/** @internal */
export type ListEndpointsResponse$Outbound = {};

/** @internal */
export const ListEndpointsResponse$outboundSchema: z.ZodType<
  ListEndpointsResponse$Outbound,
  ListEndpointsResponse
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListEndpointsResponse$ {
  /** @deprecated use `ListEndpointsResponse$inboundSchema` instead. */
  export const inboundSchema = ListEndpointsResponse$inboundSchema;
  /** @deprecated use `ListEndpointsResponse$outboundSchema` instead. */
  export const outboundSchema = ListEndpointsResponse$outboundSchema;
  /** @deprecated use `ListEndpointsResponse$Outbound` instead. */
  export type Outbound = ListEndpointsResponse$Outbound;
}

export function listEndpointsResponseToJSON(
  listEndpointsResponse: ListEndpointsResponse,
): string {
  return JSON.stringify(
    ListEndpointsResponse$outboundSchema.parse(listEndpointsResponse),
  );
}

export function listEndpointsResponseFromJSON(
  jsonString: string,
): SafeParseResult<ListEndpointsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ListEndpointsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ListEndpointsResponse' from JSON`,
  );
}
