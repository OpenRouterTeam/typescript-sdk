/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export const ResponsesWebSearchCallOutputType = {
  WebSearchCall: "web_search_call",
} as const;
export type ResponsesWebSearchCallOutputType = ClosedEnum<
  typeof ResponsesWebSearchCallOutputType
>;

export const ResponsesWebSearchCallOutputStatus = {
  Completed: "completed",
  Searching: "searching",
  InProgress: "in_progress",
  Failed: "failed",
} as const;
export type ResponsesWebSearchCallOutputStatus = ClosedEnum<
  typeof ResponsesWebSearchCallOutputStatus
>;

/**
 * Web search call output
 */
export type ResponsesWebSearchCallOutput = {
  type: ResponsesWebSearchCallOutputType;
  id: string;
  status: ResponsesWebSearchCallOutputStatus;
};

/** @internal */
export const ResponsesWebSearchCallOutputType$inboundSchema: z.ZodNativeEnum<
  typeof ResponsesWebSearchCallOutputType
> = z.nativeEnum(ResponsesWebSearchCallOutputType);

/** @internal */
export const ResponsesWebSearchCallOutputType$outboundSchema: z.ZodNativeEnum<
  typeof ResponsesWebSearchCallOutputType
> = ResponsesWebSearchCallOutputType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesWebSearchCallOutputType$ {
  /** @deprecated use `ResponsesWebSearchCallOutputType$inboundSchema` instead. */
  export const inboundSchema = ResponsesWebSearchCallOutputType$inboundSchema;
  /** @deprecated use `ResponsesWebSearchCallOutputType$outboundSchema` instead. */
  export const outboundSchema = ResponsesWebSearchCallOutputType$outboundSchema;
}

/** @internal */
export const ResponsesWebSearchCallOutputStatus$inboundSchema: z.ZodNativeEnum<
  typeof ResponsesWebSearchCallOutputStatus
> = z.nativeEnum(ResponsesWebSearchCallOutputStatus);

/** @internal */
export const ResponsesWebSearchCallOutputStatus$outboundSchema: z.ZodNativeEnum<
  typeof ResponsesWebSearchCallOutputStatus
> = ResponsesWebSearchCallOutputStatus$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesWebSearchCallOutputStatus$ {
  /** @deprecated use `ResponsesWebSearchCallOutputStatus$inboundSchema` instead. */
  export const inboundSchema = ResponsesWebSearchCallOutputStatus$inboundSchema;
  /** @deprecated use `ResponsesWebSearchCallOutputStatus$outboundSchema` instead. */
  export const outboundSchema =
    ResponsesWebSearchCallOutputStatus$outboundSchema;
}

/** @internal */
export const ResponsesWebSearchCallOutput$inboundSchema: z.ZodType<
  ResponsesWebSearchCallOutput,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: ResponsesWebSearchCallOutputType$inboundSchema,
  id: z.string(),
  status: ResponsesWebSearchCallOutputStatus$inboundSchema,
});

/** @internal */
export type ResponsesWebSearchCallOutput$Outbound = {
  type: string;
  id: string;
  status: string;
};

/** @internal */
export const ResponsesWebSearchCallOutput$outboundSchema: z.ZodType<
  ResponsesWebSearchCallOutput$Outbound,
  z.ZodTypeDef,
  ResponsesWebSearchCallOutput
> = z.object({
  type: ResponsesWebSearchCallOutputType$outboundSchema,
  id: z.string(),
  status: ResponsesWebSearchCallOutputStatus$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesWebSearchCallOutput$ {
  /** @deprecated use `ResponsesWebSearchCallOutput$inboundSchema` instead. */
  export const inboundSchema = ResponsesWebSearchCallOutput$inboundSchema;
  /** @deprecated use `ResponsesWebSearchCallOutput$outboundSchema` instead. */
  export const outboundSchema = ResponsesWebSearchCallOutput$outboundSchema;
  /** @deprecated use `ResponsesWebSearchCallOutput$Outbound` instead. */
  export type Outbound = ResponsesWebSearchCallOutput$Outbound;
}

export function responsesWebSearchCallOutputToJSON(
  responsesWebSearchCallOutput: ResponsesWebSearchCallOutput,
): string {
  return JSON.stringify(
    ResponsesWebSearchCallOutput$outboundSchema.parse(
      responsesWebSearchCallOutput,
    ),
  );
}

export function responsesWebSearchCallOutputFromJSON(
  jsonString: string,
): SafeParseResult<ResponsesWebSearchCallOutput, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponsesWebSearchCallOutput$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponsesWebSearchCallOutput' from JSON`,
  );
}
