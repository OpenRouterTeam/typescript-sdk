/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  ResponseEasyInputMessage,
  ResponseEasyInputMessage$inboundSchema,
  ResponseEasyInputMessage$Outbound,
  ResponseEasyInputMessage$outboundSchema,
} from "./responseeasyinputmessage.js";
import {
  ResponseFunctionCallOutputItem,
  ResponseFunctionCallOutputItem$inboundSchema,
  ResponseFunctionCallOutputItem$Outbound,
  ResponseFunctionCallOutputItem$outboundSchema,
} from "./responsefunctioncalloutputitem.js";
import {
  ResponseFunctionToolCall,
  ResponseFunctionToolCall$inboundSchema,
  ResponseFunctionToolCall$Outbound,
  ResponseFunctionToolCall$outboundSchema,
} from "./responsefunctiontoolcall.js";
import {
  ResponseInputMessageItem,
  ResponseInputMessageItem$inboundSchema,
  ResponseInputMessageItem$Outbound,
  ResponseInputMessageItem$outboundSchema,
} from "./responseinputmessageitem.js";
import {
  ResponsesImageGenerationCall,
  ResponsesImageGenerationCall$inboundSchema,
  ResponsesImageGenerationCall$Outbound,
  ResponsesImageGenerationCall$outboundSchema,
} from "./responsesimagegenerationcall.js";
import {
  ResponsesOutputItem,
  ResponsesOutputItem$inboundSchema,
  ResponsesOutputItem$Outbound,
  ResponsesOutputItem$outboundSchema,
} from "./responsesoutputitem.js";
import {
  ResponsesOutputMessage,
  ResponsesOutputMessage$inboundSchema,
  ResponsesOutputMessage$Outbound,
  ResponsesOutputMessage$outboundSchema,
} from "./responsesoutputmessage.js";

/**
 * Input item for Responses API (can be messages, function calls, or output items)
 */
export type ResponseInputItem =
  | ResponsesOutputMessage
  | ResponseFunctionToolCall
  | ResponseFunctionCallOutputItem
  | ResponsesImageGenerationCall
  | ResponseInputMessageItem
  | ResponseEasyInputMessage
  | ResponsesOutputItem;

/** @internal */
export const ResponseInputItem$inboundSchema: z.ZodType<
  ResponseInputItem,
  z.ZodTypeDef,
  unknown
> = z.union([
  ResponsesOutputMessage$inboundSchema,
  ResponseFunctionToolCall$inboundSchema,
  ResponseFunctionCallOutputItem$inboundSchema,
  ResponsesImageGenerationCall$inboundSchema,
  ResponseInputMessageItem$inboundSchema,
  ResponseEasyInputMessage$inboundSchema,
  ResponsesOutputItem$inboundSchema,
]);

/** @internal */
export type ResponseInputItem$Outbound =
  | ResponsesOutputMessage$Outbound
  | ResponseFunctionToolCall$Outbound
  | ResponseFunctionCallOutputItem$Outbound
  | ResponsesImageGenerationCall$Outbound
  | ResponseInputMessageItem$Outbound
  | ResponseEasyInputMessage$Outbound
  | ResponsesOutputItem$Outbound;

/** @internal */
export const ResponseInputItem$outboundSchema: z.ZodType<
  ResponseInputItem$Outbound,
  z.ZodTypeDef,
  ResponseInputItem
> = z.union([
  ResponsesOutputMessage$outboundSchema,
  ResponseFunctionToolCall$outboundSchema,
  ResponseFunctionCallOutputItem$outboundSchema,
  ResponsesImageGenerationCall$outboundSchema,
  ResponseInputMessageItem$outboundSchema,
  ResponseEasyInputMessage$outboundSchema,
  ResponsesOutputItem$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseInputItem$ {
  /** @deprecated use `ResponseInputItem$inboundSchema` instead. */
  export const inboundSchema = ResponseInputItem$inboundSchema;
  /** @deprecated use `ResponseInputItem$outboundSchema` instead. */
  export const outboundSchema = ResponseInputItem$outboundSchema;
  /** @deprecated use `ResponseInputItem$Outbound` instead. */
  export type Outbound = ResponseInputItem$Outbound;
}

export function responseInputItemToJSON(
  responseInputItem: ResponseInputItem,
): string {
  return JSON.stringify(
    ResponseInputItem$outboundSchema.parse(responseInputItem),
  );
}

export function responseInputItemFromJSON(
  jsonString: string,
): SafeParseResult<ResponseInputItem, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponseInputItem$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponseInputItem' from JSON`,
  );
}
