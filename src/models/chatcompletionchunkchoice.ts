/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  ChatCompletionChunkChoiceDelta,
  ChatCompletionChunkChoiceDelta$inboundSchema,
  ChatCompletionChunkChoiceDelta$Outbound,
  ChatCompletionChunkChoiceDelta$outboundSchema,
} from "./chatcompletionchunkchoicedelta.js";
import {
  ChatCompletionTokenLogprobs,
  ChatCompletionTokenLogprobs$inboundSchema,
  ChatCompletionTokenLogprobs$Outbound,
  ChatCompletionTokenLogprobs$outboundSchema,
} from "./chatcompletiontokenlogprobs.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export const ChatCompletionChunkChoiceFinishReason = {
  ToolCalls: "tool_calls",
  Stop: "stop",
  Length: "length",
  ContentFilter: "content_filter",
  Error: "error",
} as const;
export type ChatCompletionChunkChoiceFinishReason = ClosedEnum<
  typeof ChatCompletionChunkChoiceFinishReason
>;

export type ChatCompletionChunkChoice = {
  delta: ChatCompletionChunkChoiceDelta;
  finishReason: ChatCompletionChunkChoiceFinishReason | null;
  index: number;
  logprobs?: ChatCompletionTokenLogprobs | null | undefined;
};

/** @internal */
export const ChatCompletionChunkChoiceFinishReason$inboundSchema:
  z.ZodNativeEnum<typeof ChatCompletionChunkChoiceFinishReason> = z.nativeEnum(
    ChatCompletionChunkChoiceFinishReason,
  );

/** @internal */
export const ChatCompletionChunkChoiceFinishReason$outboundSchema:
  z.ZodNativeEnum<typeof ChatCompletionChunkChoiceFinishReason> =
    ChatCompletionChunkChoiceFinishReason$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionChunkChoiceFinishReason$ {
  /** @deprecated use `ChatCompletionChunkChoiceFinishReason$inboundSchema` instead. */
  export const inboundSchema =
    ChatCompletionChunkChoiceFinishReason$inboundSchema;
  /** @deprecated use `ChatCompletionChunkChoiceFinishReason$outboundSchema` instead. */
  export const outboundSchema =
    ChatCompletionChunkChoiceFinishReason$outboundSchema;
}

/** @internal */
export const ChatCompletionChunkChoice$inboundSchema: z.ZodType<
  ChatCompletionChunkChoice,
  z.ZodTypeDef,
  unknown
> = z.object({
  delta: ChatCompletionChunkChoiceDelta$inboundSchema,
  finish_reason: z.nullable(
    ChatCompletionChunkChoiceFinishReason$inboundSchema,
  ),
  index: z.number(),
  logprobs: z.nullable(ChatCompletionTokenLogprobs$inboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    "finish_reason": "finishReason",
  });
});

/** @internal */
export type ChatCompletionChunkChoice$Outbound = {
  delta: ChatCompletionChunkChoiceDelta$Outbound;
  finish_reason: string | null;
  index: number;
  logprobs?: ChatCompletionTokenLogprobs$Outbound | null | undefined;
};

/** @internal */
export const ChatCompletionChunkChoice$outboundSchema: z.ZodType<
  ChatCompletionChunkChoice$Outbound,
  z.ZodTypeDef,
  ChatCompletionChunkChoice
> = z.object({
  delta: ChatCompletionChunkChoiceDelta$outboundSchema,
  finishReason: z.nullable(
    ChatCompletionChunkChoiceFinishReason$outboundSchema,
  ),
  index: z.number(),
  logprobs: z.nullable(ChatCompletionTokenLogprobs$outboundSchema).optional(),
}).transform((v) => {
  return remap$(v, {
    finishReason: "finish_reason",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionChunkChoice$ {
  /** @deprecated use `ChatCompletionChunkChoice$inboundSchema` instead. */
  export const inboundSchema = ChatCompletionChunkChoice$inboundSchema;
  /** @deprecated use `ChatCompletionChunkChoice$outboundSchema` instead. */
  export const outboundSchema = ChatCompletionChunkChoice$outboundSchema;
  /** @deprecated use `ChatCompletionChunkChoice$Outbound` instead. */
  export type Outbound = ChatCompletionChunkChoice$Outbound;
}

export function chatCompletionChunkChoiceToJSON(
  chatCompletionChunkChoice: ChatCompletionChunkChoice,
): string {
  return JSON.stringify(
    ChatCompletionChunkChoice$outboundSchema.parse(chatCompletionChunkChoice),
  );
}

export function chatCompletionChunkChoiceFromJSON(
  jsonString: string,
): SafeParseResult<ChatCompletionChunkChoice, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChatCompletionChunkChoice$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatCompletionChunkChoice' from JSON`,
  );
}
