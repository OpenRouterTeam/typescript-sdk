/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  ChatCompletionNamedToolChoice,
  ChatCompletionNamedToolChoice$inboundSchema,
  ChatCompletionNamedToolChoice$Outbound,
  ChatCompletionNamedToolChoice$outboundSchema,
} from "./chatcompletionnamedtoolchoice.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export const ChatCompletionToolChoiceOptionRequired = {
  Required: "required",
} as const;
export type ChatCompletionToolChoiceOptionRequired = ClosedEnum<
  typeof ChatCompletionToolChoiceOptionRequired
>;

export const ChatCompletionToolChoiceOptionAuto = {
  Auto: "auto",
} as const;
export type ChatCompletionToolChoiceOptionAuto = ClosedEnum<
  typeof ChatCompletionToolChoiceOptionAuto
>;

export const ChatCompletionToolChoiceOptionNone = {
  None: "none",
} as const;
export type ChatCompletionToolChoiceOptionNone = ClosedEnum<
  typeof ChatCompletionToolChoiceOptionNone
>;

/**
 * Tool choice configuration
 */
export type ChatCompletionToolChoiceOption =
  | ChatCompletionNamedToolChoice
  | ChatCompletionToolChoiceOptionNone
  | ChatCompletionToolChoiceOptionAuto
  | ChatCompletionToolChoiceOptionRequired;

/** @internal */
export const ChatCompletionToolChoiceOptionRequired$inboundSchema:
  z.ZodNativeEnum<typeof ChatCompletionToolChoiceOptionRequired> = z.nativeEnum(
    ChatCompletionToolChoiceOptionRequired,
  );

/** @internal */
export const ChatCompletionToolChoiceOptionRequired$outboundSchema:
  z.ZodNativeEnum<typeof ChatCompletionToolChoiceOptionRequired> =
    ChatCompletionToolChoiceOptionRequired$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionToolChoiceOptionRequired$ {
  /** @deprecated use `ChatCompletionToolChoiceOptionRequired$inboundSchema` instead. */
  export const inboundSchema =
    ChatCompletionToolChoiceOptionRequired$inboundSchema;
  /** @deprecated use `ChatCompletionToolChoiceOptionRequired$outboundSchema` instead. */
  export const outboundSchema =
    ChatCompletionToolChoiceOptionRequired$outboundSchema;
}

/** @internal */
export const ChatCompletionToolChoiceOptionAuto$inboundSchema: z.ZodNativeEnum<
  typeof ChatCompletionToolChoiceOptionAuto
> = z.nativeEnum(ChatCompletionToolChoiceOptionAuto);

/** @internal */
export const ChatCompletionToolChoiceOptionAuto$outboundSchema: z.ZodNativeEnum<
  typeof ChatCompletionToolChoiceOptionAuto
> = ChatCompletionToolChoiceOptionAuto$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionToolChoiceOptionAuto$ {
  /** @deprecated use `ChatCompletionToolChoiceOptionAuto$inboundSchema` instead. */
  export const inboundSchema = ChatCompletionToolChoiceOptionAuto$inboundSchema;
  /** @deprecated use `ChatCompletionToolChoiceOptionAuto$outboundSchema` instead. */
  export const outboundSchema =
    ChatCompletionToolChoiceOptionAuto$outboundSchema;
}

/** @internal */
export const ChatCompletionToolChoiceOptionNone$inboundSchema: z.ZodNativeEnum<
  typeof ChatCompletionToolChoiceOptionNone
> = z.nativeEnum(ChatCompletionToolChoiceOptionNone);

/** @internal */
export const ChatCompletionToolChoiceOptionNone$outboundSchema: z.ZodNativeEnum<
  typeof ChatCompletionToolChoiceOptionNone
> = ChatCompletionToolChoiceOptionNone$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionToolChoiceOptionNone$ {
  /** @deprecated use `ChatCompletionToolChoiceOptionNone$inboundSchema` instead. */
  export const inboundSchema = ChatCompletionToolChoiceOptionNone$inboundSchema;
  /** @deprecated use `ChatCompletionToolChoiceOptionNone$outboundSchema` instead. */
  export const outboundSchema =
    ChatCompletionToolChoiceOptionNone$outboundSchema;
}

/** @internal */
export const ChatCompletionToolChoiceOption$inboundSchema: z.ZodType<
  ChatCompletionToolChoiceOption,
  z.ZodTypeDef,
  unknown
> = z.union([
  ChatCompletionNamedToolChoice$inboundSchema,
  ChatCompletionToolChoiceOptionNone$inboundSchema,
  ChatCompletionToolChoiceOptionAuto$inboundSchema,
  ChatCompletionToolChoiceOptionRequired$inboundSchema,
]);

/** @internal */
export type ChatCompletionToolChoiceOption$Outbound =
  | ChatCompletionNamedToolChoice$Outbound
  | string
  | string
  | string;

/** @internal */
export const ChatCompletionToolChoiceOption$outboundSchema: z.ZodType<
  ChatCompletionToolChoiceOption$Outbound,
  z.ZodTypeDef,
  ChatCompletionToolChoiceOption
> = z.union([
  ChatCompletionNamedToolChoice$outboundSchema,
  ChatCompletionToolChoiceOptionNone$outboundSchema,
  ChatCompletionToolChoiceOptionAuto$outboundSchema,
  ChatCompletionToolChoiceOptionRequired$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionToolChoiceOption$ {
  /** @deprecated use `ChatCompletionToolChoiceOption$inboundSchema` instead. */
  export const inboundSchema = ChatCompletionToolChoiceOption$inboundSchema;
  /** @deprecated use `ChatCompletionToolChoiceOption$outboundSchema` instead. */
  export const outboundSchema = ChatCompletionToolChoiceOption$outboundSchema;
  /** @deprecated use `ChatCompletionToolChoiceOption$Outbound` instead. */
  export type Outbound = ChatCompletionToolChoiceOption$Outbound;
}

export function chatCompletionToolChoiceOptionToJSON(
  chatCompletionToolChoiceOption: ChatCompletionToolChoiceOption,
): string {
  return JSON.stringify(
    ChatCompletionToolChoiceOption$outboundSchema.parse(
      chatCompletionToolChoiceOption,
    ),
  );
}

export function chatCompletionToolChoiceOptionFromJSON(
  jsonString: string,
): SafeParseResult<ChatCompletionToolChoiceOption, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChatCompletionToolChoiceOption$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatCompletionToolChoiceOption' from JSON`,
  );
}
