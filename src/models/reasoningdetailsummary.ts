/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export const ReasoningDetailSummaryType = {
  ReasoningSummary: "reasoning.summary",
} as const;
export type ReasoningDetailSummaryType = ClosedEnum<
  typeof ReasoningDetailSummaryType
>;

export const ReasoningDetailSummaryFormat = {
  Unknown: "unknown",
  OpenaiResponsesV1: "openai-responses-v1",
  AnthropicClaudeV1: "anthropic-claude-v1",
} as const;
export type ReasoningDetailSummaryFormat = ClosedEnum<
  typeof ReasoningDetailSummaryFormat
>;

/**
 * Reasoning summary detail
 */
export type ReasoningDetailSummary = {
  type: ReasoningDetailSummaryType;
  summary: string;
  id?: string | null | undefined;
  format?: ReasoningDetailSummaryFormat | null | undefined;
  index?: number | undefined;
};

/** @internal */
export const ReasoningDetailSummaryType$inboundSchema: z.ZodNativeEnum<
  typeof ReasoningDetailSummaryType
> = z.nativeEnum(ReasoningDetailSummaryType);

/** @internal */
export const ReasoningDetailSummaryType$outboundSchema: z.ZodNativeEnum<
  typeof ReasoningDetailSummaryType
> = ReasoningDetailSummaryType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ReasoningDetailSummaryType$ {
  /** @deprecated use `ReasoningDetailSummaryType$inboundSchema` instead. */
  export const inboundSchema = ReasoningDetailSummaryType$inboundSchema;
  /** @deprecated use `ReasoningDetailSummaryType$outboundSchema` instead. */
  export const outboundSchema = ReasoningDetailSummaryType$outboundSchema;
}

/** @internal */
export const ReasoningDetailSummaryFormat$inboundSchema: z.ZodNativeEnum<
  typeof ReasoningDetailSummaryFormat
> = z.nativeEnum(ReasoningDetailSummaryFormat);

/** @internal */
export const ReasoningDetailSummaryFormat$outboundSchema: z.ZodNativeEnum<
  typeof ReasoningDetailSummaryFormat
> = ReasoningDetailSummaryFormat$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ReasoningDetailSummaryFormat$ {
  /** @deprecated use `ReasoningDetailSummaryFormat$inboundSchema` instead. */
  export const inboundSchema = ReasoningDetailSummaryFormat$inboundSchema;
  /** @deprecated use `ReasoningDetailSummaryFormat$outboundSchema` instead. */
  export const outboundSchema = ReasoningDetailSummaryFormat$outboundSchema;
}

/** @internal */
export const ReasoningDetailSummary$inboundSchema: z.ZodType<
  ReasoningDetailSummary,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: ReasoningDetailSummaryType$inboundSchema,
  summary: z.string(),
  id: z.nullable(z.string()).optional(),
  format: z.nullable(
    ReasoningDetailSummaryFormat$inboundSchema.default("anthropic-claude-v1"),
  ),
  index: z.number().optional(),
});

/** @internal */
export type ReasoningDetailSummary$Outbound = {
  type: string;
  summary: string;
  id?: string | null | undefined;
  format: string | null;
  index?: number | undefined;
};

/** @internal */
export const ReasoningDetailSummary$outboundSchema: z.ZodType<
  ReasoningDetailSummary$Outbound,
  z.ZodTypeDef,
  ReasoningDetailSummary
> = z.object({
  type: ReasoningDetailSummaryType$outboundSchema,
  summary: z.string(),
  id: z.nullable(z.string()).optional(),
  format: z.nullable(
    ReasoningDetailSummaryFormat$outboundSchema.default("anthropic-claude-v1"),
  ),
  index: z.number().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ReasoningDetailSummary$ {
  /** @deprecated use `ReasoningDetailSummary$inboundSchema` instead. */
  export const inboundSchema = ReasoningDetailSummary$inboundSchema;
  /** @deprecated use `ReasoningDetailSummary$outboundSchema` instead. */
  export const outboundSchema = ReasoningDetailSummary$outboundSchema;
  /** @deprecated use `ReasoningDetailSummary$Outbound` instead. */
  export type Outbound = ReasoningDetailSummary$Outbound;
}

export function reasoningDetailSummaryToJSON(
  reasoningDetailSummary: ReasoningDetailSummary,
): string {
  return JSON.stringify(
    ReasoningDetailSummary$outboundSchema.parse(reasoningDetailSummary),
  );
}

export function reasoningDetailSummaryFromJSON(
  jsonString: string,
): SafeParseResult<ReasoningDetailSummary, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ReasoningDetailSummary$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ReasoningDetailSummary' from JSON`,
  );
}
