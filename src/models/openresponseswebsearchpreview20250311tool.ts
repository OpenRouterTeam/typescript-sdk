/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v4";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  ResponsesSearchContextSize,
  ResponsesSearchContextSize$inboundSchema,
  ResponsesSearchContextSize$outboundSchema,
} from "./responsessearchcontextsize.js";
import {
  WebSearchPreviewToolUserLocation,
  WebSearchPreviewToolUserLocation$inboundSchema,
  WebSearchPreviewToolUserLocation$Outbound,
  WebSearchPreviewToolUserLocation$outboundSchema,
} from "./websearchpreviewtooluserlocation.js";

export const OpenResponsesWebSearchPreview20250311ToolType = {
  WebSearchPreview20250311: "web_search_preview_2025_03_11",
} as const;
export type OpenResponsesWebSearchPreview20250311ToolType = ClosedEnum<
  typeof OpenResponsesWebSearchPreview20250311ToolType
>;

/**
 * Web search preview tool configuration (2025-03-11 version)
 */
export type OpenResponsesWebSearchPreview20250311Tool = {
  type: OpenResponsesWebSearchPreview20250311ToolType;
  /**
   * Size of the search context for web search tools
   */
  searchContextSize?: ResponsesSearchContextSize | undefined;
  userLocation?: WebSearchPreviewToolUserLocation | null | undefined;
};

/** @internal */
export const OpenResponsesWebSearchPreview20250311ToolType$inboundSchema:
  z.ZodEnum<typeof OpenResponsesWebSearchPreview20250311ToolType> = z.enum(
    OpenResponsesWebSearchPreview20250311ToolType,
  );

/** @internal */
export const OpenResponsesWebSearchPreview20250311ToolType$outboundSchema:
  z.ZodEnum<typeof OpenResponsesWebSearchPreview20250311ToolType> =
    OpenResponsesWebSearchPreview20250311ToolType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesWebSearchPreview20250311ToolType$ {
  /** @deprecated use `OpenResponsesWebSearchPreview20250311ToolType$inboundSchema` instead. */
  export const inboundSchema =
    OpenResponsesWebSearchPreview20250311ToolType$inboundSchema;
  /** @deprecated use `OpenResponsesWebSearchPreview20250311ToolType$outboundSchema` instead. */
  export const outboundSchema =
    OpenResponsesWebSearchPreview20250311ToolType$outboundSchema;
}

/** @internal */
export const OpenResponsesWebSearchPreview20250311Tool$inboundSchema: z.ZodType<
  OpenResponsesWebSearchPreview20250311Tool,
  unknown
> = z.object({
  type: OpenResponsesWebSearchPreview20250311ToolType$inboundSchema,
  search_context_size: ResponsesSearchContextSize$inboundSchema.optional(),
  user_location: z.nullable(WebSearchPreviewToolUserLocation$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "search_context_size": "searchContextSize",
    "user_location": "userLocation",
  });
});

/** @internal */
export type OpenResponsesWebSearchPreview20250311Tool$Outbound = {
  type: string;
  search_context_size?: string | undefined;
  user_location?: WebSearchPreviewToolUserLocation$Outbound | null | undefined;
};

/** @internal */
export const OpenResponsesWebSearchPreview20250311Tool$outboundSchema:
  z.ZodType<
    OpenResponsesWebSearchPreview20250311Tool$Outbound,
    OpenResponsesWebSearchPreview20250311Tool
  > = z.object({
    type: OpenResponsesWebSearchPreview20250311ToolType$outboundSchema,
    searchContextSize: ResponsesSearchContextSize$outboundSchema.optional(),
    userLocation: z.nullable(WebSearchPreviewToolUserLocation$outboundSchema)
      .optional(),
  }).transform((v) => {
    return remap$(v, {
      searchContextSize: "search_context_size",
      userLocation: "user_location",
    });
  });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesWebSearchPreview20250311Tool$ {
  /** @deprecated use `OpenResponsesWebSearchPreview20250311Tool$inboundSchema` instead. */
  export const inboundSchema =
    OpenResponsesWebSearchPreview20250311Tool$inboundSchema;
  /** @deprecated use `OpenResponsesWebSearchPreview20250311Tool$outboundSchema` instead. */
  export const outboundSchema =
    OpenResponsesWebSearchPreview20250311Tool$outboundSchema;
  /** @deprecated use `OpenResponsesWebSearchPreview20250311Tool$Outbound` instead. */
  export type Outbound = OpenResponsesWebSearchPreview20250311Tool$Outbound;
}

export function openResponsesWebSearchPreview20250311ToolToJSON(
  openResponsesWebSearchPreview20250311Tool:
    OpenResponsesWebSearchPreview20250311Tool,
): string {
  return JSON.stringify(
    OpenResponsesWebSearchPreview20250311Tool$outboundSchema.parse(
      openResponsesWebSearchPreview20250311Tool,
    ),
  );
}

export function openResponsesWebSearchPreview20250311ToolFromJSON(
  jsonString: string,
): SafeParseResult<
  OpenResponsesWebSearchPreview20250311Tool,
  SDKValidationError
> {
  return safeParse(
    jsonString,
    (x) =>
      OpenResponsesWebSearchPreview20250311Tool$inboundSchema.parse(
        JSON.parse(x),
      ),
    `Failed to parse 'OpenResponsesWebSearchPreview20250311Tool' from JSON`,
  );
}
