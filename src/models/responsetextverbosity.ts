/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

export const ResponseTextVerbosity = {
  High: "high",
  Low: "low",
  Medium: "medium",
} as const;
export type ResponseTextVerbosity = OpenEnum<typeof ResponseTextVerbosity>;

/** @internal */
export const ResponseTextVerbosity$inboundSchema: z.ZodType<
  ResponseTextVerbosity,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(ResponseTextVerbosity),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const ResponseTextVerbosity$outboundSchema: z.ZodType<
  ResponseTextVerbosity,
  z.ZodTypeDef,
  ResponseTextVerbosity
> = z.union([
  z.nativeEnum(ResponseTextVerbosity),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseTextVerbosity$ {
  /** @deprecated use `ResponseTextVerbosity$inboundSchema` instead. */
  export const inboundSchema = ResponseTextVerbosity$inboundSchema;
  /** @deprecated use `ResponseTextVerbosity$outboundSchema` instead. */
  export const outboundSchema = ResponseTextVerbosity$outboundSchema;
}
