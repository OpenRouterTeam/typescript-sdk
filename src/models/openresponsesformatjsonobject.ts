/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export const OpenResponsesFormatJSONObjectType = {
  JsonObject: "json_object",
} as const;
export type OpenResponsesFormatJSONObjectType = ClosedEnum<
  typeof OpenResponsesFormatJSONObjectType
>;

/**
 * JSON object response format
 */
export type OpenResponsesFormatJSONObject = {
  type: OpenResponsesFormatJSONObjectType;
};

/** @internal */
export const OpenResponsesFormatJSONObjectType$inboundSchema: z.ZodNativeEnum<
  typeof OpenResponsesFormatJSONObjectType
> = z.nativeEnum(OpenResponsesFormatJSONObjectType);

/** @internal */
export const OpenResponsesFormatJSONObjectType$outboundSchema: z.ZodNativeEnum<
  typeof OpenResponsesFormatJSONObjectType
> = OpenResponsesFormatJSONObjectType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesFormatJSONObjectType$ {
  /** @deprecated use `OpenResponsesFormatJSONObjectType$inboundSchema` instead. */
  export const inboundSchema = OpenResponsesFormatJSONObjectType$inboundSchema;
  /** @deprecated use `OpenResponsesFormatJSONObjectType$outboundSchema` instead. */
  export const outboundSchema =
    OpenResponsesFormatJSONObjectType$outboundSchema;
}

/** @internal */
export const OpenResponsesFormatJSONObject$inboundSchema: z.ZodType<
  OpenResponsesFormatJSONObject,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: OpenResponsesFormatJSONObjectType$inboundSchema,
});

/** @internal */
export type OpenResponsesFormatJSONObject$Outbound = {
  type: string;
};

/** @internal */
export const OpenResponsesFormatJSONObject$outboundSchema: z.ZodType<
  OpenResponsesFormatJSONObject$Outbound,
  z.ZodTypeDef,
  OpenResponsesFormatJSONObject
> = z.object({
  type: OpenResponsesFormatJSONObjectType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesFormatJSONObject$ {
  /** @deprecated use `OpenResponsesFormatJSONObject$inboundSchema` instead. */
  export const inboundSchema = OpenResponsesFormatJSONObject$inboundSchema;
  /** @deprecated use `OpenResponsesFormatJSONObject$outboundSchema` instead. */
  export const outboundSchema = OpenResponsesFormatJSONObject$outboundSchema;
  /** @deprecated use `OpenResponsesFormatJSONObject$Outbound` instead. */
  export type Outbound = OpenResponsesFormatJSONObject$Outbound;
}

export function openResponsesFormatJSONObjectToJSON(
  openResponsesFormatJSONObject: OpenResponsesFormatJSONObject,
): string {
  return JSON.stringify(
    OpenResponsesFormatJSONObject$outboundSchema.parse(
      openResponsesFormatJSONObject,
    ),
  );
}

export function openResponsesFormatJSONObjectFromJSON(
  jsonString: string,
): SafeParseResult<OpenResponsesFormatJSONObject, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OpenResponsesFormatJSONObject$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OpenResponsesFormatJSONObject' from JSON`,
  );
}
