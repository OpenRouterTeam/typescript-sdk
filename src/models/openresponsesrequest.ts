/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * Request schema for Responses endpoint
 */
export type OpenResponsesRequest = {};

/** @internal */
export const OpenResponsesRequest$inboundSchema: z.ZodType<
  OpenResponsesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type OpenResponsesRequest$Outbound = {};

/** @internal */
export const OpenResponsesRequest$outboundSchema: z.ZodType<
  OpenResponsesRequest$Outbound,
  z.ZodTypeDef,
  OpenResponsesRequest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesRequest$ {
  /** @deprecated use `OpenResponsesRequest$inboundSchema` instead. */
  export const inboundSchema = OpenResponsesRequest$inboundSchema;
  /** @deprecated use `OpenResponsesRequest$outboundSchema` instead. */
  export const outboundSchema = OpenResponsesRequest$outboundSchema;
  /** @deprecated use `OpenResponsesRequest$Outbound` instead. */
  export type Outbound = OpenResponsesRequest$Outbound;
}

export function openResponsesRequestToJSON(
  openResponsesRequest: OpenResponsesRequest,
): string {
  return JSON.stringify(
    OpenResponsesRequest$outboundSchema.parse(openResponsesRequest),
  );
}

export function openResponsesRequestFromJSON(
  jsonString: string,
): SafeParseResult<OpenResponsesRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OpenResponsesRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OpenResponsesRequest' from JSON`,
  );
}
