/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  ResponseFunctionCallStatus,
  ResponseFunctionCallStatus$inboundSchema,
  ResponseFunctionCallStatus$outboundSchema,
} from "./responsefunctioncallstatus.js";

export const ResponseFunctionToolCallType = {
  FunctionCall: "function_call",
} as const;
export type ResponseFunctionToolCallType = ClosedEnum<
  typeof ResponseFunctionToolCallType
>;

/**
 * Function tool call in Responses API
 */
export type ResponseFunctionToolCall = {
  type: ResponseFunctionToolCallType;
  callId: string;
  name: string;
  arguments: string;
  id?: string | undefined;
  status?: ResponseFunctionCallStatus | undefined;
};

/** @internal */
export const ResponseFunctionToolCallType$inboundSchema: z.ZodNativeEnum<
  typeof ResponseFunctionToolCallType
> = z.nativeEnum(ResponseFunctionToolCallType);

/** @internal */
export const ResponseFunctionToolCallType$outboundSchema: z.ZodNativeEnum<
  typeof ResponseFunctionToolCallType
> = ResponseFunctionToolCallType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseFunctionToolCallType$ {
  /** @deprecated use `ResponseFunctionToolCallType$inboundSchema` instead. */
  export const inboundSchema = ResponseFunctionToolCallType$inboundSchema;
  /** @deprecated use `ResponseFunctionToolCallType$outboundSchema` instead. */
  export const outboundSchema = ResponseFunctionToolCallType$outboundSchema;
}

/** @internal */
export const ResponseFunctionToolCall$inboundSchema: z.ZodType<
  ResponseFunctionToolCall,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: ResponseFunctionToolCallType$inboundSchema,
  call_id: z.string(),
  name: z.string(),
  arguments: z.string(),
  id: z.string().optional(),
  status: ResponseFunctionCallStatus$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "call_id": "callId",
  });
});

/** @internal */
export type ResponseFunctionToolCall$Outbound = {
  type: string;
  call_id: string;
  name: string;
  arguments: string;
  id?: string | undefined;
  status?: string | undefined;
};

/** @internal */
export const ResponseFunctionToolCall$outboundSchema: z.ZodType<
  ResponseFunctionToolCall$Outbound,
  z.ZodTypeDef,
  ResponseFunctionToolCall
> = z.object({
  type: ResponseFunctionToolCallType$outboundSchema,
  callId: z.string(),
  name: z.string(),
  arguments: z.string(),
  id: z.string().optional(),
  status: ResponseFunctionCallStatus$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    callId: "call_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseFunctionToolCall$ {
  /** @deprecated use `ResponseFunctionToolCall$inboundSchema` instead. */
  export const inboundSchema = ResponseFunctionToolCall$inboundSchema;
  /** @deprecated use `ResponseFunctionToolCall$outboundSchema` instead. */
  export const outboundSchema = ResponseFunctionToolCall$outboundSchema;
  /** @deprecated use `ResponseFunctionToolCall$Outbound` instead. */
  export type Outbound = ResponseFunctionToolCall$Outbound;
}

export function responseFunctionToolCallToJSON(
  responseFunctionToolCall: ResponseFunctionToolCall,
): string {
  return JSON.stringify(
    ResponseFunctionToolCall$outboundSchema.parse(responseFunctionToolCall),
  );
}

export function responseFunctionToolCallFromJSON(
  jsonString: string,
): SafeParseResult<ResponseFunctionToolCall, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponseFunctionToolCall$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponseFunctionToolCall' from JSON`,
  );
}
