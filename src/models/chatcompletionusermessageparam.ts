/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import {
  ChatCompletionContentPart,
  ChatCompletionContentPart$inboundSchema,
  ChatCompletionContentPart$Outbound,
  ChatCompletionContentPart$outboundSchema,
} from "./chatcompletioncontentpart.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ChatCompletionUserMessageParamContent =
  | string
  | Array<ChatCompletionContentPart>;

export type ChatCompletionUserMessageParam = {
  role: "user";
  content: string | Array<ChatCompletionContentPart>;
  name?: string | undefined;
};

/** @internal */
export const ChatCompletionUserMessageParamContent$inboundSchema: z.ZodType<
  ChatCompletionUserMessageParamContent,
  z.ZodTypeDef,
  unknown
> = z.union([z.string(), z.array(ChatCompletionContentPart$inboundSchema)]);

/** @internal */
export type ChatCompletionUserMessageParamContent$Outbound =
  | string
  | Array<ChatCompletionContentPart$Outbound>;

/** @internal */
export const ChatCompletionUserMessageParamContent$outboundSchema: z.ZodType<
  ChatCompletionUserMessageParamContent$Outbound,
  z.ZodTypeDef,
  ChatCompletionUserMessageParamContent
> = z.union([z.string(), z.array(ChatCompletionContentPart$outboundSchema)]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionUserMessageParamContent$ {
  /** @deprecated use `ChatCompletionUserMessageParamContent$inboundSchema` instead. */
  export const inboundSchema =
    ChatCompletionUserMessageParamContent$inboundSchema;
  /** @deprecated use `ChatCompletionUserMessageParamContent$outboundSchema` instead. */
  export const outboundSchema =
    ChatCompletionUserMessageParamContent$outboundSchema;
  /** @deprecated use `ChatCompletionUserMessageParamContent$Outbound` instead. */
  export type Outbound = ChatCompletionUserMessageParamContent$Outbound;
}

export function chatCompletionUserMessageParamContentToJSON(
  chatCompletionUserMessageParamContent: ChatCompletionUserMessageParamContent,
): string {
  return JSON.stringify(
    ChatCompletionUserMessageParamContent$outboundSchema.parse(
      chatCompletionUserMessageParamContent,
    ),
  );
}

export function chatCompletionUserMessageParamContentFromJSON(
  jsonString: string,
): SafeParseResult<ChatCompletionUserMessageParamContent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ChatCompletionUserMessageParamContent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatCompletionUserMessageParamContent' from JSON`,
  );
}

/** @internal */
export const ChatCompletionUserMessageParam$inboundSchema: z.ZodType<
  ChatCompletionUserMessageParam,
  z.ZodTypeDef,
  unknown
> = z.object({
  role: z.literal("user"),
  content: z.union([
    z.string(),
    z.array(ChatCompletionContentPart$inboundSchema),
  ]),
  name: z.string().optional(),
});

/** @internal */
export type ChatCompletionUserMessageParam$Outbound = {
  role: "user";
  content: string | Array<ChatCompletionContentPart$Outbound>;
  name?: string | undefined;
};

/** @internal */
export const ChatCompletionUserMessageParam$outboundSchema: z.ZodType<
  ChatCompletionUserMessageParam$Outbound,
  z.ZodTypeDef,
  ChatCompletionUserMessageParam
> = z.object({
  role: z.literal("user"),
  content: z.union([
    z.string(),
    z.array(ChatCompletionContentPart$outboundSchema),
  ]),
  name: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionUserMessageParam$ {
  /** @deprecated use `ChatCompletionUserMessageParam$inboundSchema` instead. */
  export const inboundSchema = ChatCompletionUserMessageParam$inboundSchema;
  /** @deprecated use `ChatCompletionUserMessageParam$outboundSchema` instead. */
  export const outboundSchema = ChatCompletionUserMessageParam$outboundSchema;
  /** @deprecated use `ChatCompletionUserMessageParam$Outbound` instead. */
  export type Outbound = ChatCompletionUserMessageParam$Outbound;
}

export function chatCompletionUserMessageParamToJSON(
  chatCompletionUserMessageParam: ChatCompletionUserMessageParam,
): string {
  return JSON.stringify(
    ChatCompletionUserMessageParam$outboundSchema.parse(
      chatCompletionUserMessageParam,
    ),
  );
}

export function chatCompletionUserMessageParamFromJSON(
  jsonString: string,
): SafeParseResult<ChatCompletionUserMessageParam, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChatCompletionUserMessageParam$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatCompletionUserMessageParam' from JSON`,
  );
}
