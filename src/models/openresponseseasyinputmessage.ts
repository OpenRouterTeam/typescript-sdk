/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v4";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  OpenResponsesInputContent,
  OpenResponsesInputContent$inboundSchema,
  OpenResponsesInputContent$Outbound,
  OpenResponsesInputContent$outboundSchema,
} from "./openresponsesinputcontent.js";

export const OpenResponsesEasyInputMessageType = {
  Message: "message",
} as const;
export type OpenResponsesEasyInputMessageType = ClosedEnum<
  typeof OpenResponsesEasyInputMessageType
>;

export const OpenResponsesEasyInputMessageRoleDeveloper = {
  Developer: "developer",
} as const;
export type OpenResponsesEasyInputMessageRoleDeveloper = ClosedEnum<
  typeof OpenResponsesEasyInputMessageRoleDeveloper
>;

export const OpenResponsesEasyInputMessageRoleAssistant = {
  Assistant: "assistant",
} as const;
export type OpenResponsesEasyInputMessageRoleAssistant = ClosedEnum<
  typeof OpenResponsesEasyInputMessageRoleAssistant
>;

export const OpenResponsesEasyInputMessageRoleSystem = {
  System: "system",
} as const;
export type OpenResponsesEasyInputMessageRoleSystem = ClosedEnum<
  typeof OpenResponsesEasyInputMessageRoleSystem
>;

export const OpenResponsesEasyInputMessageRoleUser = {
  User: "user",
} as const;
export type OpenResponsesEasyInputMessageRoleUser = ClosedEnum<
  typeof OpenResponsesEasyInputMessageRoleUser
>;

export type OpenResponsesEasyInputMessageRoleUnion =
  | OpenResponsesEasyInputMessageRoleUser
  | OpenResponsesEasyInputMessageRoleSystem
  | OpenResponsesEasyInputMessageRoleAssistant
  | OpenResponsesEasyInputMessageRoleDeveloper;

export type OpenResponsesEasyInputMessageContent =
  | Array<OpenResponsesInputContent>
  | string;

/**
 * Simplified input message format that accepts string or array content
 */
export type OpenResponsesEasyInputMessage = {
  type?: OpenResponsesEasyInputMessageType | undefined;
  role:
    | OpenResponsesEasyInputMessageRoleUser
    | OpenResponsesEasyInputMessageRoleSystem
    | OpenResponsesEasyInputMessageRoleAssistant
    | OpenResponsesEasyInputMessageRoleDeveloper;
  content: Array<OpenResponsesInputContent> | string;
};

/** @internal */
export const OpenResponsesEasyInputMessageType$inboundSchema: z.ZodEnum<
  typeof OpenResponsesEasyInputMessageType
> = z.enum(OpenResponsesEasyInputMessageType);

/** @internal */
export const OpenResponsesEasyInputMessageType$outboundSchema: z.ZodEnum<
  typeof OpenResponsesEasyInputMessageType
> = OpenResponsesEasyInputMessageType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesEasyInputMessageType$ {
  /** @deprecated use `OpenResponsesEasyInputMessageType$inboundSchema` instead. */
  export const inboundSchema = OpenResponsesEasyInputMessageType$inboundSchema;
  /** @deprecated use `OpenResponsesEasyInputMessageType$outboundSchema` instead. */
  export const outboundSchema =
    OpenResponsesEasyInputMessageType$outboundSchema;
}

/** @internal */
export const OpenResponsesEasyInputMessageRoleDeveloper$inboundSchema:
  z.ZodEnum<typeof OpenResponsesEasyInputMessageRoleDeveloper> = z.enum(
    OpenResponsesEasyInputMessageRoleDeveloper,
  );

/** @internal */
export const OpenResponsesEasyInputMessageRoleDeveloper$outboundSchema:
  z.ZodEnum<typeof OpenResponsesEasyInputMessageRoleDeveloper> =
    OpenResponsesEasyInputMessageRoleDeveloper$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesEasyInputMessageRoleDeveloper$ {
  /** @deprecated use `OpenResponsesEasyInputMessageRoleDeveloper$inboundSchema` instead. */
  export const inboundSchema =
    OpenResponsesEasyInputMessageRoleDeveloper$inboundSchema;
  /** @deprecated use `OpenResponsesEasyInputMessageRoleDeveloper$outboundSchema` instead. */
  export const outboundSchema =
    OpenResponsesEasyInputMessageRoleDeveloper$outboundSchema;
}

/** @internal */
export const OpenResponsesEasyInputMessageRoleAssistant$inboundSchema:
  z.ZodEnum<typeof OpenResponsesEasyInputMessageRoleAssistant> = z.enum(
    OpenResponsesEasyInputMessageRoleAssistant,
  );

/** @internal */
export const OpenResponsesEasyInputMessageRoleAssistant$outboundSchema:
  z.ZodEnum<typeof OpenResponsesEasyInputMessageRoleAssistant> =
    OpenResponsesEasyInputMessageRoleAssistant$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesEasyInputMessageRoleAssistant$ {
  /** @deprecated use `OpenResponsesEasyInputMessageRoleAssistant$inboundSchema` instead. */
  export const inboundSchema =
    OpenResponsesEasyInputMessageRoleAssistant$inboundSchema;
  /** @deprecated use `OpenResponsesEasyInputMessageRoleAssistant$outboundSchema` instead. */
  export const outboundSchema =
    OpenResponsesEasyInputMessageRoleAssistant$outboundSchema;
}

/** @internal */
export const OpenResponsesEasyInputMessageRoleSystem$inboundSchema: z.ZodEnum<
  typeof OpenResponsesEasyInputMessageRoleSystem
> = z.enum(OpenResponsesEasyInputMessageRoleSystem);

/** @internal */
export const OpenResponsesEasyInputMessageRoleSystem$outboundSchema: z.ZodEnum<
  typeof OpenResponsesEasyInputMessageRoleSystem
> = OpenResponsesEasyInputMessageRoleSystem$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesEasyInputMessageRoleSystem$ {
  /** @deprecated use `OpenResponsesEasyInputMessageRoleSystem$inboundSchema` instead. */
  export const inboundSchema =
    OpenResponsesEasyInputMessageRoleSystem$inboundSchema;
  /** @deprecated use `OpenResponsesEasyInputMessageRoleSystem$outboundSchema` instead. */
  export const outboundSchema =
    OpenResponsesEasyInputMessageRoleSystem$outboundSchema;
}

/** @internal */
export const OpenResponsesEasyInputMessageRoleUser$inboundSchema: z.ZodEnum<
  typeof OpenResponsesEasyInputMessageRoleUser
> = z.enum(OpenResponsesEasyInputMessageRoleUser);

/** @internal */
export const OpenResponsesEasyInputMessageRoleUser$outboundSchema: z.ZodEnum<
  typeof OpenResponsesEasyInputMessageRoleUser
> = OpenResponsesEasyInputMessageRoleUser$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesEasyInputMessageRoleUser$ {
  /** @deprecated use `OpenResponsesEasyInputMessageRoleUser$inboundSchema` instead. */
  export const inboundSchema =
    OpenResponsesEasyInputMessageRoleUser$inboundSchema;
  /** @deprecated use `OpenResponsesEasyInputMessageRoleUser$outboundSchema` instead. */
  export const outboundSchema =
    OpenResponsesEasyInputMessageRoleUser$outboundSchema;
}

/** @internal */
export const OpenResponsesEasyInputMessageRoleUnion$inboundSchema: z.ZodType<
  OpenResponsesEasyInputMessageRoleUnion,
  unknown
> = z.union([
  OpenResponsesEasyInputMessageRoleUser$inboundSchema,
  OpenResponsesEasyInputMessageRoleSystem$inboundSchema,
  OpenResponsesEasyInputMessageRoleAssistant$inboundSchema,
  OpenResponsesEasyInputMessageRoleDeveloper$inboundSchema,
]);

/** @internal */
export type OpenResponsesEasyInputMessageRoleUnion$Outbound =
  | string
  | string
  | string
  | string;

/** @internal */
export const OpenResponsesEasyInputMessageRoleUnion$outboundSchema: z.ZodType<
  OpenResponsesEasyInputMessageRoleUnion$Outbound,
  OpenResponsesEasyInputMessageRoleUnion
> = z.union([
  OpenResponsesEasyInputMessageRoleUser$outboundSchema,
  OpenResponsesEasyInputMessageRoleSystem$outboundSchema,
  OpenResponsesEasyInputMessageRoleAssistant$outboundSchema,
  OpenResponsesEasyInputMessageRoleDeveloper$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesEasyInputMessageRoleUnion$ {
  /** @deprecated use `OpenResponsesEasyInputMessageRoleUnion$inboundSchema` instead. */
  export const inboundSchema =
    OpenResponsesEasyInputMessageRoleUnion$inboundSchema;
  /** @deprecated use `OpenResponsesEasyInputMessageRoleUnion$outboundSchema` instead. */
  export const outboundSchema =
    OpenResponsesEasyInputMessageRoleUnion$outboundSchema;
  /** @deprecated use `OpenResponsesEasyInputMessageRoleUnion$Outbound` instead. */
  export type Outbound = OpenResponsesEasyInputMessageRoleUnion$Outbound;
}

export function openResponsesEasyInputMessageRoleUnionToJSON(
  openResponsesEasyInputMessageRoleUnion:
    OpenResponsesEasyInputMessageRoleUnion,
): string {
  return JSON.stringify(
    OpenResponsesEasyInputMessageRoleUnion$outboundSchema.parse(
      openResponsesEasyInputMessageRoleUnion,
    ),
  );
}

export function openResponsesEasyInputMessageRoleUnionFromJSON(
  jsonString: string,
): SafeParseResult<OpenResponsesEasyInputMessageRoleUnion, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      OpenResponsesEasyInputMessageRoleUnion$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OpenResponsesEasyInputMessageRoleUnion' from JSON`,
  );
}

/** @internal */
export const OpenResponsesEasyInputMessageContent$inboundSchema: z.ZodType<
  OpenResponsesEasyInputMessageContent,
  unknown
> = z.union([z.array(OpenResponsesInputContent$inboundSchema), z.string()]);

/** @internal */
export type OpenResponsesEasyInputMessageContent$Outbound =
  | Array<OpenResponsesInputContent$Outbound>
  | string;

/** @internal */
export const OpenResponsesEasyInputMessageContent$outboundSchema: z.ZodType<
  OpenResponsesEasyInputMessageContent$Outbound,
  OpenResponsesEasyInputMessageContent
> = z.union([z.array(OpenResponsesInputContent$outboundSchema), z.string()]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesEasyInputMessageContent$ {
  /** @deprecated use `OpenResponsesEasyInputMessageContent$inboundSchema` instead. */
  export const inboundSchema =
    OpenResponsesEasyInputMessageContent$inboundSchema;
  /** @deprecated use `OpenResponsesEasyInputMessageContent$outboundSchema` instead. */
  export const outboundSchema =
    OpenResponsesEasyInputMessageContent$outboundSchema;
  /** @deprecated use `OpenResponsesEasyInputMessageContent$Outbound` instead. */
  export type Outbound = OpenResponsesEasyInputMessageContent$Outbound;
}

export function openResponsesEasyInputMessageContentToJSON(
  openResponsesEasyInputMessageContent: OpenResponsesEasyInputMessageContent,
): string {
  return JSON.stringify(
    OpenResponsesEasyInputMessageContent$outboundSchema.parse(
      openResponsesEasyInputMessageContent,
    ),
  );
}

export function openResponsesEasyInputMessageContentFromJSON(
  jsonString: string,
): SafeParseResult<OpenResponsesEasyInputMessageContent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      OpenResponsesEasyInputMessageContent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OpenResponsesEasyInputMessageContent' from JSON`,
  );
}

/** @internal */
export const OpenResponsesEasyInputMessage$inboundSchema: z.ZodType<
  OpenResponsesEasyInputMessage,
  unknown
> = z.object({
  type: OpenResponsesEasyInputMessageType$inboundSchema.optional(),
  role: z.union([
    OpenResponsesEasyInputMessageRoleUser$inboundSchema,
    OpenResponsesEasyInputMessageRoleSystem$inboundSchema,
    OpenResponsesEasyInputMessageRoleAssistant$inboundSchema,
    OpenResponsesEasyInputMessageRoleDeveloper$inboundSchema,
  ]),
  content: z.union([
    z.array(OpenResponsesInputContent$inboundSchema),
    z.string(),
  ]),
});

/** @internal */
export type OpenResponsesEasyInputMessage$Outbound = {
  type?: string | undefined;
  role: string | string | string | string;
  content: Array<OpenResponsesInputContent$Outbound> | string;
};

/** @internal */
export const OpenResponsesEasyInputMessage$outboundSchema: z.ZodType<
  OpenResponsesEasyInputMessage$Outbound,
  OpenResponsesEasyInputMessage
> = z.object({
  type: OpenResponsesEasyInputMessageType$outboundSchema.optional(),
  role: z.union([
    OpenResponsesEasyInputMessageRoleUser$outboundSchema,
    OpenResponsesEasyInputMessageRoleSystem$outboundSchema,
    OpenResponsesEasyInputMessageRoleAssistant$outboundSchema,
    OpenResponsesEasyInputMessageRoleDeveloper$outboundSchema,
  ]),
  content: z.union([
    z.array(OpenResponsesInputContent$outboundSchema),
    z.string(),
  ]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesEasyInputMessage$ {
  /** @deprecated use `OpenResponsesEasyInputMessage$inboundSchema` instead. */
  export const inboundSchema = OpenResponsesEasyInputMessage$inboundSchema;
  /** @deprecated use `OpenResponsesEasyInputMessage$outboundSchema` instead. */
  export const outboundSchema = OpenResponsesEasyInputMessage$outboundSchema;
  /** @deprecated use `OpenResponsesEasyInputMessage$Outbound` instead. */
  export type Outbound = OpenResponsesEasyInputMessage$Outbound;
}

export function openResponsesEasyInputMessageToJSON(
  openResponsesEasyInputMessage: OpenResponsesEasyInputMessage,
): string {
  return JSON.stringify(
    OpenResponsesEasyInputMessage$outboundSchema.parse(
      openResponsesEasyInputMessage,
    ),
  );
}

export function openResponsesEasyInputMessageFromJSON(
  jsonString: string,
): SafeParseResult<OpenResponsesEasyInputMessage, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OpenResponsesEasyInputMessage$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OpenResponsesEasyInputMessage' from JSON`,
  );
}
