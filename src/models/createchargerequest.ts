/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * Create a Coinbase charge for crypto payment
 */
export type CreateChargeRequest = {};

/** @internal */
export const CreateChargeRequest$inboundSchema: z.ZodType<
  CreateChargeRequest,
  z.ZodTypeDef,
  unknown
> = z.object({});

/** @internal */
export type CreateChargeRequest$Outbound = {};

/** @internal */
export const CreateChargeRequest$outboundSchema: z.ZodType<
  CreateChargeRequest$Outbound,
  z.ZodTypeDef,
  CreateChargeRequest
> = z.object({});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateChargeRequest$ {
  /** @deprecated use `CreateChargeRequest$inboundSchema` instead. */
  export const inboundSchema = CreateChargeRequest$inboundSchema;
  /** @deprecated use `CreateChargeRequest$outboundSchema` instead. */
  export const outboundSchema = CreateChargeRequest$outboundSchema;
  /** @deprecated use `CreateChargeRequest$Outbound` instead. */
  export type Outbound = CreateChargeRequest$Outbound;
}

export function createChargeRequestToJSON(
  createChargeRequest: CreateChargeRequest,
): string {
  return JSON.stringify(
    CreateChargeRequest$outboundSchema.parse(createChargeRequest),
  );
}

export function createChargeRequestFromJSON(
  jsonString: string,
): SafeParseResult<CreateChargeRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateChargeRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateChargeRequest' from JSON`,
  );
}
