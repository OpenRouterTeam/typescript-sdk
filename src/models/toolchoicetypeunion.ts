/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export const ToolChoiceTypeUnionCodeInterpreter = {
  CodeInterpreter: "code_interpreter",
} as const;
export type ToolChoiceTypeUnionCodeInterpreter = ClosedEnum<
  typeof ToolChoiceTypeUnionCodeInterpreter
>;

export const ToolChoiceTypeUnionComputerUsePreview = {
  ComputerUsePreview: "computer_use_preview",
} as const;
export type ToolChoiceTypeUnionComputerUsePreview = ClosedEnum<
  typeof ToolChoiceTypeUnionComputerUsePreview
>;

export const ToolChoiceTypeUnionWebSearchPreview20250311 = {
  WebSearchPreview20250311: "web_search_preview_2025_03_11",
} as const;
export type ToolChoiceTypeUnionWebSearchPreview20250311 = ClosedEnum<
  typeof ToolChoiceTypeUnionWebSearchPreview20250311
>;

export const ToolChoiceTypeUnionWebSearchPreview = {
  WebSearchPreview: "web_search_preview",
} as const;
export type ToolChoiceTypeUnionWebSearchPreview = ClosedEnum<
  typeof ToolChoiceTypeUnionWebSearchPreview
>;

export const ToolChoiceTypeUnionFileSearch = {
  FileSearch: "file_search",
} as const;
export type ToolChoiceTypeUnionFileSearch = ClosedEnum<
  typeof ToolChoiceTypeUnionFileSearch
>;

export type ToolChoiceTypeUnion =
  | ToolChoiceTypeUnionFileSearch
  | ToolChoiceTypeUnionWebSearchPreview
  | ToolChoiceTypeUnionWebSearchPreview20250311
  | ToolChoiceTypeUnionComputerUsePreview
  | ToolChoiceTypeUnionCodeInterpreter;

/** @internal */
export const ToolChoiceTypeUnionCodeInterpreter$inboundSchema: z.ZodNativeEnum<
  typeof ToolChoiceTypeUnionCodeInterpreter
> = z.nativeEnum(ToolChoiceTypeUnionCodeInterpreter);

/** @internal */
export const ToolChoiceTypeUnionCodeInterpreter$outboundSchema: z.ZodNativeEnum<
  typeof ToolChoiceTypeUnionCodeInterpreter
> = ToolChoiceTypeUnionCodeInterpreter$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolChoiceTypeUnionCodeInterpreter$ {
  /** @deprecated use `ToolChoiceTypeUnionCodeInterpreter$inboundSchema` instead. */
  export const inboundSchema = ToolChoiceTypeUnionCodeInterpreter$inboundSchema;
  /** @deprecated use `ToolChoiceTypeUnionCodeInterpreter$outboundSchema` instead. */
  export const outboundSchema =
    ToolChoiceTypeUnionCodeInterpreter$outboundSchema;
}

/** @internal */
export const ToolChoiceTypeUnionComputerUsePreview$inboundSchema:
  z.ZodNativeEnum<typeof ToolChoiceTypeUnionComputerUsePreview> = z.nativeEnum(
    ToolChoiceTypeUnionComputerUsePreview,
  );

/** @internal */
export const ToolChoiceTypeUnionComputerUsePreview$outboundSchema:
  z.ZodNativeEnum<typeof ToolChoiceTypeUnionComputerUsePreview> =
    ToolChoiceTypeUnionComputerUsePreview$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolChoiceTypeUnionComputerUsePreview$ {
  /** @deprecated use `ToolChoiceTypeUnionComputerUsePreview$inboundSchema` instead. */
  export const inboundSchema =
    ToolChoiceTypeUnionComputerUsePreview$inboundSchema;
  /** @deprecated use `ToolChoiceTypeUnionComputerUsePreview$outboundSchema` instead. */
  export const outboundSchema =
    ToolChoiceTypeUnionComputerUsePreview$outboundSchema;
}

/** @internal */
export const ToolChoiceTypeUnionWebSearchPreview20250311$inboundSchema:
  z.ZodNativeEnum<typeof ToolChoiceTypeUnionWebSearchPreview20250311> = z
    .nativeEnum(ToolChoiceTypeUnionWebSearchPreview20250311);

/** @internal */
export const ToolChoiceTypeUnionWebSearchPreview20250311$outboundSchema:
  z.ZodNativeEnum<typeof ToolChoiceTypeUnionWebSearchPreview20250311> =
    ToolChoiceTypeUnionWebSearchPreview20250311$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolChoiceTypeUnionWebSearchPreview20250311$ {
  /** @deprecated use `ToolChoiceTypeUnionWebSearchPreview20250311$inboundSchema` instead. */
  export const inboundSchema =
    ToolChoiceTypeUnionWebSearchPreview20250311$inboundSchema;
  /** @deprecated use `ToolChoiceTypeUnionWebSearchPreview20250311$outboundSchema` instead. */
  export const outboundSchema =
    ToolChoiceTypeUnionWebSearchPreview20250311$outboundSchema;
}

/** @internal */
export const ToolChoiceTypeUnionWebSearchPreview$inboundSchema: z.ZodNativeEnum<
  typeof ToolChoiceTypeUnionWebSearchPreview
> = z.nativeEnum(ToolChoiceTypeUnionWebSearchPreview);

/** @internal */
export const ToolChoiceTypeUnionWebSearchPreview$outboundSchema:
  z.ZodNativeEnum<typeof ToolChoiceTypeUnionWebSearchPreview> =
    ToolChoiceTypeUnionWebSearchPreview$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolChoiceTypeUnionWebSearchPreview$ {
  /** @deprecated use `ToolChoiceTypeUnionWebSearchPreview$inboundSchema` instead. */
  export const inboundSchema =
    ToolChoiceTypeUnionWebSearchPreview$inboundSchema;
  /** @deprecated use `ToolChoiceTypeUnionWebSearchPreview$outboundSchema` instead. */
  export const outboundSchema =
    ToolChoiceTypeUnionWebSearchPreview$outboundSchema;
}

/** @internal */
export const ToolChoiceTypeUnionFileSearch$inboundSchema: z.ZodNativeEnum<
  typeof ToolChoiceTypeUnionFileSearch
> = z.nativeEnum(ToolChoiceTypeUnionFileSearch);

/** @internal */
export const ToolChoiceTypeUnionFileSearch$outboundSchema: z.ZodNativeEnum<
  typeof ToolChoiceTypeUnionFileSearch
> = ToolChoiceTypeUnionFileSearch$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolChoiceTypeUnionFileSearch$ {
  /** @deprecated use `ToolChoiceTypeUnionFileSearch$inboundSchema` instead. */
  export const inboundSchema = ToolChoiceTypeUnionFileSearch$inboundSchema;
  /** @deprecated use `ToolChoiceTypeUnionFileSearch$outboundSchema` instead. */
  export const outboundSchema = ToolChoiceTypeUnionFileSearch$outboundSchema;
}

/** @internal */
export const ToolChoiceTypeUnion$inboundSchema: z.ZodType<
  ToolChoiceTypeUnion,
  z.ZodTypeDef,
  unknown
> = z.union([
  ToolChoiceTypeUnionFileSearch$inboundSchema,
  ToolChoiceTypeUnionWebSearchPreview$inboundSchema,
  ToolChoiceTypeUnionWebSearchPreview20250311$inboundSchema,
  ToolChoiceTypeUnionComputerUsePreview$inboundSchema,
  ToolChoiceTypeUnionCodeInterpreter$inboundSchema,
]);

/** @internal */
export type ToolChoiceTypeUnion$Outbound =
  | string
  | string
  | string
  | string
  | string;

/** @internal */
export const ToolChoiceTypeUnion$outboundSchema: z.ZodType<
  ToolChoiceTypeUnion$Outbound,
  z.ZodTypeDef,
  ToolChoiceTypeUnion
> = z.union([
  ToolChoiceTypeUnionFileSearch$outboundSchema,
  ToolChoiceTypeUnionWebSearchPreview$outboundSchema,
  ToolChoiceTypeUnionWebSearchPreview20250311$outboundSchema,
  ToolChoiceTypeUnionComputerUsePreview$outboundSchema,
  ToolChoiceTypeUnionCodeInterpreter$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ToolChoiceTypeUnion$ {
  /** @deprecated use `ToolChoiceTypeUnion$inboundSchema` instead. */
  export const inboundSchema = ToolChoiceTypeUnion$inboundSchema;
  /** @deprecated use `ToolChoiceTypeUnion$outboundSchema` instead. */
  export const outboundSchema = ToolChoiceTypeUnion$outboundSchema;
  /** @deprecated use `ToolChoiceTypeUnion$Outbound` instead. */
  export type Outbound = ToolChoiceTypeUnion$Outbound;
}

export function toolChoiceTypeUnionToJSON(
  toolChoiceTypeUnion: ToolChoiceTypeUnion,
): string {
  return JSON.stringify(
    ToolChoiceTypeUnion$outboundSchema.parse(toolChoiceTypeUnion),
  );
}

export function toolChoiceTypeUnionFromJSON(
  jsonString: string,
): SafeParseResult<ToolChoiceTypeUnion, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ToolChoiceTypeUnion$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ToolChoiceTypeUnion' from JSON`,
  );
}
