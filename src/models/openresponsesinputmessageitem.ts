/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  OpenResponsesInputContent,
  OpenResponsesInputContent$inboundSchema,
  OpenResponsesInputContent$Outbound,
  OpenResponsesInputContent$outboundSchema,
} from "./openresponsesinputcontent.js";

export const OpenResponsesInputMessageItemType = {
  Message: "message",
} as const;
export type OpenResponsesInputMessageItemType = ClosedEnum<
  typeof OpenResponsesInputMessageItemType
>;

export const OpenResponsesInputMessageItemRoleDeveloper = {
  Developer: "developer",
} as const;
export type OpenResponsesInputMessageItemRoleDeveloper = ClosedEnum<
  typeof OpenResponsesInputMessageItemRoleDeveloper
>;

export const OpenResponsesInputMessageItemRoleSystem = {
  System: "system",
} as const;
export type OpenResponsesInputMessageItemRoleSystem = ClosedEnum<
  typeof OpenResponsesInputMessageItemRoleSystem
>;

export const OpenResponsesInputMessageItemRoleUser = {
  User: "user",
} as const;
export type OpenResponsesInputMessageItemRoleUser = ClosedEnum<
  typeof OpenResponsesInputMessageItemRoleUser
>;

export type OpenResponsesInputMessageItemRoleUnion =
  | OpenResponsesInputMessageItemRoleUser
  | OpenResponsesInputMessageItemRoleSystem
  | OpenResponsesInputMessageItemRoleDeveloper;

/**
 * Input message item with structured content array
 */
export type OpenResponsesInputMessageItem = {
  id: string;
  type?: OpenResponsesInputMessageItemType | undefined;
  role:
    | OpenResponsesInputMessageItemRoleUser
    | OpenResponsesInputMessageItemRoleSystem
    | OpenResponsesInputMessageItemRoleDeveloper;
  content: Array<OpenResponsesInputContent>;
};

/** @internal */
export const OpenResponsesInputMessageItemType$inboundSchema: z.ZodNativeEnum<
  typeof OpenResponsesInputMessageItemType
> = z.nativeEnum(OpenResponsesInputMessageItemType);

/** @internal */
export const OpenResponsesInputMessageItemType$outboundSchema: z.ZodNativeEnum<
  typeof OpenResponsesInputMessageItemType
> = OpenResponsesInputMessageItemType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesInputMessageItemType$ {
  /** @deprecated use `OpenResponsesInputMessageItemType$inboundSchema` instead. */
  export const inboundSchema = OpenResponsesInputMessageItemType$inboundSchema;
  /** @deprecated use `OpenResponsesInputMessageItemType$outboundSchema` instead. */
  export const outboundSchema =
    OpenResponsesInputMessageItemType$outboundSchema;
}

/** @internal */
export const OpenResponsesInputMessageItemRoleDeveloper$inboundSchema:
  z.ZodNativeEnum<typeof OpenResponsesInputMessageItemRoleDeveloper> = z
    .nativeEnum(OpenResponsesInputMessageItemRoleDeveloper);

/** @internal */
export const OpenResponsesInputMessageItemRoleDeveloper$outboundSchema:
  z.ZodNativeEnum<typeof OpenResponsesInputMessageItemRoleDeveloper> =
    OpenResponsesInputMessageItemRoleDeveloper$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesInputMessageItemRoleDeveloper$ {
  /** @deprecated use `OpenResponsesInputMessageItemRoleDeveloper$inboundSchema` instead. */
  export const inboundSchema =
    OpenResponsesInputMessageItemRoleDeveloper$inboundSchema;
  /** @deprecated use `OpenResponsesInputMessageItemRoleDeveloper$outboundSchema` instead. */
  export const outboundSchema =
    OpenResponsesInputMessageItemRoleDeveloper$outboundSchema;
}

/** @internal */
export const OpenResponsesInputMessageItemRoleSystem$inboundSchema:
  z.ZodNativeEnum<typeof OpenResponsesInputMessageItemRoleSystem> = z
    .nativeEnum(OpenResponsesInputMessageItemRoleSystem);

/** @internal */
export const OpenResponsesInputMessageItemRoleSystem$outboundSchema:
  z.ZodNativeEnum<typeof OpenResponsesInputMessageItemRoleSystem> =
    OpenResponsesInputMessageItemRoleSystem$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesInputMessageItemRoleSystem$ {
  /** @deprecated use `OpenResponsesInputMessageItemRoleSystem$inboundSchema` instead. */
  export const inboundSchema =
    OpenResponsesInputMessageItemRoleSystem$inboundSchema;
  /** @deprecated use `OpenResponsesInputMessageItemRoleSystem$outboundSchema` instead. */
  export const outboundSchema =
    OpenResponsesInputMessageItemRoleSystem$outboundSchema;
}

/** @internal */
export const OpenResponsesInputMessageItemRoleUser$inboundSchema:
  z.ZodNativeEnum<typeof OpenResponsesInputMessageItemRoleUser> = z.nativeEnum(
    OpenResponsesInputMessageItemRoleUser,
  );

/** @internal */
export const OpenResponsesInputMessageItemRoleUser$outboundSchema:
  z.ZodNativeEnum<typeof OpenResponsesInputMessageItemRoleUser> =
    OpenResponsesInputMessageItemRoleUser$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesInputMessageItemRoleUser$ {
  /** @deprecated use `OpenResponsesInputMessageItemRoleUser$inboundSchema` instead. */
  export const inboundSchema =
    OpenResponsesInputMessageItemRoleUser$inboundSchema;
  /** @deprecated use `OpenResponsesInputMessageItemRoleUser$outboundSchema` instead. */
  export const outboundSchema =
    OpenResponsesInputMessageItemRoleUser$outboundSchema;
}

/** @internal */
export const OpenResponsesInputMessageItemRoleUnion$inboundSchema: z.ZodType<
  OpenResponsesInputMessageItemRoleUnion,
  z.ZodTypeDef,
  unknown
> = z.union([
  OpenResponsesInputMessageItemRoleUser$inboundSchema,
  OpenResponsesInputMessageItemRoleSystem$inboundSchema,
  OpenResponsesInputMessageItemRoleDeveloper$inboundSchema,
]);

/** @internal */
export type OpenResponsesInputMessageItemRoleUnion$Outbound =
  | string
  | string
  | string;

/** @internal */
export const OpenResponsesInputMessageItemRoleUnion$outboundSchema: z.ZodType<
  OpenResponsesInputMessageItemRoleUnion$Outbound,
  z.ZodTypeDef,
  OpenResponsesInputMessageItemRoleUnion
> = z.union([
  OpenResponsesInputMessageItemRoleUser$outboundSchema,
  OpenResponsesInputMessageItemRoleSystem$outboundSchema,
  OpenResponsesInputMessageItemRoleDeveloper$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesInputMessageItemRoleUnion$ {
  /** @deprecated use `OpenResponsesInputMessageItemRoleUnion$inboundSchema` instead. */
  export const inboundSchema =
    OpenResponsesInputMessageItemRoleUnion$inboundSchema;
  /** @deprecated use `OpenResponsesInputMessageItemRoleUnion$outboundSchema` instead. */
  export const outboundSchema =
    OpenResponsesInputMessageItemRoleUnion$outboundSchema;
  /** @deprecated use `OpenResponsesInputMessageItemRoleUnion$Outbound` instead. */
  export type Outbound = OpenResponsesInputMessageItemRoleUnion$Outbound;
}

export function openResponsesInputMessageItemRoleUnionToJSON(
  openResponsesInputMessageItemRoleUnion:
    OpenResponsesInputMessageItemRoleUnion,
): string {
  return JSON.stringify(
    OpenResponsesInputMessageItemRoleUnion$outboundSchema.parse(
      openResponsesInputMessageItemRoleUnion,
    ),
  );
}

export function openResponsesInputMessageItemRoleUnionFromJSON(
  jsonString: string,
): SafeParseResult<OpenResponsesInputMessageItemRoleUnion, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      OpenResponsesInputMessageItemRoleUnion$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OpenResponsesInputMessageItemRoleUnion' from JSON`,
  );
}

/** @internal */
export const OpenResponsesInputMessageItem$inboundSchema: z.ZodType<
  OpenResponsesInputMessageItem,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  type: OpenResponsesInputMessageItemType$inboundSchema.optional(),
  role: z.union([
    OpenResponsesInputMessageItemRoleUser$inboundSchema,
    OpenResponsesInputMessageItemRoleSystem$inboundSchema,
    OpenResponsesInputMessageItemRoleDeveloper$inboundSchema,
  ]),
  content: z.array(OpenResponsesInputContent$inboundSchema),
});

/** @internal */
export type OpenResponsesInputMessageItem$Outbound = {
  id: string;
  type?: string | undefined;
  role: string | string | string;
  content: Array<OpenResponsesInputContent$Outbound>;
};

/** @internal */
export const OpenResponsesInputMessageItem$outboundSchema: z.ZodType<
  OpenResponsesInputMessageItem$Outbound,
  z.ZodTypeDef,
  OpenResponsesInputMessageItem
> = z.object({
  id: z.string(),
  type: OpenResponsesInputMessageItemType$outboundSchema.optional(),
  role: z.union([
    OpenResponsesInputMessageItemRoleUser$outboundSchema,
    OpenResponsesInputMessageItemRoleSystem$outboundSchema,
    OpenResponsesInputMessageItemRoleDeveloper$outboundSchema,
  ]),
  content: z.array(OpenResponsesInputContent$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesInputMessageItem$ {
  /** @deprecated use `OpenResponsesInputMessageItem$inboundSchema` instead. */
  export const inboundSchema = OpenResponsesInputMessageItem$inboundSchema;
  /** @deprecated use `OpenResponsesInputMessageItem$outboundSchema` instead. */
  export const outboundSchema = OpenResponsesInputMessageItem$outboundSchema;
  /** @deprecated use `OpenResponsesInputMessageItem$Outbound` instead. */
  export type Outbound = OpenResponsesInputMessageItem$Outbound;
}

export function openResponsesInputMessageItemToJSON(
  openResponsesInputMessageItem: OpenResponsesInputMessageItem,
): string {
  return JSON.stringify(
    OpenResponsesInputMessageItem$outboundSchema.parse(
      openResponsesInputMessageItem,
    ),
  );
}

export function openResponsesInputMessageItemFromJSON(
  jsonString: string,
): SafeParseResult<OpenResponsesInputMessageItem, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OpenResponsesInputMessageItem$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OpenResponsesInputMessageItem' from JSON`,
  );
}
