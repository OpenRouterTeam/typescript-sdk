/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  ResponsesSearchContextSize,
  ResponsesSearchContextSize$inboundSchema,
  ResponsesSearchContextSize$outboundSchema,
} from "./responsessearchcontextsize.js";
import {
  ResponsesWebSearchUserLocation,
  ResponsesWebSearchUserLocation$inboundSchema,
  ResponsesWebSearchUserLocation$Outbound,
  ResponsesWebSearchUserLocation$outboundSchema,
} from "./responseswebsearchuserlocation.js";

export const OpenResponsesWebSearchPreviewToolType = {
  WebSearchPreview: "web_search_preview",
} as const;
export type OpenResponsesWebSearchPreviewToolType = ClosedEnum<
  typeof OpenResponsesWebSearchPreviewToolType
>;

/**
 * Web search preview tool configuration
 */
export type OpenResponsesWebSearchPreviewTool = {
  type: OpenResponsesWebSearchPreviewToolType;
  /**
   * Size of the search context for web search tools
   */
  searchContextSize?: ResponsesSearchContextSize | undefined;
  /**
   * User location information for web search
   */
  userLocation?: ResponsesWebSearchUserLocation | null | undefined;
};

/** @internal */
export const OpenResponsesWebSearchPreviewToolType$inboundSchema:
  z.ZodNativeEnum<typeof OpenResponsesWebSearchPreviewToolType> = z.nativeEnum(
    OpenResponsesWebSearchPreviewToolType,
  );

/** @internal */
export const OpenResponsesWebSearchPreviewToolType$outboundSchema:
  z.ZodNativeEnum<typeof OpenResponsesWebSearchPreviewToolType> =
    OpenResponsesWebSearchPreviewToolType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesWebSearchPreviewToolType$ {
  /** @deprecated use `OpenResponsesWebSearchPreviewToolType$inboundSchema` instead. */
  export const inboundSchema =
    OpenResponsesWebSearchPreviewToolType$inboundSchema;
  /** @deprecated use `OpenResponsesWebSearchPreviewToolType$outboundSchema` instead. */
  export const outboundSchema =
    OpenResponsesWebSearchPreviewToolType$outboundSchema;
}

/** @internal */
export const OpenResponsesWebSearchPreviewTool$inboundSchema: z.ZodType<
  OpenResponsesWebSearchPreviewTool,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: OpenResponsesWebSearchPreviewToolType$inboundSchema,
  search_context_size: ResponsesSearchContextSize$inboundSchema.optional(),
  user_location: z.nullable(ResponsesWebSearchUserLocation$inboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    "search_context_size": "searchContextSize",
    "user_location": "userLocation",
  });
});

/** @internal */
export type OpenResponsesWebSearchPreviewTool$Outbound = {
  type: string;
  search_context_size?: string | undefined;
  user_location?: ResponsesWebSearchUserLocation$Outbound | null | undefined;
};

/** @internal */
export const OpenResponsesWebSearchPreviewTool$outboundSchema: z.ZodType<
  OpenResponsesWebSearchPreviewTool$Outbound,
  z.ZodTypeDef,
  OpenResponsesWebSearchPreviewTool
> = z.object({
  type: OpenResponsesWebSearchPreviewToolType$outboundSchema,
  searchContextSize: ResponsesSearchContextSize$outboundSchema.optional(),
  userLocation: z.nullable(ResponsesWebSearchUserLocation$outboundSchema)
    .optional(),
}).transform((v) => {
  return remap$(v, {
    searchContextSize: "search_context_size",
    userLocation: "user_location",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesWebSearchPreviewTool$ {
  /** @deprecated use `OpenResponsesWebSearchPreviewTool$inboundSchema` instead. */
  export const inboundSchema = OpenResponsesWebSearchPreviewTool$inboundSchema;
  /** @deprecated use `OpenResponsesWebSearchPreviewTool$outboundSchema` instead. */
  export const outboundSchema =
    OpenResponsesWebSearchPreviewTool$outboundSchema;
  /** @deprecated use `OpenResponsesWebSearchPreviewTool$Outbound` instead. */
  export type Outbound = OpenResponsesWebSearchPreviewTool$Outbound;
}

export function openResponsesWebSearchPreviewToolToJSON(
  openResponsesWebSearchPreviewTool: OpenResponsesWebSearchPreviewTool,
): string {
  return JSON.stringify(
    OpenResponsesWebSearchPreviewTool$outboundSchema.parse(
      openResponsesWebSearchPreviewTool,
    ),
  );
}

export function openResponsesWebSearchPreviewToolFromJSON(
  jsonString: string,
): SafeParseResult<OpenResponsesWebSearchPreviewTool, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OpenResponsesWebSearchPreviewTool$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OpenResponsesWebSearchPreviewTool' from JSON`,
  );
}
