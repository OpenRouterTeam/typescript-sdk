/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v4";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ChatMessageToolCallFunction = {
  name: string;
  arguments: string;
};

export type ChatMessageToolCall = {
  id: string;
  type: "function";
  function: ChatMessageToolCallFunction;
};

/** @internal */
export const ChatMessageToolCallFunction$inboundSchema: z.ZodType<
  ChatMessageToolCallFunction,
  unknown
> = z.object({
  name: z.string(),
  arguments: z.string(),
});

/** @internal */
export type ChatMessageToolCallFunction$Outbound = {
  name: string;
  arguments: string;
};

/** @internal */
export const ChatMessageToolCallFunction$outboundSchema: z.ZodType<
  ChatMessageToolCallFunction$Outbound,
  ChatMessageToolCallFunction
> = z.object({
  name: z.string(),
  arguments: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatMessageToolCallFunction$ {
  /** @deprecated use `ChatMessageToolCallFunction$inboundSchema` instead. */
  export const inboundSchema = ChatMessageToolCallFunction$inboundSchema;
  /** @deprecated use `ChatMessageToolCallFunction$outboundSchema` instead. */
  export const outboundSchema = ChatMessageToolCallFunction$outboundSchema;
  /** @deprecated use `ChatMessageToolCallFunction$Outbound` instead. */
  export type Outbound = ChatMessageToolCallFunction$Outbound;
}

export function chatMessageToolCallFunctionToJSON(
  chatMessageToolCallFunction: ChatMessageToolCallFunction,
): string {
  return JSON.stringify(
    ChatMessageToolCallFunction$outboundSchema.parse(
      chatMessageToolCallFunction,
    ),
  );
}

export function chatMessageToolCallFunctionFromJSON(
  jsonString: string,
): SafeParseResult<ChatMessageToolCallFunction, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChatMessageToolCallFunction$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatMessageToolCallFunction' from JSON`,
  );
}

/** @internal */
export const ChatMessageToolCall$inboundSchema: z.ZodType<
  ChatMessageToolCall,
  unknown
> = z.object({
  id: z.string(),
  type: z.literal("function"),
  function: z.lazy(() => ChatMessageToolCallFunction$inboundSchema),
});

/** @internal */
export type ChatMessageToolCall$Outbound = {
  id: string;
  type: "function";
  function: ChatMessageToolCallFunction$Outbound;
};

/** @internal */
export const ChatMessageToolCall$outboundSchema: z.ZodType<
  ChatMessageToolCall$Outbound,
  ChatMessageToolCall
> = z.object({
  id: z.string(),
  type: z.literal("function"),
  function: z.lazy(() => ChatMessageToolCallFunction$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatMessageToolCall$ {
  /** @deprecated use `ChatMessageToolCall$inboundSchema` instead. */
  export const inboundSchema = ChatMessageToolCall$inboundSchema;
  /** @deprecated use `ChatMessageToolCall$outboundSchema` instead. */
  export const outboundSchema = ChatMessageToolCall$outboundSchema;
  /** @deprecated use `ChatMessageToolCall$Outbound` instead. */
  export type Outbound = ChatMessageToolCall$Outbound;
}

export function chatMessageToolCallToJSON(
  chatMessageToolCall: ChatMessageToolCall,
): string {
  return JSON.stringify(
    ChatMessageToolCall$outboundSchema.parse(chatMessageToolCall),
  );
}

export function chatMessageToolCallFromJSON(
  jsonString: string,
): SafeParseResult<ChatMessageToolCall, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChatMessageToolCall$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatMessageToolCall' from JSON`,
  );
}
