/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export const ResponsesRefusalContentType = {
  Refusal: "refusal",
} as const;
export type ResponsesRefusalContentType = ClosedEnum<
  typeof ResponsesRefusalContentType
>;

/**
 * Refusal content when request is refused
 */
export type ResponsesRefusalContent = {
  type: ResponsesRefusalContentType;
  refusal: string;
};

/** @internal */
export const ResponsesRefusalContentType$inboundSchema: z.ZodNativeEnum<
  typeof ResponsesRefusalContentType
> = z.nativeEnum(ResponsesRefusalContentType);

/** @internal */
export const ResponsesRefusalContentType$outboundSchema: z.ZodNativeEnum<
  typeof ResponsesRefusalContentType
> = ResponsesRefusalContentType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesRefusalContentType$ {
  /** @deprecated use `ResponsesRefusalContentType$inboundSchema` instead. */
  export const inboundSchema = ResponsesRefusalContentType$inboundSchema;
  /** @deprecated use `ResponsesRefusalContentType$outboundSchema` instead. */
  export const outboundSchema = ResponsesRefusalContentType$outboundSchema;
}

/** @internal */
export const ResponsesRefusalContent$inboundSchema: z.ZodType<
  ResponsesRefusalContent,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: ResponsesRefusalContentType$inboundSchema,
  refusal: z.string(),
});

/** @internal */
export type ResponsesRefusalContent$Outbound = {
  type: string;
  refusal: string;
};

/** @internal */
export const ResponsesRefusalContent$outboundSchema: z.ZodType<
  ResponsesRefusalContent$Outbound,
  z.ZodTypeDef,
  ResponsesRefusalContent
> = z.object({
  type: ResponsesRefusalContentType$outboundSchema,
  refusal: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesRefusalContent$ {
  /** @deprecated use `ResponsesRefusalContent$inboundSchema` instead. */
  export const inboundSchema = ResponsesRefusalContent$inboundSchema;
  /** @deprecated use `ResponsesRefusalContent$outboundSchema` instead. */
  export const outboundSchema = ResponsesRefusalContent$outboundSchema;
  /** @deprecated use `ResponsesRefusalContent$Outbound` instead. */
  export type Outbound = ResponsesRefusalContent$Outbound;
}

export function responsesRefusalContentToJSON(
  responsesRefusalContent: ResponsesRefusalContent,
): string {
  return JSON.stringify(
    ResponsesRefusalContent$outboundSchema.parse(responsesRefusalContent),
  );
}

export function responsesRefusalContentFromJSON(
  jsonString: string,
): SafeParseResult<ResponsesRefusalContent, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponsesRefusalContent$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponsesRefusalContent' from JSON`,
  );
}
