/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v4";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export const OpenAIResponsesToolChoiceTypeWebSearchPreview = {
  WebSearchPreview: "web_search_preview",
} as const;
export type OpenAIResponsesToolChoiceTypeWebSearchPreview = ClosedEnum<
  typeof OpenAIResponsesToolChoiceTypeWebSearchPreview
>;

export const OpenAIResponsesToolChoiceTypeWebSearchPreview20250311 = {
  WebSearchPreview20250311: "web_search_preview_2025_03_11",
} as const;
export type OpenAIResponsesToolChoiceTypeWebSearchPreview20250311 = ClosedEnum<
  typeof OpenAIResponsesToolChoiceTypeWebSearchPreview20250311
>;

export type Type =
  | OpenAIResponsesToolChoiceTypeWebSearchPreview20250311
  | OpenAIResponsesToolChoiceTypeWebSearchPreview;

export type OpenAIResponsesToolChoice = {
  type:
    | OpenAIResponsesToolChoiceTypeWebSearchPreview20250311
    | OpenAIResponsesToolChoiceTypeWebSearchPreview;
};

export const OpenAIResponsesToolChoiceTypeFunction = {
  Function: "function",
} as const;
export type OpenAIResponsesToolChoiceTypeFunction = ClosedEnum<
  typeof OpenAIResponsesToolChoiceTypeFunction
>;

export type OpenAIResponsesToolChoiceFunction = {
  type: OpenAIResponsesToolChoiceTypeFunction;
  name: string;
};

export const OpenAIResponsesToolChoiceRequired = {
  Required: "required",
} as const;
export type OpenAIResponsesToolChoiceRequired = ClosedEnum<
  typeof OpenAIResponsesToolChoiceRequired
>;

export const OpenAIResponsesToolChoiceNone = {
  None: "none",
} as const;
export type OpenAIResponsesToolChoiceNone = ClosedEnum<
  typeof OpenAIResponsesToolChoiceNone
>;

export const OpenAIResponsesToolChoiceAuto = {
  Auto: "auto",
} as const;
export type OpenAIResponsesToolChoiceAuto = ClosedEnum<
  typeof OpenAIResponsesToolChoiceAuto
>;

export type OpenAIResponsesToolChoiceUnion =
  | OpenAIResponsesToolChoiceFunction
  | OpenAIResponsesToolChoice
  | OpenAIResponsesToolChoiceAuto
  | OpenAIResponsesToolChoiceNone
  | OpenAIResponsesToolChoiceRequired;

/** @internal */
export const OpenAIResponsesToolChoiceTypeWebSearchPreview$inboundSchema:
  z.ZodEnum<typeof OpenAIResponsesToolChoiceTypeWebSearchPreview> = z.enum(
    OpenAIResponsesToolChoiceTypeWebSearchPreview,
  );

/** @internal */
export const OpenAIResponsesToolChoiceTypeWebSearchPreview$outboundSchema:
  z.ZodEnum<typeof OpenAIResponsesToolChoiceTypeWebSearchPreview> =
    OpenAIResponsesToolChoiceTypeWebSearchPreview$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenAIResponsesToolChoiceTypeWebSearchPreview$ {
  /** @deprecated use `OpenAIResponsesToolChoiceTypeWebSearchPreview$inboundSchema` instead. */
  export const inboundSchema =
    OpenAIResponsesToolChoiceTypeWebSearchPreview$inboundSchema;
  /** @deprecated use `OpenAIResponsesToolChoiceTypeWebSearchPreview$outboundSchema` instead. */
  export const outboundSchema =
    OpenAIResponsesToolChoiceTypeWebSearchPreview$outboundSchema;
}

/** @internal */
export const OpenAIResponsesToolChoiceTypeWebSearchPreview20250311$inboundSchema:
  z.ZodEnum<typeof OpenAIResponsesToolChoiceTypeWebSearchPreview20250311> = z
    .enum(OpenAIResponsesToolChoiceTypeWebSearchPreview20250311);

/** @internal */
export const OpenAIResponsesToolChoiceTypeWebSearchPreview20250311$outboundSchema:
  z.ZodEnum<typeof OpenAIResponsesToolChoiceTypeWebSearchPreview20250311> =
    OpenAIResponsesToolChoiceTypeWebSearchPreview20250311$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenAIResponsesToolChoiceTypeWebSearchPreview20250311$ {
  /** @deprecated use `OpenAIResponsesToolChoiceTypeWebSearchPreview20250311$inboundSchema` instead. */
  export const inboundSchema =
    OpenAIResponsesToolChoiceTypeWebSearchPreview20250311$inboundSchema;
  /** @deprecated use `OpenAIResponsesToolChoiceTypeWebSearchPreview20250311$outboundSchema` instead. */
  export const outboundSchema =
    OpenAIResponsesToolChoiceTypeWebSearchPreview20250311$outboundSchema;
}

/** @internal */
export const Type$inboundSchema: z.ZodType<Type, unknown> = z.union([
  OpenAIResponsesToolChoiceTypeWebSearchPreview20250311$inboundSchema,
  OpenAIResponsesToolChoiceTypeWebSearchPreview$inboundSchema,
]);

/** @internal */
export type Type$Outbound = string | string;

/** @internal */
export const Type$outboundSchema: z.ZodType<Type$Outbound, Type> = z.union([
  OpenAIResponsesToolChoiceTypeWebSearchPreview20250311$outboundSchema,
  OpenAIResponsesToolChoiceTypeWebSearchPreview$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Type$ {
  /** @deprecated use `Type$inboundSchema` instead. */
  export const inboundSchema = Type$inboundSchema;
  /** @deprecated use `Type$outboundSchema` instead. */
  export const outboundSchema = Type$outboundSchema;
  /** @deprecated use `Type$Outbound` instead. */
  export type Outbound = Type$Outbound;
}

export function typeToJSON(type: Type): string {
  return JSON.stringify(Type$outboundSchema.parse(type));
}

export function typeFromJSON(
  jsonString: string,
): SafeParseResult<Type, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => Type$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'Type' from JSON`,
  );
}

/** @internal */
export const OpenAIResponsesToolChoice$inboundSchema: z.ZodType<
  OpenAIResponsesToolChoice,
  unknown
> = z.object({
  type: z.union([
    OpenAIResponsesToolChoiceTypeWebSearchPreview20250311$inboundSchema,
    OpenAIResponsesToolChoiceTypeWebSearchPreview$inboundSchema,
  ]),
});

/** @internal */
export type OpenAIResponsesToolChoice$Outbound = {
  type: string | string;
};

/** @internal */
export const OpenAIResponsesToolChoice$outboundSchema: z.ZodType<
  OpenAIResponsesToolChoice$Outbound,
  OpenAIResponsesToolChoice
> = z.object({
  type: z.union([
    OpenAIResponsesToolChoiceTypeWebSearchPreview20250311$outboundSchema,
    OpenAIResponsesToolChoiceTypeWebSearchPreview$outboundSchema,
  ]),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenAIResponsesToolChoice$ {
  /** @deprecated use `OpenAIResponsesToolChoice$inboundSchema` instead. */
  export const inboundSchema = OpenAIResponsesToolChoice$inboundSchema;
  /** @deprecated use `OpenAIResponsesToolChoice$outboundSchema` instead. */
  export const outboundSchema = OpenAIResponsesToolChoice$outboundSchema;
  /** @deprecated use `OpenAIResponsesToolChoice$Outbound` instead. */
  export type Outbound = OpenAIResponsesToolChoice$Outbound;
}

export function openAIResponsesToolChoiceToJSON(
  openAIResponsesToolChoice: OpenAIResponsesToolChoice,
): string {
  return JSON.stringify(
    OpenAIResponsesToolChoice$outboundSchema.parse(openAIResponsesToolChoice),
  );
}

export function openAIResponsesToolChoiceFromJSON(
  jsonString: string,
): SafeParseResult<OpenAIResponsesToolChoice, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OpenAIResponsesToolChoice$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OpenAIResponsesToolChoice' from JSON`,
  );
}

/** @internal */
export const OpenAIResponsesToolChoiceTypeFunction$inboundSchema: z.ZodEnum<
  typeof OpenAIResponsesToolChoiceTypeFunction
> = z.enum(OpenAIResponsesToolChoiceTypeFunction);

/** @internal */
export const OpenAIResponsesToolChoiceTypeFunction$outboundSchema: z.ZodEnum<
  typeof OpenAIResponsesToolChoiceTypeFunction
> = OpenAIResponsesToolChoiceTypeFunction$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenAIResponsesToolChoiceTypeFunction$ {
  /** @deprecated use `OpenAIResponsesToolChoiceTypeFunction$inboundSchema` instead. */
  export const inboundSchema =
    OpenAIResponsesToolChoiceTypeFunction$inboundSchema;
  /** @deprecated use `OpenAIResponsesToolChoiceTypeFunction$outboundSchema` instead. */
  export const outboundSchema =
    OpenAIResponsesToolChoiceTypeFunction$outboundSchema;
}

/** @internal */
export const OpenAIResponsesToolChoiceFunction$inboundSchema: z.ZodType<
  OpenAIResponsesToolChoiceFunction,
  unknown
> = z.object({
  type: OpenAIResponsesToolChoiceTypeFunction$inboundSchema,
  name: z.string(),
});

/** @internal */
export type OpenAIResponsesToolChoiceFunction$Outbound = {
  type: string;
  name: string;
};

/** @internal */
export const OpenAIResponsesToolChoiceFunction$outboundSchema: z.ZodType<
  OpenAIResponsesToolChoiceFunction$Outbound,
  OpenAIResponsesToolChoiceFunction
> = z.object({
  type: OpenAIResponsesToolChoiceTypeFunction$outboundSchema,
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenAIResponsesToolChoiceFunction$ {
  /** @deprecated use `OpenAIResponsesToolChoiceFunction$inboundSchema` instead. */
  export const inboundSchema = OpenAIResponsesToolChoiceFunction$inboundSchema;
  /** @deprecated use `OpenAIResponsesToolChoiceFunction$outboundSchema` instead. */
  export const outboundSchema =
    OpenAIResponsesToolChoiceFunction$outboundSchema;
  /** @deprecated use `OpenAIResponsesToolChoiceFunction$Outbound` instead. */
  export type Outbound = OpenAIResponsesToolChoiceFunction$Outbound;
}

export function openAIResponsesToolChoiceFunctionToJSON(
  openAIResponsesToolChoiceFunction: OpenAIResponsesToolChoiceFunction,
): string {
  return JSON.stringify(
    OpenAIResponsesToolChoiceFunction$outboundSchema.parse(
      openAIResponsesToolChoiceFunction,
    ),
  );
}

export function openAIResponsesToolChoiceFunctionFromJSON(
  jsonString: string,
): SafeParseResult<OpenAIResponsesToolChoiceFunction, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OpenAIResponsesToolChoiceFunction$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OpenAIResponsesToolChoiceFunction' from JSON`,
  );
}

/** @internal */
export const OpenAIResponsesToolChoiceRequired$inboundSchema: z.ZodEnum<
  typeof OpenAIResponsesToolChoiceRequired
> = z.enum(OpenAIResponsesToolChoiceRequired);

/** @internal */
export const OpenAIResponsesToolChoiceRequired$outboundSchema: z.ZodEnum<
  typeof OpenAIResponsesToolChoiceRequired
> = OpenAIResponsesToolChoiceRequired$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenAIResponsesToolChoiceRequired$ {
  /** @deprecated use `OpenAIResponsesToolChoiceRequired$inboundSchema` instead. */
  export const inboundSchema = OpenAIResponsesToolChoiceRequired$inboundSchema;
  /** @deprecated use `OpenAIResponsesToolChoiceRequired$outboundSchema` instead. */
  export const outboundSchema =
    OpenAIResponsesToolChoiceRequired$outboundSchema;
}

/** @internal */
export const OpenAIResponsesToolChoiceNone$inboundSchema: z.ZodEnum<
  typeof OpenAIResponsesToolChoiceNone
> = z.enum(OpenAIResponsesToolChoiceNone);

/** @internal */
export const OpenAIResponsesToolChoiceNone$outboundSchema: z.ZodEnum<
  typeof OpenAIResponsesToolChoiceNone
> = OpenAIResponsesToolChoiceNone$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenAIResponsesToolChoiceNone$ {
  /** @deprecated use `OpenAIResponsesToolChoiceNone$inboundSchema` instead. */
  export const inboundSchema = OpenAIResponsesToolChoiceNone$inboundSchema;
  /** @deprecated use `OpenAIResponsesToolChoiceNone$outboundSchema` instead. */
  export const outboundSchema = OpenAIResponsesToolChoiceNone$outboundSchema;
}

/** @internal */
export const OpenAIResponsesToolChoiceAuto$inboundSchema: z.ZodEnum<
  typeof OpenAIResponsesToolChoiceAuto
> = z.enum(OpenAIResponsesToolChoiceAuto);

/** @internal */
export const OpenAIResponsesToolChoiceAuto$outboundSchema: z.ZodEnum<
  typeof OpenAIResponsesToolChoiceAuto
> = OpenAIResponsesToolChoiceAuto$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenAIResponsesToolChoiceAuto$ {
  /** @deprecated use `OpenAIResponsesToolChoiceAuto$inboundSchema` instead. */
  export const inboundSchema = OpenAIResponsesToolChoiceAuto$inboundSchema;
  /** @deprecated use `OpenAIResponsesToolChoiceAuto$outboundSchema` instead. */
  export const outboundSchema = OpenAIResponsesToolChoiceAuto$outboundSchema;
}

/** @internal */
export const OpenAIResponsesToolChoiceUnion$inboundSchema: z.ZodType<
  OpenAIResponsesToolChoiceUnion,
  unknown
> = z.union([
  z.lazy(() => OpenAIResponsesToolChoiceFunction$inboundSchema),
  z.lazy(() => OpenAIResponsesToolChoice$inboundSchema),
  OpenAIResponsesToolChoiceAuto$inboundSchema,
  OpenAIResponsesToolChoiceNone$inboundSchema,
  OpenAIResponsesToolChoiceRequired$inboundSchema,
]);

/** @internal */
export type OpenAIResponsesToolChoiceUnion$Outbound =
  | OpenAIResponsesToolChoiceFunction$Outbound
  | OpenAIResponsesToolChoice$Outbound
  | string
  | string
  | string;

/** @internal */
export const OpenAIResponsesToolChoiceUnion$outboundSchema: z.ZodType<
  OpenAIResponsesToolChoiceUnion$Outbound,
  OpenAIResponsesToolChoiceUnion
> = z.union([
  z.lazy(() => OpenAIResponsesToolChoiceFunction$outboundSchema),
  z.lazy(() => OpenAIResponsesToolChoice$outboundSchema),
  OpenAIResponsesToolChoiceAuto$outboundSchema,
  OpenAIResponsesToolChoiceNone$outboundSchema,
  OpenAIResponsesToolChoiceRequired$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenAIResponsesToolChoiceUnion$ {
  /** @deprecated use `OpenAIResponsesToolChoiceUnion$inboundSchema` instead. */
  export const inboundSchema = OpenAIResponsesToolChoiceUnion$inboundSchema;
  /** @deprecated use `OpenAIResponsesToolChoiceUnion$outboundSchema` instead. */
  export const outboundSchema = OpenAIResponsesToolChoiceUnion$outboundSchema;
  /** @deprecated use `OpenAIResponsesToolChoiceUnion$Outbound` instead. */
  export type Outbound = OpenAIResponsesToolChoiceUnion$Outbound;
}

export function openAIResponsesToolChoiceUnionToJSON(
  openAIResponsesToolChoiceUnion: OpenAIResponsesToolChoiceUnion,
): string {
  return JSON.stringify(
    OpenAIResponsesToolChoiceUnion$outboundSchema.parse(
      openAIResponsesToolChoiceUnion,
    ),
  );
}

export function openAIResponsesToolChoiceUnionFromJSON(
  jsonString: string,
): SafeParseResult<OpenAIResponsesToolChoiceUnion, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OpenAIResponsesToolChoiceUnion$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OpenAIResponsesToolChoiceUnion' from JSON`,
  );
}
