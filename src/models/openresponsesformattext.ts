/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export const OpenResponsesFormatTextType = {
  Text: "text",
} as const;
export type OpenResponsesFormatTextType = ClosedEnum<
  typeof OpenResponsesFormatTextType
>;

/**
 * Plain text response format
 */
export type OpenResponsesFormatText = {
  type: OpenResponsesFormatTextType;
};

/** @internal */
export const OpenResponsesFormatTextType$inboundSchema: z.ZodNativeEnum<
  typeof OpenResponsesFormatTextType
> = z.nativeEnum(OpenResponsesFormatTextType);

/** @internal */
export const OpenResponsesFormatTextType$outboundSchema: z.ZodNativeEnum<
  typeof OpenResponsesFormatTextType
> = OpenResponsesFormatTextType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesFormatTextType$ {
  /** @deprecated use `OpenResponsesFormatTextType$inboundSchema` instead. */
  export const inboundSchema = OpenResponsesFormatTextType$inboundSchema;
  /** @deprecated use `OpenResponsesFormatTextType$outboundSchema` instead. */
  export const outboundSchema = OpenResponsesFormatTextType$outboundSchema;
}

/** @internal */
export const OpenResponsesFormatText$inboundSchema: z.ZodType<
  OpenResponsesFormatText,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: OpenResponsesFormatTextType$inboundSchema,
});

/** @internal */
export type OpenResponsesFormatText$Outbound = {
  type: string;
};

/** @internal */
export const OpenResponsesFormatText$outboundSchema: z.ZodType<
  OpenResponsesFormatText$Outbound,
  z.ZodTypeDef,
  OpenResponsesFormatText
> = z.object({
  type: OpenResponsesFormatTextType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OpenResponsesFormatText$ {
  /** @deprecated use `OpenResponsesFormatText$inboundSchema` instead. */
  export const inboundSchema = OpenResponsesFormatText$inboundSchema;
  /** @deprecated use `OpenResponsesFormatText$outboundSchema` instead. */
  export const outboundSchema = OpenResponsesFormatText$outboundSchema;
  /** @deprecated use `OpenResponsesFormatText$Outbound` instead. */
  export type Outbound = OpenResponsesFormatText$Outbound;
}

export function openResponsesFormatTextToJSON(
  openResponsesFormatText: OpenResponsesFormatText,
): string {
  return JSON.stringify(
    OpenResponsesFormatText$outboundSchema.parse(openResponsesFormatText),
  );
}

export function openResponsesFormatTextFromJSON(
  jsonString: string,
): SafeParseResult<OpenResponsesFormatText, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => OpenResponsesFormatText$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'OpenResponsesFormatText' from JSON`,
  );
}
