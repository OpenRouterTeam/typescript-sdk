/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export const ResponsesReasoningSummaryTextType = {
  SummaryText: "summary_text",
} as const;
export type ResponsesReasoningSummaryTextType = ClosedEnum<
  typeof ResponsesReasoningSummaryTextType
>;

export type ResponsesReasoningSummaryText = {
  type: ResponsesReasoningSummaryTextType;
  text: string;
};

/** @internal */
export const ResponsesReasoningSummaryTextType$inboundSchema: z.ZodNativeEnum<
  typeof ResponsesReasoningSummaryTextType
> = z.nativeEnum(ResponsesReasoningSummaryTextType);

/** @internal */
export const ResponsesReasoningSummaryTextType$outboundSchema: z.ZodNativeEnum<
  typeof ResponsesReasoningSummaryTextType
> = ResponsesReasoningSummaryTextType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesReasoningSummaryTextType$ {
  /** @deprecated use `ResponsesReasoningSummaryTextType$inboundSchema` instead. */
  export const inboundSchema = ResponsesReasoningSummaryTextType$inboundSchema;
  /** @deprecated use `ResponsesReasoningSummaryTextType$outboundSchema` instead. */
  export const outboundSchema =
    ResponsesReasoningSummaryTextType$outboundSchema;
}

/** @internal */
export const ResponsesReasoningSummaryText$inboundSchema: z.ZodType<
  ResponsesReasoningSummaryText,
  z.ZodTypeDef,
  unknown
> = z.object({
  type: ResponsesReasoningSummaryTextType$inboundSchema,
  text: z.string(),
});

/** @internal */
export type ResponsesReasoningSummaryText$Outbound = {
  type: string;
  text: string;
};

/** @internal */
export const ResponsesReasoningSummaryText$outboundSchema: z.ZodType<
  ResponsesReasoningSummaryText$Outbound,
  z.ZodTypeDef,
  ResponsesReasoningSummaryText
> = z.object({
  type: ResponsesReasoningSummaryTextType$outboundSchema,
  text: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesReasoningSummaryText$ {
  /** @deprecated use `ResponsesReasoningSummaryText$inboundSchema` instead. */
  export const inboundSchema = ResponsesReasoningSummaryText$inboundSchema;
  /** @deprecated use `ResponsesReasoningSummaryText$outboundSchema` instead. */
  export const outboundSchema = ResponsesReasoningSummaryText$outboundSchema;
  /** @deprecated use `ResponsesReasoningSummaryText$Outbound` instead. */
  export type Outbound = ResponsesReasoningSummaryText$Outbound;
}

export function responsesReasoningSummaryTextToJSON(
  responsesReasoningSummaryText: ResponsesReasoningSummaryText,
): string {
  return JSON.stringify(
    ResponsesReasoningSummaryText$outboundSchema.parse(
      responsesReasoningSummaryText,
    ),
  );
}

export function responsesReasoningSummaryTextFromJSON(
  jsonString: string,
): SafeParseResult<ResponsesReasoningSummaryText, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponsesReasoningSummaryText$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponsesReasoningSummaryText' from JSON`,
  );
}
