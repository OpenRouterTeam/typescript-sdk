/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v4";
import { safeParse } from "../lib/schemas.js";
import { ClosedEnum } from "../types/enums.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export const ResponsesFormatJSONObjectType = {
  JsonObject: "json_object",
} as const;
export type ResponsesFormatJSONObjectType = ClosedEnum<
  typeof ResponsesFormatJSONObjectType
>;

/**
 * JSON object response format
 */
export type ResponsesFormatJSONObject = {
  type: ResponsesFormatJSONObjectType;
};

/** @internal */
export const ResponsesFormatJSONObjectType$inboundSchema: z.ZodEnum<
  typeof ResponsesFormatJSONObjectType
> = z.enum(ResponsesFormatJSONObjectType);

/** @internal */
export const ResponsesFormatJSONObjectType$outboundSchema: z.ZodEnum<
  typeof ResponsesFormatJSONObjectType
> = ResponsesFormatJSONObjectType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesFormatJSONObjectType$ {
  /** @deprecated use `ResponsesFormatJSONObjectType$inboundSchema` instead. */
  export const inboundSchema = ResponsesFormatJSONObjectType$inboundSchema;
  /** @deprecated use `ResponsesFormatJSONObjectType$outboundSchema` instead. */
  export const outboundSchema = ResponsesFormatJSONObjectType$outboundSchema;
}

/** @internal */
export const ResponsesFormatJSONObject$inboundSchema: z.ZodType<
  ResponsesFormatJSONObject,
  unknown
> = z.object({
  type: ResponsesFormatJSONObjectType$inboundSchema,
});

/** @internal */
export type ResponsesFormatJSONObject$Outbound = {
  type: string;
};

/** @internal */
export const ResponsesFormatJSONObject$outboundSchema: z.ZodType<
  ResponsesFormatJSONObject$Outbound,
  ResponsesFormatJSONObject
> = z.object({
  type: ResponsesFormatJSONObjectType$outboundSchema,
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesFormatJSONObject$ {
  /** @deprecated use `ResponsesFormatJSONObject$inboundSchema` instead. */
  export const inboundSchema = ResponsesFormatJSONObject$inboundSchema;
  /** @deprecated use `ResponsesFormatJSONObject$outboundSchema` instead. */
  export const outboundSchema = ResponsesFormatJSONObject$outboundSchema;
  /** @deprecated use `ResponsesFormatJSONObject$Outbound` instead. */
  export type Outbound = ResponsesFormatJSONObject$Outbound;
}

export function responsesFormatJSONObjectToJSON(
  responsesFormatJSONObject: ResponsesFormatJSONObject,
): string {
  return JSON.stringify(
    ResponsesFormatJSONObject$outboundSchema.parse(responsesFormatJSONObject),
  );
}

export function responsesFormatJSONObjectFromJSON(
  jsonString: string,
): SafeParseResult<ResponsesFormatJSONObject, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponsesFormatJSONObject$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponsesFormatJSONObject' from JSON`,
  );
}
