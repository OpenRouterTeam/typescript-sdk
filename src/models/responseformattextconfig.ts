/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";
import {
  ResponsesFormatJSONObject,
  ResponsesFormatJSONObject$inboundSchema,
  ResponsesFormatJSONObject$Outbound,
  ResponsesFormatJSONObject$outboundSchema,
} from "./responsesformatjsonobject.js";
import {
  ResponsesFormatText,
  ResponsesFormatText$inboundSchema,
  ResponsesFormatText$Outbound,
  ResponsesFormatText$outboundSchema,
} from "./responsesformattext.js";
import {
  ResponsesFormatTextJSONSchemaConfig,
  ResponsesFormatTextJSONSchemaConfig$inboundSchema,
  ResponsesFormatTextJSONSchemaConfig$Outbound,
  ResponsesFormatTextJSONSchemaConfig$outboundSchema,
} from "./responsesformattextjsonschemaconfig.js";

/**
 * Text response format configuration
 */
export type ResponseFormatTextConfig =
  | ResponsesFormatTextJSONSchemaConfig
  | ResponsesFormatText
  | ResponsesFormatJSONObject;

/** @internal */
export const ResponseFormatTextConfig$inboundSchema: z.ZodType<
  ResponseFormatTextConfig,
  z.ZodTypeDef,
  unknown
> = z.union([
  ResponsesFormatTextJSONSchemaConfig$inboundSchema,
  ResponsesFormatText$inboundSchema,
  ResponsesFormatJSONObject$inboundSchema,
]);

/** @internal */
export type ResponseFormatTextConfig$Outbound =
  | ResponsesFormatTextJSONSchemaConfig$Outbound
  | ResponsesFormatText$Outbound
  | ResponsesFormatJSONObject$Outbound;

/** @internal */
export const ResponseFormatTextConfig$outboundSchema: z.ZodType<
  ResponseFormatTextConfig$Outbound,
  z.ZodTypeDef,
  ResponseFormatTextConfig
> = z.union([
  ResponsesFormatTextJSONSchemaConfig$outboundSchema,
  ResponsesFormatText$outboundSchema,
  ResponsesFormatJSONObject$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponseFormatTextConfig$ {
  /** @deprecated use `ResponseFormatTextConfig$inboundSchema` instead. */
  export const inboundSchema = ResponseFormatTextConfig$inboundSchema;
  /** @deprecated use `ResponseFormatTextConfig$outboundSchema` instead. */
  export const outboundSchema = ResponseFormatTextConfig$outboundSchema;
  /** @deprecated use `ResponseFormatTextConfig$Outbound` instead. */
  export type Outbound = ResponseFormatTextConfig$Outbound;
}

export function responseFormatTextConfigToJSON(
  responseFormatTextConfig: ResponseFormatTextConfig,
): string {
  return JSON.stringify(
    ResponseFormatTextConfig$outboundSchema.parse(responseFormatTextConfig),
  );
}

export function responseFormatTextConfigFromJSON(
  jsonString: string,
): SafeParseResult<ResponseFormatTextConfig, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponseFormatTextConfig$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponseFormatTextConfig' from JSON`,
  );
}
