/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v4";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

/**
 * Size of the search context for web search tools
 */
export const ResponsesSearchContextSize = {
  Low: "low",
  Medium: "medium",
  High: "high",
} as const;
/**
 * Size of the search context for web search tools
 */
export type ResponsesSearchContextSize = OpenEnum<
  typeof ResponsesSearchContextSize
>;

/** @internal */
export const ResponsesSearchContextSize$inboundSchema: z.ZodType<
  ResponsesSearchContextSize,
  unknown
> = z
  .union([
    z.enum(ResponsesSearchContextSize),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const ResponsesSearchContextSize$outboundSchema: z.ZodType<
  ResponsesSearchContextSize,
  ResponsesSearchContextSize
> = z.union([
  z.enum(ResponsesSearchContextSize),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesSearchContextSize$ {
  /** @deprecated use `ResponsesSearchContextSize$inboundSchema` instead. */
  export const inboundSchema = ResponsesSearchContextSize$inboundSchema;
  /** @deprecated use `ResponsesSearchContextSize$outboundSchema` instead. */
  export const outboundSchema = ResponsesSearchContextSize$outboundSchema;
}
