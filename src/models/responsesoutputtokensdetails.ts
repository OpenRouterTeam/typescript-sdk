/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../lib/primitives.js";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

/**
 * Details about output token usage
 */
export type ResponsesOutputTokensDetails = {
  reasoningTokens: number;
};

/** @internal */
export const ResponsesOutputTokensDetails$inboundSchema: z.ZodType<
  ResponsesOutputTokensDetails,
  z.ZodTypeDef,
  unknown
> = z.object({
  reasoning_tokens: z.number(),
}).transform((v) => {
  return remap$(v, {
    "reasoning_tokens": "reasoningTokens",
  });
});

/** @internal */
export type ResponsesOutputTokensDetails$Outbound = {
  reasoning_tokens: number;
};

/** @internal */
export const ResponsesOutputTokensDetails$outboundSchema: z.ZodType<
  ResponsesOutputTokensDetails$Outbound,
  z.ZodTypeDef,
  ResponsesOutputTokensDetails
> = z.object({
  reasoningTokens: z.number(),
}).transform((v) => {
  return remap$(v, {
    reasoningTokens: "reasoning_tokens",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ResponsesOutputTokensDetails$ {
  /** @deprecated use `ResponsesOutputTokensDetails$inboundSchema` instead. */
  export const inboundSchema = ResponsesOutputTokensDetails$inboundSchema;
  /** @deprecated use `ResponsesOutputTokensDetails$outboundSchema` instead. */
  export const outboundSchema = ResponsesOutputTokensDetails$outboundSchema;
  /** @deprecated use `ResponsesOutputTokensDetails$Outbound` instead. */
  export type Outbound = ResponsesOutputTokensDetails$Outbound;
}

export function responsesOutputTokensDetailsToJSON(
  responsesOutputTokensDetails: ResponsesOutputTokensDetails,
): string {
  return JSON.stringify(
    ResponsesOutputTokensDetails$outboundSchema.parse(
      responsesOutputTokensDetails,
    ),
  );
}

export function responsesOutputTokensDetailsFromJSON(
  jsonString: string,
): SafeParseResult<ResponsesOutputTokensDetails, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ResponsesOutputTokensDetails$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ResponsesOutputTokensDetails' from JSON`,
  );
}
