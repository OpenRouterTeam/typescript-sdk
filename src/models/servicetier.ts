/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../types/enums.js";

export const ServiceTier = {
  Auto: "auto",
  Default: "default",
  Flex: "flex",
  Scale: "scale",
  Priority: "priority",
} as const;
export type ServiceTier = OpenEnum<typeof ServiceTier>;

/** @internal */
export const ServiceTier$inboundSchema: z.ZodType<
  ServiceTier,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(ServiceTier),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const ServiceTier$outboundSchema: z.ZodType<
  ServiceTier,
  z.ZodTypeDef,
  ServiceTier
> = z.union([
  z.nativeEnum(ServiceTier),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ServiceTier$ {
  /** @deprecated use `ServiceTier$inboundSchema` instead. */
  export const inboundSchema = ServiceTier$inboundSchema;
  /** @deprecated use `ServiceTier$outboundSchema` instead. */
  export const outboundSchema = ServiceTier$outboundSchema;
}
