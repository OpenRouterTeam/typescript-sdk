/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type ChatCompletionMessageToolCallFunction = {
  name: string;
  arguments: string;
};

export type ChatCompletionMessageToolCall = {
  id: string;
  type: "function";
  function: ChatCompletionMessageToolCallFunction;
};

/** @internal */
export const ChatCompletionMessageToolCallFunction$inboundSchema: z.ZodType<
  ChatCompletionMessageToolCallFunction,
  z.ZodTypeDef,
  unknown
> = z.object({
  name: z.string(),
  arguments: z.string(),
});

/** @internal */
export type ChatCompletionMessageToolCallFunction$Outbound = {
  name: string;
  arguments: string;
};

/** @internal */
export const ChatCompletionMessageToolCallFunction$outboundSchema: z.ZodType<
  ChatCompletionMessageToolCallFunction$Outbound,
  z.ZodTypeDef,
  ChatCompletionMessageToolCallFunction
> = z.object({
  name: z.string(),
  arguments: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionMessageToolCallFunction$ {
  /** @deprecated use `ChatCompletionMessageToolCallFunction$inboundSchema` instead. */
  export const inboundSchema =
    ChatCompletionMessageToolCallFunction$inboundSchema;
  /** @deprecated use `ChatCompletionMessageToolCallFunction$outboundSchema` instead. */
  export const outboundSchema =
    ChatCompletionMessageToolCallFunction$outboundSchema;
  /** @deprecated use `ChatCompletionMessageToolCallFunction$Outbound` instead. */
  export type Outbound = ChatCompletionMessageToolCallFunction$Outbound;
}

export function chatCompletionMessageToolCallFunctionToJSON(
  chatCompletionMessageToolCallFunction: ChatCompletionMessageToolCallFunction,
): string {
  return JSON.stringify(
    ChatCompletionMessageToolCallFunction$outboundSchema.parse(
      chatCompletionMessageToolCallFunction,
    ),
  );
}

export function chatCompletionMessageToolCallFunctionFromJSON(
  jsonString: string,
): SafeParseResult<ChatCompletionMessageToolCallFunction, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      ChatCompletionMessageToolCallFunction$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatCompletionMessageToolCallFunction' from JSON`,
  );
}

/** @internal */
export const ChatCompletionMessageToolCall$inboundSchema: z.ZodType<
  ChatCompletionMessageToolCall,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  type: z.literal("function"),
  function: z.lazy(() => ChatCompletionMessageToolCallFunction$inboundSchema),
});

/** @internal */
export type ChatCompletionMessageToolCall$Outbound = {
  id: string;
  type: "function";
  function: ChatCompletionMessageToolCallFunction$Outbound;
};

/** @internal */
export const ChatCompletionMessageToolCall$outboundSchema: z.ZodType<
  ChatCompletionMessageToolCall$Outbound,
  z.ZodTypeDef,
  ChatCompletionMessageToolCall
> = z.object({
  id: z.string(),
  type: z.literal("function"),
  function: z.lazy(() => ChatCompletionMessageToolCallFunction$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ChatCompletionMessageToolCall$ {
  /** @deprecated use `ChatCompletionMessageToolCall$inboundSchema` instead. */
  export const inboundSchema = ChatCompletionMessageToolCall$inboundSchema;
  /** @deprecated use `ChatCompletionMessageToolCall$outboundSchema` instead. */
  export const outboundSchema = ChatCompletionMessageToolCall$outboundSchema;
  /** @deprecated use `ChatCompletionMessageToolCall$Outbound` instead. */
  export type Outbound = ChatCompletionMessageToolCall$Outbound;
}

export function chatCompletionMessageToolCallToJSON(
  chatCompletionMessageToolCall: ChatCompletionMessageToolCall,
): string {
  return JSON.stringify(
    ChatCompletionMessageToolCall$outboundSchema.parse(
      chatCompletionMessageToolCall,
    ),
  );
}

export function chatCompletionMessageToolCallFromJSON(
  jsonString: string,
): SafeParseResult<ChatCompletionMessageToolCall, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => ChatCompletionMessageToolCall$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'ChatCompletionMessageToolCall' from JSON`,
  );
}
