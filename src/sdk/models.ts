/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { modelsGetCount } from "../funcs/modelsGetCount.js";
import { ListAcceptEnum, modelsList } from "../funcs/modelsList.js";
import { modelsListUserModels } from "../funcs/modelsListUserModels.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export { ListAcceptEnum } from "../funcs/modelsList.js";

export class Models extends ClientSDK {
  /**
   * Get total count of available models
   */
  async getCount(
    options?: RequestOptions,
  ): Promise<operations.GetCountResponse> {
    return unwrapAsync(modelsGetCount(
      this,
      options,
    ));
  }

  /**
   * List all models and their properties
   */
  async list(
    request?: operations.ListModelsRequestRequest | undefined,
    options?: RequestOptions & { acceptHeaderOverride?: ListAcceptEnum },
  ): Promise<operations.ListModelsResponse> {
    return unwrapAsync(modelsList(
      this,
      request,
      options,
    ));
  }

  /**
   * List models filtered by user provider preferences
   */
  async listUserModels(
    security: operations.ListUserModelsSecurity,
    options?: RequestOptions,
  ): Promise<operations.ListUserModelsResponse> {
    return unwrapAsync(modelsListUserModels(
      this,
      security,
      options,
    ));
  }
}
