/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { modelsCount } from "../funcs/modelsCount.js";
import { modelsList } from "../funcs/modelsList.js";
import { modelsListForUser } from "../funcs/modelsListForUser.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Models extends ClientSDK {
  /**
   * Get total count of available models
   */
  async count(
    options?: RequestOptions,
  ): Promise<models.ModelsCountResponse> {
    return unwrapAsync(modelsCount(
      this,
      options,
    ));
  }

  /**
   * List all models and their properties
   */
  async list(
    request?: operations.GetModelsRequest | undefined,
    options?: RequestOptions,
  ): Promise<models.ModelsListResponse> {
    return unwrapAsync(modelsList(
      this,
      request,
      options,
    ));
  }

  /**
   * List models filtered by user provider preferences
   */
  async listForUser(
    security: operations.ListModelsUserSecurity,
    options?: RequestOptions,
  ): Promise<models.ModelsListResponse> {
    return unwrapAsync(modelsListForUser(
      this,
      security,
      options,
    ));
  }
}
