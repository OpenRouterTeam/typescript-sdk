/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { modelsGetModels } from "../funcs/modelsGetModels.js";
import { modelsListModelsCount } from "../funcs/modelsListModelsCount.js";
import { modelsListModelsUser } from "../funcs/modelsListModelsUser.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Models extends ClientSDK {
  /**
   * Get total count of available models
   */
  async listModelsCount(
    options?: RequestOptions,
  ): Promise<operations.ListModelsCountResponse> {
    return unwrapAsync(modelsListModelsCount(
      this,
      options,
    ));
  }

  /**
   * List all models and their properties
   */
  async getModels(
    request?: operations.GetModelsRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.GetModelsResponse> {
    return unwrapAsync(modelsGetModels(
      this,
      request,
      options,
    ));
  }

  /**
   * List models filtered by user provider preferences
   */
  async listModelsUser(
    security: operations.ListModelsUserSecurity,
    options?: RequestOptions,
  ): Promise<operations.ListModelsUserResponse> {
    return unwrapAsync(modelsListModelsUser(
      this,
      security,
      options,
    ));
  }
}
