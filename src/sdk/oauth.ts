/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { oAuthPostAuthKeys } from "../funcs/oAuthPostAuthKeys.js";
import { oAuthPostAuthKeysCode } from "../funcs/oAuthPostAuthKeysCode.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class OAuth extends ClientSDK {
  /**
   * Exchange authorization code for API key
   *
   * @remarks
   * Exchange an authorization code from the PKCE flow for a user-controlled API key
   */
  async postAuthKeys(
    request?: operations.PostAuthKeysRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.PostAuthKeysResponse> {
    return unwrapAsync(oAuthPostAuthKeys(
      this,
      request,
      options,
    ));
  }

  /**
   * Create authorization code
   *
   * @remarks
   * Create an authorization code for the PKCE flow to generate a user-controlled API key
   */
  async postAuthKeysCode(
    request?: operations.PostAuthKeysCodeRequest | undefined,
    options?: RequestOptions,
  ): Promise<operations.PostAuthKeysCodeResponse> {
    return unwrapAsync(oAuthPostAuthKeysCode(
      this,
      request,
      options,
    ));
  }
}
