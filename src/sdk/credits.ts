/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { creditsCreateCoinbaseCharge } from "../funcs/creditsCreateCoinbaseCharge.js";
import { creditsGetCredits } from "../funcs/creditsGetCredits.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as models from "../models/index.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export class Credits extends ClientSDK {
  /**
   * Get remaining credits
   *
   * @remarks
   * Get total credits purchased and used for the authenticated user
   */
  async getCredits(
    options?: RequestOptions,
  ): Promise<operations.GetCreditsResponse> {
    return unwrapAsync(creditsGetCredits(
      this,
      options,
    ));
  }

  /**
   * Create a Coinbase charge for crypto payment
   *
   * @remarks
   * Create a Coinbase charge for crypto payment
   */
  async createCoinbaseCharge(
    security: operations.CreateCoinbaseChargeSecurity,
    request: models.CreateChargeRequest,
    options?: RequestOptions,
  ): Promise<operations.CreateCoinbaseChargeResponse> {
    return unwrapAsync(creditsCreateCoinbaseCharge(
      this,
      security,
      request,
      options,
    ));
  }
}
