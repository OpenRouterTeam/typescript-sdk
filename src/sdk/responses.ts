/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import {
  alphaResponsesSend2,
  Send2AcceptEnum,
} from "../funcs/alphaResponsesSend2.js";
import { EventStream } from "../lib/event-streams.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
import { unwrapAsync } from "../types/fp.js";

export { Send2AcceptEnum } from "../funcs/alphaResponsesSend2.js";

export class Responses extends ClientSDK {
  /**
   * Submit a response request
   *
   * @remarks
   * Submits a request to the Responses API (beta)
   */
  async send2(
    request: operations.PostApiAlphaResponsesRequest & {
      stream?: false | undefined;
    },
    options?: RequestOptions & { acceptHeaderOverride?: Send2AcceptEnum },
  ): Promise<operations.PostApiAlphaResponsesResponseBody>;
  async send2(
    request: operations.PostApiAlphaResponsesRequest & { stream: true },
    options?: RequestOptions & { acceptHeaderOverride?: Send2AcceptEnum },
  ): Promise<EventStream<any>>;
  async send2(
    request: operations.PostApiAlphaResponsesRequest,
    options?: RequestOptions & { acceptHeaderOverride?: Send2AcceptEnum },
  ): Promise<operations.PostApiAlphaResponsesResponse>;
  async send2(
    request: operations.PostApiAlphaResponsesRequest,
    options?: RequestOptions & { acceptHeaderOverride?: Send2AcceptEnum },
  ): Promise<operations.PostApiAlphaResponsesResponse> {
    return unwrapAsync(alphaResponsesSend2(
      this,
      request,
      options,
    ));
  }
}
