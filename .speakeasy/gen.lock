lockVersion: 2.0.0
id: 8b6cd71c-ea04-44da-af45-e43968b5928d
management:
  docChecksum: 6676183700397400ca1cc3c4e2b3fa14
  docVersion: 1.0.0
  speakeasyVersion: 1.643.2
  generationVersion: 2.731.6
  releaseVersion: 0.0.1-beta.17
  configChecksum: d486c4236e4eaa6d7b9952090c5da08e
  repoURL: https://github.com/OpenRouterTeam/typescript-sdk.git
  installationURL: https://github.com/OpenRouterTeam/typescript-sdk
  published: true
features:
  typescript:
    acceptHeaders: 2.81.2
    additionalDependencies: 0.1.0
    constsAndDefaults: 0.1.12
    core: 3.24.1
    customCodeRegions: 0.1.0
    defaultEnabledRetries: 0.1.0
    deprecations: 2.81.1
    devContainers: 2.90.1
    enumUnions: 0.1.0
    envVarSecurityUsage: 0.1.2
    globalSecurity: 2.82.14
    globalSecurityCallbacks: 0.1.0
    globalSecurityFlattening: 0.1.0
    globalServerURLs: 2.82.5
    groups: 2.81.3
    methodArguments: 0.1.2
    methodSecurity: 2.82.6
    nameOverrides: 2.81.2
    nullables: 0.1.1
    openEnums: 0.1.1
    reactQueryHooks: 0.2.3
    responseFormat: 0.2.3
    retries: 2.83.0
    sdkHooks: 0.3.0
    serverEvents: 0.1.12
    serverEventsSentinels: 0.1.0
    serverIDs: 2.81.2
    unions: 2.86.0
generatedFiles:
  - .devcontainer/README.md
  - .devcontainer/devcontainer.json
  - .devcontainer/setup.sh
  - .gitattributes
  - FUNCTIONS.md
  - REACT_QUERY.md
  - RUNTIMES.md
  - USAGE.md
  - docs/lib/utils/retryconfig.md
  - docs/models/activityitem.md
  - docs/models/architecture.md
  - docs/models/assistantmessage.md
  - docs/models/assistantmessagecontent.md
  - docs/models/badgatewayresponseerrordata.md
  - docs/models/badrequestresponseerrordata.md
  - docs/models/chainid.md
  - docs/models/chatcompletionfinishreason.md
  - docs/models/chaterrorerror.md
  - docs/models/chatgenerationparams.md
  - docs/models/chatgenerationparamsresponseformatjsonobject.md
  - docs/models/chatgenerationparamsresponseformatpython.md
  - docs/models/chatgenerationparamsresponseformattext.md
  - docs/models/chatgenerationparamsresponseformatunion.md
  - docs/models/chatgenerationparamsstop.md
  - docs/models/chatgenerationtokenusage.md
  - docs/models/chatmessagecontentitem.md
  - docs/models/chatmessagecontentitemaudio.md
  - docs/models/chatmessagecontentitemaudioformat.md
  - docs/models/chatmessagecontentitemimage.md
  - docs/models/chatmessagecontentitemimagedetail.md
  - docs/models/chatmessagecontentitemtext.md
  - docs/models/chatmessagetokenlogprob.md
  - docs/models/chatmessagetokenlogprobs.md
  - docs/models/chatmessagetoolcall.md
  - docs/models/chatmessagetoolcallfunction.md
  - docs/models/chatresponse.md
  - docs/models/chatresponsechoice.md
  - docs/models/chatstreamingchoice.md
  - docs/models/chatstreamingmessagechunk.md
  - docs/models/chatstreamingmessagechunkrole.md
  - docs/models/chatstreamingmessagetoolcall.md
  - docs/models/chatstreamingmessagetoolcallfunction.md
  - docs/models/chatstreamingresponsechunk.md
  - docs/models/chatstreamingresponsechunkdata.md
  - docs/models/chatstreamingresponsechunkerror.md
  - docs/models/chatstreamoptions.md
  - docs/models/code.md
  - docs/models/codeenum.md
  - docs/models/completionchoice.md
  - docs/models/completioncreateparams.md
  - docs/models/completioncreateparamsresponseformatjsonobject.md
  - docs/models/completioncreateparamsresponseformatpython.md
  - docs/models/completioncreateparamsresponseformattext.md
  - docs/models/completioncreateparamsresponseformatunion.md
  - docs/models/completioncreateparamsstop.md
  - docs/models/completionfinishreason.md
  - docs/models/completionlogprobs.md
  - docs/models/completionresponse.md
  - docs/models/completiontokensdetails.md
  - docs/models/completionusage.md
  - docs/models/costdetails.md
  - docs/models/createchargerequest.md
  - docs/models/datacollection.md
  - docs/models/defaultparameters.md
  - docs/models/edgenetworktimeoutresponseerrordata.md
  - docs/models/effort.md
  - docs/models/endpointstatus.md
  - docs/models/engine.md
  - docs/models/errors/badgatewayresponseerror.md
  - docs/models/errors/badrequestresponseerror.md
  - docs/models/errors/chaterror.md
  - docs/models/errors/edgenetworktimeoutresponseerror.md
  - docs/models/errors/forbiddenresponseerror.md
  - docs/models/errors/internalserverresponseerror.md
  - docs/models/errors/notfoundresponseerror.md
  - docs/models/errors/payloadtoolargeresponseerror.md
  - docs/models/errors/paymentrequiredresponseerror.md
  - docs/models/errors/provideroverloadedresponseerror.md
  - docs/models/errors/requesttimeoutresponseerror.md
  - docs/models/errors/serviceunavailableresponseerror.md
  - docs/models/errors/toomanyrequestsresponseerror.md
  - docs/models/errors/unauthorizedresponseerror.md
  - docs/models/errors/unprocessableentityresponseerror.md
  - docs/models/experimental.md
  - docs/models/filecitation.md
  - docs/models/filecitationtype.md
  - docs/models/filepath.md
  - docs/models/filepathtype.md
  - docs/models/forbiddenresponseerrordata.md
  - docs/models/idfileparser.md
  - docs/models/idmoderation.md
  - docs/models/idweb.md
  - docs/models/ignore.md
  - docs/models/imagegenerationstatus.md
  - docs/models/imageurl.md
  - docs/models/inputaudio.md
  - docs/models/inputmodality.md
  - docs/models/inputtokensdetails.md
  - docs/models/instructtype.md
  - docs/models/internalserverresponseerrordata.md
  - docs/models/jsonschemaconfig.md
  - docs/models/listendpointsresponse.md
  - docs/models/maxprice.md
  - docs/models/message.md
  - docs/models/messagecontent.md
  - docs/models/messagedeveloper.md
  - docs/models/model.md
  - docs/models/modelarchitecture.md
  - docs/models/modelarchitectureinstructtype.md
  - docs/models/modelgroup.md
  - docs/models/modelscountresponse.md
  - docs/models/modelscountresponsedata.md
  - docs/models/modelslistresponse.md
  - docs/models/namedtoolchoice.md
  - docs/models/namedtoolchoicefunction.md
  - docs/models/notfoundresponseerrordata.md
  - docs/models/objectt.md
  - docs/models/only.md
  - docs/models/openairesponsesannotation.md
  - docs/models/openairesponsesincludable.md
  - docs/models/openairesponsesincompletedetails.md
  - docs/models/openairesponsesinputcontent1.md
  - docs/models/openairesponsesinputcontent2.md
  - docs/models/openairesponsesinputcontent3.md
  - docs/models/openairesponsesinputfunctioncall.md
  - docs/models/openairesponsesinputfunctioncalloutput.md
  - docs/models/openairesponsesinputmessage1.md
  - docs/models/openairesponsesinputmessage2.md
  - docs/models/openairesponsesinputroleassistant.md
  - docs/models/openairesponsesinputroledeveloper1.md
  - docs/models/openairesponsesinputroledeveloper2.md
  - docs/models/openairesponsesinputrolesystem1.md
  - docs/models/openairesponsesinputrolesystem2.md
  - docs/models/openairesponsesinputroleunion1.md
  - docs/models/openairesponsesinputroleunion2.md
  - docs/models/openairesponsesinputroleuser1.md
  - docs/models/openairesponsesinputroleuser2.md
  - docs/models/openairesponsesinputtypefunctioncall.md
  - docs/models/openairesponsesinputtypefunctioncalloutput.md
  - docs/models/openairesponsesinputtypemessage1.md
  - docs/models/openairesponsesinputtypemessage2.md
  - docs/models/openairesponsesinputunion.md
  - docs/models/openairesponsesinputunion1.md
  - docs/models/openairesponsesprompt.md
  - docs/models/openairesponsesreasoningconfig.md
  - docs/models/openairesponsesreasoningeffort.md
  - docs/models/openairesponsesrefusalcontent.md
  - docs/models/openairesponsesrefusalcontenttype.md
  - docs/models/openairesponsesresponsestatus.md
  - docs/models/openairesponsesservicetier.md
  - docs/models/openairesponsestoolchoice.md
  - docs/models/openairesponsestoolchoiceauto.md
  - docs/models/openairesponsestoolchoicefunction.md
  - docs/models/openairesponsestoolchoicenone.md
  - docs/models/openairesponsestoolchoicerequired.md
  - docs/models/openairesponsestoolchoicetypefunction.md
  - docs/models/openairesponsestoolchoicetypewebsearchpreview.md
  - docs/models/openairesponsestoolchoicetypewebsearchpreview20250311.md
  - docs/models/openairesponsestoolchoiceunion.md
  - docs/models/openairesponsestruncation.md
  - docs/models/openresponseseasyinputmessage.md
  - docs/models/openresponseseasyinputmessagecontent1.md
  - docs/models/openresponseseasyinputmessagecontent2.md
  - docs/models/openresponseseasyinputmessageroleassistant.md
  - docs/models/openresponseseasyinputmessageroledeveloper.md
  - docs/models/openresponseseasyinputmessagerolesystem.md
  - docs/models/openresponseseasyinputmessageroleunion.md
  - docs/models/openresponseseasyinputmessageroleuser.md
  - docs/models/openresponseseasyinputmessagetype.md
  - docs/models/openresponseserrorevent.md
  - docs/models/openresponseserroreventtype.md
  - docs/models/openresponsesfunctioncalloutput.md
  - docs/models/openresponsesfunctioncalloutputtype.md
  - docs/models/openresponsesfunctiontoolcall.md
  - docs/models/openresponsesfunctiontoolcalltype.md
  - docs/models/openresponsesimagegencallcompleted.md
  - docs/models/openresponsesimagegencallcompletedtype.md
  - docs/models/openresponsesimagegencallgenerating.md
  - docs/models/openresponsesimagegencallgeneratingtype.md
  - docs/models/openresponsesimagegencallinprogress.md
  - docs/models/openresponsesimagegencallinprogresstype.md
  - docs/models/openresponsesimagegencallpartialimage.md
  - docs/models/openresponsesimagegencallpartialimagetype.md
  - docs/models/openresponsesinput.md
  - docs/models/openresponsesinput1.md
  - docs/models/openresponsesinputmessageitem.md
  - docs/models/openresponsesinputmessageitemcontent.md
  - docs/models/openresponsesinputmessageitemroledeveloper.md
  - docs/models/openresponsesinputmessageitemrolesystem.md
  - docs/models/openresponsesinputmessageitemroleunion.md
  - docs/models/openresponsesinputmessageitemroleuser.md
  - docs/models/openresponsesinputmessageitemtype.md
  - docs/models/openresponseslogprobs.md
  - docs/models/openresponsesnonstreamingresponse.md
  - docs/models/openresponsesnonstreamingresponsetoolfunction.md
  - docs/models/openresponsesnonstreamingresponsetoolunion.md
  - docs/models/openresponsesnonstreamingresponsetype.md
  - docs/models/openresponsesreasoning.md
  - docs/models/openresponsesreasoningconfig.md
  - docs/models/openresponsesreasoningdeltaevent.md
  - docs/models/openresponsesreasoningdeltaeventtype.md
  - docs/models/openresponsesreasoningdoneevent.md
  - docs/models/openresponsesreasoningdoneeventtype.md
  - docs/models/openresponsesreasoningformat.md
  - docs/models/openresponsesreasoningstatuscompleted.md
  - docs/models/openresponsesreasoningstatusincomplete.md
  - docs/models/openresponsesreasoningstatusinprogress.md
  - docs/models/openresponsesreasoningstatusunion.md
  - docs/models/openresponsesreasoningsummarypartaddedevent.md
  - docs/models/openresponsesreasoningsummarypartaddedeventtype.md
  - docs/models/openresponsesreasoningsummarytextdeltaevent.md
  - docs/models/openresponsesreasoningsummarytextdeltaeventtype.md
  - docs/models/openresponsesreasoningsummarytextdoneevent.md
  - docs/models/openresponsesreasoningsummarytextdoneeventtype.md
  - docs/models/openresponsesreasoningtype.md
  - docs/models/openresponsesrequest.md
  - docs/models/openresponsesrequesttoolfunction.md
  - docs/models/openresponsesrequesttoolunion.md
  - docs/models/openresponsesrequesttype.md
  - docs/models/openresponsesresponsetext.md
  - docs/models/openresponsesresponsetextverbosity.md
  - docs/models/openresponsesstreamevent.md
  - docs/models/openresponsesstreameventresponsecompleted.md
  - docs/models/openresponsesstreameventresponsecontentpartadded.md
  - docs/models/openresponsesstreameventresponsecontentpartdone.md
  - docs/models/openresponsesstreameventresponsecreated.md
  - docs/models/openresponsesstreameventresponsefailed.md
  - docs/models/openresponsesstreameventresponsefunctioncallargumentsdelta.md
  - docs/models/openresponsesstreameventresponsefunctioncallargumentsdone.md
  - docs/models/openresponsesstreameventresponseincomplete.md
  - docs/models/openresponsesstreameventresponseinprogress.md
  - docs/models/openresponsesstreameventresponseoutputitemadded.md
  - docs/models/openresponsesstreameventresponseoutputitemdone.md
  - docs/models/openresponsesstreameventresponseoutputtextannotationadded.md
  - docs/models/openresponsesstreameventresponseoutputtextdelta.md
  - docs/models/openresponsesstreameventresponseoutputtextdone.md
  - docs/models/openresponsesstreameventresponsereasoningsummarypartdone.md
  - docs/models/openresponsesstreameventresponserefusaldelta.md
  - docs/models/openresponsesstreameventresponserefusaldone.md
  - docs/models/openresponsestoplogprobs.md
  - docs/models/openresponsesusage.md
  - docs/models/openresponseswebsearch20250826tool.md
  - docs/models/openresponseswebsearch20250826toolfilters.md
  - docs/models/openresponseswebsearch20250826tooltype.md
  - docs/models/openresponseswebsearchpreview20250311tool.md
  - docs/models/openresponseswebsearchpreview20250311tooltype.md
  - docs/models/openresponseswebsearchpreviewtool.md
  - docs/models/openresponseswebsearchpreviewtooltype.md
  - docs/models/openresponseswebsearchtool.md
  - docs/models/openresponseswebsearchtoolfilters.md
  - docs/models/openresponseswebsearchtooltype.md
  - docs/models/operations/apitype.md
  - docs/models/operations/calldata.md
  - docs/models/operations/createauthkeyscodecodechallengemethod.md
  - docs/models/operations/createauthkeyscodedata.md
  - docs/models/operations/createauthkeyscoderequest.md
  - docs/models/operations/createauthkeyscoderesponse.md
  - docs/models/operations/createcoinbasechargedata.md
  - docs/models/operations/createcoinbasechargeresponse.md
  - docs/models/operations/createcoinbasechargesecurity.md
  - docs/models/operations/createkeysdata.md
  - docs/models/operations/createkeyslimitreset.md
  - docs/models/operations/createkeysrequest.md
  - docs/models/operations/createkeysresponse.md
  - docs/models/operations/createresponsesresponse.md
  - docs/models/operations/createresponsesresponsebody.md
  - docs/models/operations/deletekeysrequest.md
  - docs/models/operations/deletekeysresponse.md
  - docs/models/operations/exchangeauthcodeforapikeycodechallengemethod.md
  - docs/models/operations/exchangeauthcodeforapikeyrequest.md
  - docs/models/operations/exchangeauthcodeforapikeyresponse.md
  - docs/models/operations/getcreditsresponse.md
  - docs/models/operations/getcurrentkeydata.md
  - docs/models/operations/getcurrentkeyresponse.md
  - docs/models/operations/getgenerationdata.md
  - docs/models/operations/getgenerationrequest.md
  - docs/models/operations/getgenerationresponse.md
  - docs/models/operations/getkeydata.md
  - docs/models/operations/getkeyrequest.md
  - docs/models/operations/getkeyresponse.md
  - docs/models/operations/getmodelsrequest.md
  - docs/models/operations/getparametersdata.md
  - docs/models/operations/getparametersrequest.md
  - docs/models/operations/getparametersresponse.md
  - docs/models/operations/getparameterssecurity.md
  - docs/models/operations/getuseractivityrequest.md
  - docs/models/operations/getuseractivityresponse.md
  - docs/models/operations/listdata.md
  - docs/models/operations/listendpointsrequest.md
  - docs/models/operations/listendpointsresponse.md
  - docs/models/operations/listendpointszdrresponse.md
  - docs/models/operations/listmodelsusersecurity.md
  - docs/models/operations/listprovidersdata.md
  - docs/models/operations/listprovidersresponse.md
  - docs/models/operations/listrequest.md
  - docs/models/operations/listresponse.md
  - docs/models/operations/metadata.md
  - docs/models/operations/provider.md
  - docs/models/operations/ratelimit.md
  - docs/models/operations/sendchatcompletionrequestresponse.md
  - docs/models/operations/supportedparameter.md
  - docs/models/operations/transferintent.md
  - docs/models/operations/updatekeysdata.md
  - docs/models/operations/updatekeyslimitreset.md
  - docs/models/operations/updatekeysrequest.md
  - docs/models/operations/updatekeysrequestbody.md
  - docs/models/operations/updatekeysresponse.md
  - docs/models/operations/web3data.md
  - docs/models/order.md
  - docs/models/outputitemimagegenerationcall.md
  - docs/models/outputitemimagegenerationcalltype.md
  - docs/models/outputmessage.md
  - docs/models/outputmessagecontent.md
  - docs/models/outputmessagerole.md
  - docs/models/outputmessagestatuscompleted.md
  - docs/models/outputmessagestatusincomplete.md
  - docs/models/outputmessagestatusinprogress.md
  - docs/models/outputmessagestatusunion.md
  - docs/models/outputmessagetype.md
  - docs/models/outputmodality.md
  - docs/models/outputtokensdetails.md
  - docs/models/parameter.md
  - docs/models/part1.md
  - docs/models/part2.md
  - docs/models/payloadtoolargeresponseerrordata.md
  - docs/models/paymentrequiredresponseerrordata.md
  - docs/models/pdf.md
  - docs/models/pdfengine.md
  - docs/models/perrequestlimits.md
  - docs/models/plugin.md
  - docs/models/pluginfileparser.md
  - docs/models/pluginmoderation.md
  - docs/models/pluginweb.md
  - docs/models/pricing.md
  - docs/models/prompt.md
  - docs/models/prompttokensdetails.md
  - docs/models/provider.md
  - docs/models/providername.md
  - docs/models/provideroverloadedresponseerrordata.md
  - docs/models/publicendpoint.md
  - docs/models/publicendpointquantization.md
  - docs/models/publicpricing.md
  - docs/models/quantization.md
  - docs/models/reason.md
  - docs/models/reasoning.md
  - docs/models/reasoningsummarytext.md
  - docs/models/reasoningsummarytexttype.md
  - docs/models/reasoningsummaryverbosity.md
  - docs/models/reasoningtextcontent.md
  - docs/models/reasoningtextcontenttype.md
  - docs/models/requesttimeoutresponseerrordata.md
  - docs/models/responseformatjsonschema.md
  - docs/models/responseformattextconfig.md
  - docs/models/responseformattextgrammar.md
  - docs/models/responseinputfile.md
  - docs/models/responseinputfiletype.md
  - docs/models/responseinputimage.md
  - docs/models/responseinputimagedetail.md
  - docs/models/responseinputimagetype.md
  - docs/models/responseinputtext.md
  - docs/models/responseinputtexttype.md
  - docs/models/responseoutputtext.md
  - docs/models/responseoutputtexttype.md
  - docs/models/responseserrorfield.md
  - docs/models/responsesformatjsonobject.md
  - docs/models/responsesformatjsonobjecttype.md
  - docs/models/responsesformattext.md
  - docs/models/responsesformattextjsonschemaconfig.md
  - docs/models/responsesformattextjsonschemaconfigtype.md
  - docs/models/responsesformattexttype.md
  - docs/models/responsesimagegenerationcall.md
  - docs/models/responsesimagegenerationcalltype.md
  - docs/models/responsesoutputitem.md
  - docs/models/responsesoutputitemfilesearchcall.md
  - docs/models/responsesoutputitemfilesearchcalltype.md
  - docs/models/responsesoutputitemfunctioncall.md
  - docs/models/responsesoutputitemfunctioncallstatuscompleted.md
  - docs/models/responsesoutputitemfunctioncallstatusincomplete.md
  - docs/models/responsesoutputitemfunctioncallstatusinprogress.md
  - docs/models/responsesoutputitemfunctioncallstatusunion.md
  - docs/models/responsesoutputitemfunctioncalltype.md
  - docs/models/responsesoutputitemreasoning.md
  - docs/models/responsesoutputitemreasoningstatuscompleted.md
  - docs/models/responsesoutputitemreasoningstatusincomplete.md
  - docs/models/responsesoutputitemreasoningstatusinprogress.md
  - docs/models/responsesoutputitemreasoningstatusunion.md
  - docs/models/responsesoutputitemreasoningtype.md
  - docs/models/responsesoutputmessage.md
  - docs/models/responsesoutputmessagecontent.md
  - docs/models/responsesoutputmessagerole.md
  - docs/models/responsesoutputmessagestatuscompleted.md
  - docs/models/responsesoutputmessagestatusincomplete.md
  - docs/models/responsesoutputmessagestatusinprogress.md
  - docs/models/responsesoutputmessagestatusunion.md
  - docs/models/responsesoutputmessagetype.md
  - docs/models/responsessearchcontextsize.md
  - docs/models/responseswebsearchcalloutput.md
  - docs/models/responseswebsearchcalloutputtype.md
  - docs/models/responseswebsearchuserlocation.md
  - docs/models/responseswebsearchuserlocationtype.md
  - docs/models/responsetextconfig.md
  - docs/models/responsetextconfigverbosity.md
  - docs/models/security.md
  - docs/models/servicetier.md
  - docs/models/serviceunavailableresponseerrordata.md
  - docs/models/sort.md
  - docs/models/streamoptions.md
  - docs/models/systemmessage.md
  - docs/models/systemmessagecontent.md
  - docs/models/tokenizer.md
  - docs/models/tool.md
  - docs/models/toolcallstatus.md
  - docs/models/toolfunction.md
  - docs/models/toolresponsemessage.md
  - docs/models/toolresponsemessagecontent.md
  - docs/models/toomanyrequestsresponseerrordata.md
  - docs/models/toplogprob.md
  - docs/models/topproviderinfo.md
  - docs/models/truncation.md
  - docs/models/type.md
  - docs/models/typeresponsecompleted.md
  - docs/models/typeresponsecontentpartadded.md
  - docs/models/typeresponsecontentpartdone.md
  - docs/models/typeresponsecreated.md
  - docs/models/typeresponsefailed.md
  - docs/models/typeresponsefunctioncallargumentsdelta.md
  - docs/models/typeresponsefunctioncallargumentsdone.md
  - docs/models/typeresponseincomplete.md
  - docs/models/typeresponseinprogress.md
  - docs/models/typeresponseoutputitemadded.md
  - docs/models/typeresponseoutputitemdone.md
  - docs/models/typeresponseoutputtextannotationadded.md
  - docs/models/typeresponseoutputtextdelta.md
  - docs/models/typeresponseoutputtextdone.md
  - docs/models/typeresponsereasoningsummarypartdone.md
  - docs/models/typeresponserefusaldelta.md
  - docs/models/typeresponserefusaldone.md
  - docs/models/unauthorizedresponseerrordata.md
  - docs/models/unprocessableentityresponseerrordata.md
  - docs/models/urlcitation.md
  - docs/models/urlcitationtype.md
  - docs/models/usermessage.md
  - docs/models/usermessagecontent.md
  - docs/models/variables.md
  - docs/models/websearchpreviewtooluserlocation.md
  - docs/models/websearchpreviewtooluserlocationtype.md
  - docs/models/websearchstatus.md
  - docs/sdks/analytics/README.md
  - docs/sdks/apikeys/README.md
  - docs/sdks/chat/README.md
  - docs/sdks/completions/README.md
  - docs/sdks/credits/README.md
  - docs/sdks/endpoints/README.md
  - docs/sdks/generations/README.md
  - docs/sdks/models/README.md
  - docs/sdks/oauth/README.md
  - docs/sdks/parameters/README.md
  - docs/sdks/providers/README.md
  - docs/sdks/responses/README.md
  - eslint.config.mjs
  - examples/.env.template
  - examples/README.md
  - examples/betaResponsesSend.example.ts
  - examples/package.json
  - jsr.json
  - package.json
  - src/core.ts
  - src/funcs/analyticsGetUserActivity.ts
  - src/funcs/apiKeysCreate.ts
  - src/funcs/apiKeysDelete.ts
  - src/funcs/apiKeysGet.ts
  - src/funcs/apiKeysGetCurrentKeyMetadata.ts
  - src/funcs/apiKeysList.ts
  - src/funcs/apiKeysUpdate.ts
  - src/funcs/betaResponsesSend.ts
  - src/funcs/chatSend.ts
  - src/funcs/completionsGenerate.ts
  - src/funcs/creditsCreateCoinbaseCharge.ts
  - src/funcs/creditsGetCredits.ts
  - src/funcs/endpointsList.ts
  - src/funcs/endpointsListZdrEndpoints.ts
  - src/funcs/generationsGetGeneration.ts
  - src/funcs/modelsCount.ts
  - src/funcs/modelsList.ts
  - src/funcs/modelsListForUser.ts
  - src/funcs/oAuthCreateAuthCode.ts
  - src/funcs/oAuthExchangeAuthCodeForAPIKey.ts
  - src/funcs/parametersGetParameters.ts
  - src/funcs/providersList.ts
  - src/hooks/hooks.ts
  - src/hooks/index.ts
  - src/hooks/types.ts
  - src/index.ts
  - src/lib/base64.ts
  - src/lib/config.ts
  - src/lib/dlv.ts
  - src/lib/encodings.ts
  - src/lib/env.ts
  - src/lib/event-streams.ts
  - src/lib/files.ts
  - src/lib/http.ts
  - src/lib/is-plain-object.ts
  - src/lib/logger.ts
  - src/lib/matchers.ts
  - src/lib/primitives.ts
  - src/lib/retries.ts
  - src/lib/schemas.ts
  - src/lib/sdks.ts
  - src/lib/security.ts
  - src/lib/url.ts
  - src/models/activityitem.ts
  - src/models/assistantmessage.ts
  - src/models/badgatewayresponseerrordata.ts
  - src/models/badrequestresponseerrordata.ts
  - src/models/chatcompletionfinishreason.ts
  - src/models/chaterror.ts
  - src/models/chatgenerationparams.ts
  - src/models/chatgenerationtokenusage.ts
  - src/models/chatmessagecontentitem.ts
  - src/models/chatmessagecontentitemaudio.ts
  - src/models/chatmessagecontentitemimage.ts
  - src/models/chatmessagecontentitemtext.ts
  - src/models/chatmessagetokenlogprob.ts
  - src/models/chatmessagetokenlogprobs.ts
  - src/models/chatmessagetoolcall.ts
  - src/models/chatresponse.ts
  - src/models/chatresponsechoice.ts
  - src/models/chatstreamingchoice.ts
  - src/models/chatstreamingmessagechunk.ts
  - src/models/chatstreamingmessagetoolcall.ts
  - src/models/chatstreamingresponsechunk.ts
  - src/models/chatstreamoptions.ts
  - src/models/completionchoice.ts
  - src/models/completioncreateparams.ts
  - src/models/completionlogprobs.ts
  - src/models/completionresponse.ts
  - src/models/completionusage.ts
  - src/models/createchargerequest.ts
  - src/models/defaultparameters.ts
  - src/models/edgenetworktimeoutresponseerrordata.ts
  - src/models/endpointstatus.ts
  - src/models/errors/badgatewayresponseerror.ts
  - src/models/errors/badrequestresponseerror.ts
  - src/models/errors/chaterror.ts
  - src/models/errors/edgenetworktimeoutresponseerror.ts
  - src/models/errors/forbiddenresponseerror.ts
  - src/models/errors/httpclienterrors.ts
  - src/models/errors/index.ts
  - src/models/errors/internalserverresponseerror.ts
  - src/models/errors/notfoundresponseerror.ts
  - src/models/errors/openrouterdefaulterror.ts
  - src/models/errors/openroutererror.ts
  - src/models/errors/payloadtoolargeresponseerror.ts
  - src/models/errors/paymentrequiredresponseerror.ts
  - src/models/errors/provideroverloadedresponseerror.ts
  - src/models/errors/requesttimeoutresponseerror.ts
  - src/models/errors/responsevalidationerror.ts
  - src/models/errors/sdkvalidationerror.ts
  - src/models/errors/serviceunavailableresponseerror.ts
  - src/models/errors/toomanyrequestsresponseerror.ts
  - src/models/errors/unauthorizedresponseerror.ts
  - src/models/errors/unprocessableentityresponseerror.ts
  - src/models/filecitation.ts
  - src/models/filepath.ts
  - src/models/forbiddenresponseerrordata.ts
  - src/models/imagegenerationstatus.ts
  - src/models/index.ts
  - src/models/inputmodality.ts
  - src/models/instructtype.ts
  - src/models/internalserverresponseerrordata.ts
  - src/models/jsonschemaconfig.ts
  - src/models/listendpointsresponse.ts
  - src/models/message.ts
  - src/models/model.ts
  - src/models/modelarchitecture.ts
  - src/models/modelgroup.ts
  - src/models/modelscountresponse.ts
  - src/models/modelslistresponse.ts
  - src/models/namedtoolchoice.ts
  - src/models/notfoundresponseerrordata.ts
  - src/models/openairesponsesannotation.ts
  - src/models/openairesponsesincludable.ts
  - src/models/openairesponsesincompletedetails.ts
  - src/models/openairesponsesinputunion.ts
  - src/models/openairesponsesprompt.ts
  - src/models/openairesponsesreasoningconfig.ts
  - src/models/openairesponsesreasoningeffort.ts
  - src/models/openairesponsesrefusalcontent.ts
  - src/models/openairesponsesresponsestatus.ts
  - src/models/openairesponsesservicetier.ts
  - src/models/openairesponsestoolchoiceunion.ts
  - src/models/openairesponsestruncation.ts
  - src/models/openresponseseasyinputmessage.ts
  - src/models/openresponseserrorevent.ts
  - src/models/openresponsesfunctioncalloutput.ts
  - src/models/openresponsesfunctiontoolcall.ts
  - src/models/openresponsesimagegencallcompleted.ts
  - src/models/openresponsesimagegencallgenerating.ts
  - src/models/openresponsesimagegencallinprogress.ts
  - src/models/openresponsesimagegencallpartialimage.ts
  - src/models/openresponsesinput.ts
  - src/models/openresponsesinputmessageitem.ts
  - src/models/openresponseslogprobs.ts
  - src/models/openresponsesnonstreamingresponse.ts
  - src/models/openresponsesreasoning.ts
  - src/models/openresponsesreasoningconfig.ts
  - src/models/openresponsesreasoningdeltaevent.ts
  - src/models/openresponsesreasoningdoneevent.ts
  - src/models/openresponsesreasoningsummarypartaddedevent.ts
  - src/models/openresponsesreasoningsummarytextdeltaevent.ts
  - src/models/openresponsesreasoningsummarytextdoneevent.ts
  - src/models/openresponsesrequest.ts
  - src/models/openresponsesresponsetext.ts
  - src/models/openresponsesstreamevent.ts
  - src/models/openresponsestoplogprobs.ts
  - src/models/openresponsesusage.ts
  - src/models/openresponseswebsearch20250826tool.ts
  - src/models/openresponseswebsearchpreview20250311tool.ts
  - src/models/openresponseswebsearchpreviewtool.ts
  - src/models/openresponseswebsearchtool.ts
  - src/models/operations/createauthkeyscode.ts
  - src/models/operations/createcoinbasecharge.ts
  - src/models/operations/createkeys.ts
  - src/models/operations/createresponses.ts
  - src/models/operations/deletekeys.ts
  - src/models/operations/exchangeauthcodeforapikey.ts
  - src/models/operations/getcredits.ts
  - src/models/operations/getcurrentkey.ts
  - src/models/operations/getgeneration.ts
  - src/models/operations/getkey.ts
  - src/models/operations/getmodels.ts
  - src/models/operations/getparameters.ts
  - src/models/operations/getuseractivity.ts
  - src/models/operations/index.ts
  - src/models/operations/list.ts
  - src/models/operations/listendpoints.ts
  - src/models/operations/listendpointszdr.ts
  - src/models/operations/listmodelsuser.ts
  - src/models/operations/listproviders.ts
  - src/models/operations/sendchatcompletionrequest.ts
  - src/models/operations/updatekeys.ts
  - src/models/outputitemimagegenerationcall.ts
  - src/models/outputmessage.ts
  - src/models/outputmodality.ts
  - src/models/parameter.ts
  - src/models/payloadtoolargeresponseerrordata.ts
  - src/models/paymentrequiredresponseerrordata.ts
  - src/models/perrequestlimits.ts
  - src/models/providername.ts
  - src/models/provideroverloadedresponseerrordata.ts
  - src/models/publicendpoint.ts
  - src/models/publicpricing.ts
  - src/models/quantization.ts
  - src/models/reasoningsummarytext.ts
  - src/models/reasoningsummaryverbosity.ts
  - src/models/reasoningtextcontent.ts
  - src/models/requesttimeoutresponseerrordata.ts
  - src/models/responseformatjsonschema.ts
  - src/models/responseformattextconfig.ts
  - src/models/responseformattextgrammar.ts
  - src/models/responseinputfile.ts
  - src/models/responseinputimage.ts
  - src/models/responseinputtext.ts
  - src/models/responseoutputtext.ts
  - src/models/responseserrorfield.ts
  - src/models/responsesformatjsonobject.ts
  - src/models/responsesformattext.ts
  - src/models/responsesformattextjsonschemaconfig.ts
  - src/models/responsesimagegenerationcall.ts
  - src/models/responsesoutputitem.ts
  - src/models/responsesoutputitemfilesearchcall.ts
  - src/models/responsesoutputitemfunctioncall.ts
  - src/models/responsesoutputitemreasoning.ts
  - src/models/responsesoutputmessage.ts
  - src/models/responsessearchcontextsize.ts
  - src/models/responseswebsearchcalloutput.ts
  - src/models/responseswebsearchuserlocation.ts
  - src/models/responsetextconfig.ts
  - src/models/security.ts
  - src/models/serviceunavailableresponseerrordata.ts
  - src/models/systemmessage.ts
  - src/models/tool.ts
  - src/models/toolcallstatus.ts
  - src/models/toolresponsemessage.ts
  - src/models/toomanyrequestsresponseerrordata.ts
  - src/models/topproviderinfo.ts
  - src/models/unauthorizedresponseerrordata.ts
  - src/models/unprocessableentityresponseerrordata.ts
  - src/models/urlcitation.ts
  - src/models/usermessage.ts
  - src/models/websearchpreviewtooluserlocation.ts
  - src/models/websearchstatus.ts
  - src/react-query/_context.tsx
  - src/react-query/_types.ts
  - src/react-query/analyticsGetUserActivity.ts
  - src/react-query/apiKeysCreate.ts
  - src/react-query/apiKeysDelete.ts
  - src/react-query/apiKeysGet.ts
  - src/react-query/apiKeysGetCurrentKeyMetadata.ts
  - src/react-query/apiKeysList.ts
  - src/react-query/apiKeysUpdate.ts
  - src/react-query/betaResponsesSend.ts
  - src/react-query/chatSend.ts
  - src/react-query/completionsGenerate.ts
  - src/react-query/creditsCreateCoinbaseCharge.ts
  - src/react-query/creditsGetCredits.ts
  - src/react-query/endpointsList.ts
  - src/react-query/endpointsListZdrEndpoints.ts
  - src/react-query/generationsGetGeneration.ts
  - src/react-query/index.ts
  - src/react-query/modelsCount.ts
  - src/react-query/modelsList.ts
  - src/react-query/modelsListForUser.ts
  - src/react-query/oAuthCreateAuthCode.ts
  - src/react-query/oAuthExchangeAuthCodeForAPIKey.ts
  - src/react-query/parametersGetParameters.ts
  - src/react-query/providersList.ts
  - src/sdk/analytics.ts
  - src/sdk/apikeys.ts
  - src/sdk/beta.ts
  - src/sdk/chat.ts
  - src/sdk/completions.ts
  - src/sdk/credits.ts
  - src/sdk/endpoints.ts
  - src/sdk/generations.ts
  - src/sdk/index.ts
  - src/sdk/models.ts
  - src/sdk/oauth.ts
  - src/sdk/parameters.ts
  - src/sdk/providers.ts
  - src/sdk/responses.ts
  - src/sdk/sdk.ts
  - src/types/async.ts
  - src/types/blobs.ts
  - src/types/constdatetime.ts
  - src/types/enums.ts
  - src/types/fp.ts
  - src/types/index.ts
  - src/types/operations.ts
  - src/types/rfcdate.ts
  - src/types/streams.ts
  - tsconfig.json
examples:
  createChatCompletion:
    speakeasy-default-create-chat-completion:
      requestBody:
        application/json: {"messages": [{"role": "user", "content": "Hello, how are you?"}], "stream": false, "temperature": 1, "top_p": 1}
      responses:
        "200":
          application/json: {"id": "<id>", "choices": [], "created": 6977.95, "model": "El Camino", "object": "chat.completion"}
        "400":
          application/json: {"error": {"code": 8588.53, "message": "<value>"}}
        "401":
          application/json: {"error": {"code": 2658.12, "message": "<value>"}}
        "429":
          application/json: {"error": {"code": 9110.85, "message": "<value>"}}
        "500":
          application/json: {"error": {"code": null, "message": "<value>"}}
  get_/credits:
    speakeasy-default-get-/credits:
      responses:
        "200":
          application/json: {"data": {"total_credits": 5452.47, "total_usage": 6368.93}}
        default:
          application/json: {"error": {"code": 413, "message": "<value>"}}
        4XX:
          application/json: {"error": {"code": 418, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
  post_/credits/coinbase:
    speakeasy-default-post-/credits/coinbase:
      requestBody:
        application/json: {"amount": 287.06, "sender": "<value>", "chain_id": 1}
      responses:
        "200":
          application/json: {"data": {"id": "<id>", "created_at": "1705058901106", "expires_at": "1742247470320", "web3_data": {"transfer_intent": {"call_data": {"deadline": "<value>", "fee_amount": "<value>", "id": "<id>", "operator": "<value>", "prefix": "<value>", "recipient": "<value>", "recipient_amount": "<value>", "recipient_currency": "<value>", "refund_destination": "<value>", "signature": "<value>"}, "metadata": {"chain_id": 7411.72, "contract_address": "<value>", "sender": "<value>"}}}}}
        default:
          application/json: {"error": {"code": 201, "message": "<value>"}}
        4XX:
          application/json: {"error": {"code": 102, "message": "<value>", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 102, "message": "<value>", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
  get_/providers:
    speakeasy-default-get-/providers:
      responses:
        "200":
          application/json: {"data": []}
        "500":
          application/json: {"error": {"code": 400, "message": "Bad Request"}}
  get_/activity:
    speakeasy-default-get-/activity:
      parameters:
        query:
          date: "2025-08-24"
      responses:
        "200":
          application/json: {"data": []}
        default:
          application/json: {"error": {"code": 416, "message": "<value>"}}
        4XX:
          application/json: {"error": {"code": 300, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 300, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
  post_/embeddings:
    speakeasy-default-post-/embeddings:
      requestBody:
        application/json: {"input": [], "model": "Grand Cherokee", "models": ["<value 1>"], "provider": {"allow_fallbacks": null, "require_parameters": true, "data_collection": "allow", "zdr": true, "order": ["<value>"], "only": ["<value>"], "ignore": ["AionLabs"], "quantizations": ["fp16"], "sort": "price", "max_price": {"prompt": "<value>", "completion": "<value>", "image": "https://picsum.photos/seed/fBlU9/863/2551", "audio": "<value>", "request": "<value>"}, "experimental": {}}, "encoding_format": "base64", "user": "Cheyenne_Howell"}
      responses:
        "200":
          application/json: {"object": "list", "data": [], "model": "Charger", "usage": {"prompt_tokens": 5195.89, "total_tokens": 8967.73, "cost": 9770.63}}
        default:
          application/json: {"error": {"code": 404, "message": "<value>"}}
        4XX:
          application/json: {"error": {"code": 423, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 423, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
  get_/generation:
    speakeasy-default-get-/generation:
      parameters:
        query:
          id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "gen-3bhGkxlo4XFrqiabUM7NDtwDzWwG", "upstream_id": "chatcmpl-791bcf62-080e-4568-87d0-94c72e3b4946", "total_cost": 0.0015, "cache_discount": 0.0002, "upstream_inference_cost": 0.0012, "created_at": "2024-07-15T23:33:19.433273+00:00", "model": "sao10k/l3-stheno-8b", "app_id": 12345, "streamed": true, "cancelled": false, "provider_name": "Infermatic", "latency": 1250, "moderation_latency": 50, "generation_time": 1200, "finish_reason": "stop", "tokens_prompt": 10, "tokens_completion": 25, "native_tokens_prompt": 10, "native_tokens_completion": 25, "native_tokens_completion_images": 0, "native_tokens_reasoning": 5, "native_tokens_cached": 3, "num_media_prompt": 1, "num_media_completion": 0, "num_search_results": 5, "origin": "https://openrouter.ai/", "usage": 0.0015, "is_byok": false, "native_finish_reason": "stop", "external_user": "user-123", "api_type": "completions"}}
        default:
          application/json: {"error": {"code": 501, "message": "<value>"}}
        4XX:
          application/json: {"error": {"code": 208, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 208, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
  get_/models/count:
    speakeasy-default-get-/models/count:
      responses:
        "200":
          application/json: {"data": {"count": 150}}
        default:
          application/json: {"error": {"code": 304, "message": "<value>"}}
        4XX:
          application/json: {"error": {"code": 304, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 304, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
  get_/models:
    speakeasy-default-get-/models:
      parameters:
        query:
          category: "<value>"
          supported_parameters: "<value>"
          use_rss: "<value>"
          use_rss_chat_links: "<value>"
      responses:
        "200":
          application/json: {"data": [{"id": "openai/gpt-4", "canonical_slug": "openai/gpt-4", "hugging_face_id": "microsoft/DialoGPT-medium", "name": "GPT-4", "created": 1692901234, "description": "GPT-4 is a large multimodal model that can solve difficult problems with greater accuracy.", "pricing": {"prompt": "<value>", "completion": 8687.52, "request": "<value>", "image": "https://loremflickr.com/1059/3475?lock=4360467031648304", "image_output": "<value>", "audio": 2816.19, "input_audio_cache": "<value>", "web_search": 5627.19, "internal_reasoning": "<value>", "input_cache_read": 7937.77, "input_cache_write": "<value>", "discount": 9207}, "context_length": 8192, "architecture": {"tokenizer": "Yi", "instruct_type": "code-llama", "modality": "text", "input_modalities": [], "output_modalities": []}, "top_provider": {"context_length": 8192, "max_completion_tokens": 4096, "is_moderated": true}, "per_request_limits": {"prompt_tokens": "<value>", "completion_tokens": "<value>"}, "supported_parameters": []}]}
          application/rss+xml: "<value>"
        default:
          application/json: {"error": {"code": 308, "message": "<value>"}}
        4XX:
          application/json: {"error": {"code": 501, "message": "<value>", "metadata": null}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 501, "message": "<value>", "metadata": null}, "user_id": "<id>"}
  get_/models/user:
    speakeasy-default-get-/models/user:
      responses:
        "200":
          application/json: {"data": [{"id": "openai/gpt-4", "canonical_slug": "openai/gpt-4", "hugging_face_id": "microsoft/DialoGPT-medium", "name": "GPT-4", "created": 1692901234, "description": "GPT-4 is a large multimodal model that can solve difficult problems with greater accuracy.", "pricing": {"prompt": "<value>", "completion": "<value>", "request": "<value>", "image": "https://loremflickr.com/3718/599?lock=1611962399787242", "image_output": "<value>", "audio": "<value>", "input_audio_cache": "<value>", "web_search": 6049.22, "internal_reasoning": "<value>", "input_cache_read": 692.3, "input_cache_write": "<value>", "discount": 9712.4}, "context_length": 8192, "architecture": {"tokenizer": "Router", "instruct_type": "neural", "modality": "text", "input_modalities": [], "output_modalities": []}, "top_provider": {"context_length": 8192, "max_completion_tokens": 4096, "is_moderated": true}, "per_request_limits": {"prompt_tokens": "<value>", "completion_tokens": "<value>"}, "supported_parameters": ["tool_choice"]}]}
        default:
          application/json: {"error": {"code": 409, "message": "<value>"}}
        4XX:
          application/json: {"error": {"code": 524, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 524, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
  get_/models/{author}/{slug}/endpoints:
    speakeasy-default-get-/models/{author}/{slug}/endpoints:
      parameters:
        path:
          author: "<value>"
          slug: "<value>"
      responses:
        "200":
          application/json: {"data": {"id": "openai/gpt-4", "name": "GPT-4", "created": 1692901234, "description": "GPT-4 is a large multimodal model that can solve difficult problems with greater accuracy.", "architecture": {"tokenizer": "Llama4", "instruct_type": "deepseek-r1", "modality": "text", "input_modalities": [], "output_modalities": ["embeddings"]}, "endpoints": [{"name": "<value>", "model_name": "<value>", "context_length": 5958.46, "pricing": {"prompt": 1533.15, "completion": "<value>", "request": "<value>", "image": "https://loremflickr.com/876/3375?lock=5553223669080670", "image_output": "<value>", "audio": "<value>", "input_audio_cache": "<value>", "web_search": 1533.15, "internal_reasoning": "<value>", "input_cache_read": 1236.04, "input_cache_write": "<value>", "discount": 4243.11}, "provider_name": "Lynn", "tag": "<value>", "quantization": "unknown", "max_completion_tokens": 5563.7, "max_prompt_tokens": 5649.14, "supported_parameters": ["presence_penalty"], "status": -3, "uptime_last_30m": 8340.61, "supports_implicit_caching": false}]}}
        default:
          application/json: {"error": {"code": 424, "message": "<value>"}}
        4XX:
          application/json: {"error": {"code": 426, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 426, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
  get_/endpoints/zdr:
    speakeasy-default-get-/endpoints/zdr:
      responses:
        "200":
          application/json: {"data": []}
        default:
          application/json: {"error": {"code": 408, "message": "<value>"}}
        4XX:
          application/json: {"error": {"code": 301, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 301, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
  get_/parameters/{author}/{slug}:
    speakeasy-default-get-/parameters/{author}/{slug}:
      parameters:
        path:
          author: "<value>"
          slug: "<value>"
        query:
          provider: "SiliconFlow"
      responses:
        "200":
          application/json: {"data": {"model": "openai/gpt-4", "supported_parameters": ["min_p"]}}
        default:
          application/json: {"error": {"code": 428, "message": "<value>"}}
        4XX:
          application/json: {"error": {"code": 508, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 508, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
  get_/keys:
    speakeasy-default-get-/keys:
      parameters:
        query:
          include_disabled: "<value>"
          offset: "<value>"
      responses:
        "200":
          application/json: {"data": [{"hash": "sk-or-v1-abc123def456", "name": "My Production Key", "label": "Production API Key", "disabled": false, "limit": 100, "usage": 25.5, "created_at": "2025-08-24T10:30:00Z", "updated_at": "2025-08-24T15:45:00Z"}]}
        default:
          application/json: {"error": {"code": 411, "message": "<value>"}}
        4XX:
          application/json: {"error": {"code": 504, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 504, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
  post_/keys:
    speakeasy-default-post-/keys:
      requestBody:
        application/json: {"name": "My New API Key", "limit": 50, "include_byok_in_limit": true}
      responses:
        "201":
          application/json: {"data": {"hash": "sk-or-v1-abc123def456", "name": "My Production Key", "label": "Production API Key", "disabled": false, "limit": 100, "usage": 25.5, "created_at": "2025-08-24T10:30:00Z", "updated_at": "2025-08-24T15:45:00Z"}, "key": "sk-or-v1-abc123def456ghi789jkl012"}
        default:
          application/json: {"error": {"code": 511, "message": "<value>"}}
        4XX:
          application/json: {"error": {"code": 511, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 511, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
  patch_/keys/{hash}:
    speakeasy-default-patch-/keys/{hash}:
      parameters:
        path:
          hash: "sk-or-v1-abc123def456"
      requestBody:
        application/json: {"name": "Updated API Key Name", "disabled": false, "limit": 75, "include_byok_in_limit": true}
      responses:
        "200":
          application/json: {"data": {"hash": "sk-or-v1-abc123def456", "name": "My Production Key", "label": "Production API Key", "disabled": false, "limit": 100, "usage": 25.5, "created_at": "2025-08-24T10:30:00Z", "updated_at": "2025-08-24T15:45:00Z"}}
        default:
          application/json: {"error": {"code": 526, "message": "<value>"}}
        4XX:
          application/json: {"error": {"code": 526, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 526, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
  delete_/keys/{hash}:
    speakeasy-default-delete-/keys/{hash}:
      parameters:
        path:
          hash: "sk-or-v1-abc123def456"
      responses:
        "200":
          application/json: {"deleted": true}
        default:
          application/json: {"error": {"code": 204, "message": "<value>"}}
        4XX:
          application/json: {"error": {"code": 204, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 204, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
  get_/keys/{hash}:
    speakeasy-default-get-/keys/{hash}:
      parameters:
        path:
          hash: "sk-or-v1-abc123def456"
      responses:
        "200":
          application/json: {"data": {"hash": "sk-or-v1-abc123def456", "name": "My Production Key", "label": "Production API Key", "disabled": false, "limit": 100, "usage": 25.5, "created_at": "2025-08-24T10:30:00Z", "updated_at": "2025-08-24T15:45:00Z"}}
        default:
          application/json: {"error": {"code": 204, "message": "<value>"}}
        4XX:
          application/json: {"error": {"code": 204, "message": "<value>", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 204, "message": "<value>", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
  get_/key:
    speakeasy-default-get-/key:
      responses:
        "200":
          application/json: {"data": {"label": "sk-or-v1-au78b3456789012345678901234567890", "limit": 100, "usage": 25.5, "is_free_tier": false, "is_provisioning_key": false, "limit_remaining": 74.5, "rate_limit": {"requests": 1000, "interval": "1h", "note": "This field is deprecated and safe to ignore."}}}
        default:
          application/json: {"error": {"code": 524, "message": "<value>"}}
        4XX:
          application/json: {"error": {"code": 524, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 524, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
  get_/auth/key:
    speakeasy-default-get-/auth/key:
      responses:
        "200":
          application/json: {"data": {"label": "sk-or-v1-au78b3456789012345678901234567890", "limit": 100, "usage": 25.5, "is_free_tier": false, "is_provisioning_key": false, "limit_remaining": 74.5, "rate_limit": {"requests": 1000, "interval": "1h", "note": "This field is deprecated and safe to ignore."}}}
        default:
          application/json: {"error": {"code": 525, "message": "<value>"}}
        4XX:
          application/json: {"error": {"code": 525, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": null}
        5XX:
          application/json: {"error": {"code": 525, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": null}
  post_/chat/completions:
    speakeasy-default-post-/chat/completions:
      requestBody:
        application/json: {"messages": [], "model": "Grand Cherokee", "frequency_penalty": 5828.67, "logit_bias": {"key": 8477.28, "key1": 786.72}, "logprobs": true, "top_logprobs": 5437.39, "max_completion_tokens": 6372.55, "max_tokens": null, "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "presence_penalty": 7586.19, "reasoning": {"effort": "medium", "generate_summary": "concise", "summary": "auto"}, "response_format": {"type": "grammar", "grammar": "<value>"}, "seed": 804875, "stop": "<value>", "stream": false, "stream_options": {"include_usage": false}, "temperature": 1, "tool_choice": {"type": "function", "function": {"name": "<value>"}}, "tools": [{"type": "function", "function": {"name": "<value>", "description": "rightfully surge whose mentor meh immediate", "parameters": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "strict": true}}], "top_p": 1, "user": "Cielo8"}
      responses:
        "200":
          application/json: {"id": "<id>", "choices": [], "created": 5828.67, "model": "Model X", "object": "chat.completion", "system_fingerprint": "<value>", "usage": {"completion_tokens": 5242.22, "prompt_tokens": 7740.08, "total_tokens": 1907.39, "completion_tokens_details": {"reasoning_tokens": 3681.3, "audio_tokens": 7928.56, "accepted_prediction_tokens": 459.61, "rejected_prediction_tokens": 6231.28}, "prompt_tokens_details": {"cached_tokens": 534.02, "audio_tokens": 7676.52}}}
        "400":
          application/json: {"error": {"code": "<value>", "message": "<value>", "param": "<value>", "type": "<value>"}}
        "500":
          application/json: {"error": {"code": "<value>", "message": "<value>", "param": "<value>", "type": "<value>"}}
  post_/auth/keys:
    speakeasy-default-post-/auth/keys:
      requestBody:
        application/json: {"code": "auth_code_abc123def456", "code_verifier": "dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk", "code_challenge_method": "S256"}
      responses:
        "200":
          application/json: {"key": "sk-or-v1-abc123def456ghi789jkl012", "user_id": "or_user_1234567890abcdef"}
        default:
          application/json: {"error": {"code": 451, "message": "<value>"}}
        4XX:
          application/json: {"error": {"code": 451, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 451, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
  post_/auth/keys/code:
    speakeasy-default-post-/auth/keys/code:
      requestBody:
        application/json: {"callback_url": "https://myapp.com/auth/callback", "code_challenge": "E9Melhoa2OwvFrEMTJguCHaoeK1t8URWbuGJSstw-cM", "code_challenge_method": "S256", "limit": "100.0"}
      responses:
        "200":
          application/json: {"data": {"id": "auth_code_xyz789", "app_id": 12345, "created_at": "2025-08-24T10:30:00Z"}}
        default:
          application/json: {"error": {"code": 202, "message": "<value>"}}
        4XX:
          application/json: {"error": {"code": 202, "message": "<value>", "metadata": null}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 202, "message": "<value>", "metadata": null}, "user_id": "<id>"}
  post_/completions:
    speakeasy-default-post-/completions:
      requestBody:
        application/json: {"model": "Grand Caravan", "prompt": "<value>", "best_of": 129195, "echo": false, "frequency_penalty": 7468.55, "logit_bias": {"key": 9959.54}, "logprobs": 382720, "max_tokens": 885533, "n": 151801, "presence_penalty": 2096.19, "seed": 586955, "stop": ["<value 1>"], "stream": true, "stream_options": {"include_usage": false}, "suffix": "<value>", "temperature": null, "top_p": 8983.72, "user": "Arjun56", "metadata": {"key": "<value>", "key1": "<value>"}, "response_format": {"type": "json_schema", "json_schema": {"name": "<value>", "description": "lest thin huzzah deeply evenly far", "schema": {"key": "<value>", "key1": "<value>"}, "strict": null}}}
      responses:
        "200":
          application/json: {"id": "<id>", "object": "text_completion", "created": 5585.22, "model": "Alpine", "system_fingerprint": "<value>", "choices": [], "usage": {"prompt_tokens": 1831.51, "completion_tokens": 6966.94, "total_tokens": 6062.54}}
        "400":
          application/json: {"error": {"code": 7468.55, "message": "<value>", "param": "<value>", "type": "<value>"}}
        "500":
          application/json: {"error": {"code": 7468.55, "message": "<value>", "param": "<value>", "type": "<value>"}}
  post_/api/alpha/responses:
    speakeasy-default-post-/api/alpha/responses:
      requestBody:
        application/json: {"input": [], "instructions": "<value>", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "tools": [{"type": "web_search_2025_08_26", "filters": {"allowed_domains": ["<value 1>"]}, "search_context_size": "low", "user_location": {"type": "approximate", "city": "New Ashleehaven", "country": "Lesotho", "region": "<value>", "timezone": "Asia/Tokyo"}}], "tool_choice": "required", "parallel_tool_calls": true, "model": "Malibu", "models": ["<value 1>"], "text": {"format": {"type": "json_object"}, "verbosity": null}, "reasoning": {"effort": "low", "summary": "concise"}, "max_output_tokens": 9073.23, "temperature": 3955.62, "top_p": 583.58, "top_k": 2827.55, "prompt_cache_key": "<value>", "previous_response_id": "<id>", "prompt": {"id": "<id>", "variables": {"key": {"type": "input_file", "file_id": "<id>", "file_data": "<value>", "filename": "example.file", "file_url": "https://interesting-charm.net/"}}}, "include": ["reasoning.encrypted_content"], "background": true, "safety_identifier": "<value>", "store": true, "service_tier": "scale", "truncation": "disabled", "stream": true, "provider": {"allow_fallbacks": false, "require_parameters": true, "data_collection": "allow", "zdr": true, "order": ["<value>"], "only": ["<value>"], "ignore": ["Modal"], "quantizations": ["fp8"], "sort": null, "max_price": {"prompt": 5897, "completion": 6205.64, "image": "https://loremflickr.com/3949/3636?lock=3036246643782697", "audio": 7236.65, "request": 1995.85}, "experimental": {}}, "plugins": [{"id": "moderation"}], "user": "Ashleigh21"}
      responses:
        "200":
          application/json: {"id": "<id>", "object": "response", "created_at": 2466.57, "model": "Alpine", "status": "cancelled", "output": [{"type": "image_generation_call", "id": "<id>", "result": "<value>", "status": "failed"}], "user": "Darion_Rippin", "output_text": "<value>", "prompt_cache_key": "<value>", "safety_identifier": "<value>", "error": {"code": "server_error", "message": "<value>"}, "incomplete_details": null, "usage": {"input_tokens": 205.89, "input_tokens_details": {"cached_tokens": 6133.67}, "output_tokens": 926.25, "output_tokens_details": {"reasoning_tokens": 4219.68}, "total_tokens": 5865}, "max_tool_calls": 4614.09, "top_logprobs": 3651.6, "max_output_tokens": 8157.67, "temperature": 7573.78, "top_p": 6240.47, "instructions": null, "metadata": {"key": "<value>"}, "tools": [{"type": "web_search", "filters": {"allowed_domains": ["<value 1>"]}, "search_context_size": "high", "user_location": {"type": "approximate", "city": "Walkerboro", "country": "Isle of Man", "region": "<value>", "timezone": "America/Danmarkshavn"}}], "tool_choice": "auto", "parallel_tool_calls": false, "prompt": null, "background": null, "previous_response_id": "<id>", "reasoning": {"effort": "medium", "summary": "detailed"}, "service_tier": "priority", "store": false, "truncation": "disabled", "text": {"format": {"type": "json_schema", "name": "<value>", "description": "cross-contamination um whoever supposing seriously handy elementary psst mid oh", "strict": false, "schema": {"key": "<value>"}}, "verbosity": "high"}}
          text/event-stream: null
        4XX:
          application/json: {"error": {"code": 204, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 204, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
  send:
    speakeasy-default-send:
      requestBody:
        application/json: {"input": "Hello, how can I help you today?", "instructions": "<value>", "metadata": {"user_id": "user-123", "session_id": "session-abc"}, "tools": [{"type": "function", "function": {"name": "<value>", "description": "ravioli ah soap short quarrelsomely", "parameters": {"key": "<value>"}, "strict": true}}], "tool_choice": "auto", "parallel_tool_calls": false, "model": "Grand Caravan", "models": ["<value 1>"], "text": {"format": {"type": "text"}, "verbosity": "medium"}, "reasoning": {"effort": "medium", "summary": "auto"}, "max_output_tokens": 4886.16, "temperature": null, "top_p": 9044.06, "top_k": 4416.14, "prompt_cache_key": "<value>", "previous_response_id": "<id>", "prompt": {"id": "prompt-123", "variables": {"user_name": {"type": "input_text", "text": "John"}}}, "include": ["file_search_call.results"], "background": true, "safety_identifier": "<value>", "store": false, "service_tier": "flex", "truncation": "disabled", "stream": false, "provider": {"allow_fallbacks": false, "require_parameters": true, "data_collection": "allow", "zdr": true, "order": ["Venice"], "only": ["Minimax"], "ignore": ["DeepSeek"], "quantizations": ["unknown"], "sort": "throughput", "max_price": {"prompt": "<value>", "completion": 8418.17, "image": 7119.62, "audio": 7586.89, "request": 4896.65}, "experimental": {}}, "plugins": [{"id": "chain-of-thought"}], "user": "Eunice_Weber"}
      responses:
        "200":
          application/json: {"id": "resp_001", "object": "response", "created_at": 1234567890, "model": "gpt-4", "status": "completed", "output": [{"type": "message", "id": "msg_001", "status": "completed", "role": "assistant", "content": [{"type": "output_text", "text": "Hello! How can I help you today?", "annotations": []}]}], "user": null, "output_text": "<value>", "prompt_cache_key": "<value>", "safety_identifier": "<value>", "error": null, "incomplete_details": null, "usage": {"input_tokens": 10, "input_tokens_details": {"cached_tokens": 0}, "output_tokens": 8, "output_tokens_details": {"reasoning_tokens": 0}, "total_tokens": 18}, "max_tool_calls": 3205.62, "top_logprobs": 236.83, "max_output_tokens": 1000, "temperature": 0.7, "top_p": 1, "instructions": null, "metadata": {}, "tools": [], "tool_choice": "auto", "parallel_tool_calls": true, "prompt": {"id": "prompt-123", "variables": {"user_name": {"type": "input_text", "text": "John"}}}, "background": true, "previous_response_id": "<id>", "reasoning": {"effort": "medium", "summary": "auto"}, "service_tier": null, "store": false, "truncation": "disabled", "text": {"format": {"type": "text"}, "verbosity": "medium"}}
        4XX:
          application/json: {"error": {"code": 417, "message": "<value>", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 417, "message": "<value>", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
  getUserActivity:
    speakeasy-default-get-user-activity:
      parameters:
        query:
          date: "2025-08-24"
      responses:
        "200":
          application/json: {"data": [{"date": "2025-08-24", "model": "openai/gpt-4.1", "model_permaslug": "openai/gpt-4.1-2025-04-14", "endpoint_id": "550e8400-e29b-41d4-a716-446655440000", "provider_name": "OpenAI", "usage": 0.015, "byok_usage_inference": 0.012, "requests": 5, "prompt_tokens": 50, "completion_tokens": 125, "reasoning_tokens": 25}]}
        4XX:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        5XX:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        default:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        "400":
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        "401":
          application/json: {"error": {"code": 401, "message": "Missing Authentication header", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        "403":
          application/json: {"error": {"code": 403, "message": "Only provisioning keys can perform this operation", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        "500":
          application/json: {"error": {"code": 500, "message": "Internal Server Error", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
  getCredits:
    speakeasy-default-get-credits:
      responses:
        "200":
          application/json: {}
        4XX:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        default:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        5XX:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        "401":
          application/json: {"error": {"code": 401, "message": "Missing Authentication header", "metadata": {"key": "<value>"}}, "user_id": null}
        "403":
          application/json: {"error": {"code": 403, "message": "Only provisioning keys can perform this operation", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        "500":
          application/json: {"error": {"code": 500, "message": "Internal Server Error", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
  addCoinbaseCharge:
    speakeasy-default-add-coinbase-charge:
      requestBody:
        application/json: {"amount": 4821.17, "sender": "<value>", "chain_id": 1}
      responses:
        "200":
          application/json: {"data": {"id": "<id>", "created_at": "1715956788825", "expires_at": "1751817824737", "web3_data": {"transfer_intent": {"call_data": {"deadline": "<value>", "fee_amount": "<value>", "id": "<id>", "operator": "<value>", "prefix": "<value>", "recipient": "<value>", "recipient_amount": "<value>", "recipient_currency": "<value>", "refund_destination": "<value>", "signature": "<value>"}, "metadata": {"chain_id": 3721.65, "contract_address": "<value>", "sender": "<value>"}}}}}
        4XX:
          application/json: {"error": {"code": 498, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 498, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
  generate:
    speakeasy-default-generate:
      requestBody:
        application/json: {"input": ["<value 1>", "<value 2>"], "model": "Malibu", "models": ["<value 1>", "<value 2>", "<value 3>"], "provider": {"allow_fallbacks": true, "require_parameters": true, "data_collection": "deny", "zdr": true, "order": ["Lambda"], "only": ["<value>"], "ignore": null, "quantizations": ["bf16"], "sort": "throughput", "max_price": {"prompt": "<value>", "completion": 1014.86, "image": "https://loremflickr.com/1953/2511?lock=5056249632066692", "audio": "<value>", "request": "<value>"}, "experimental": {}}, "encoding_format": "float", "user": "Donato3"}
      responses:
        "200":
          application/json: {"object": "list", "data": [{"object": "embedding", "embedding": [7785.41, 5137.77], "index": 8654.74}], "model": "Explorer", "usage": {"prompt_tokens": 1041.75, "total_tokens": 1508.51, "cost": 7467.82}}
        4XX:
          application/json: {"error": {"code": 520, "message": "<value>", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 520, "message": "<value>", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
  getMetadata:
    speakeasy-default-get-metadata:
      parameters:
        query:
          id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "gen-3bhGkxlo4XFrqiabUM7NDtwDzWwG", "upstream_id": "chatcmpl-791bcf62-080e-4568-87d0-94c72e3b4946", "total_cost": 0.0015, "cache_discount": 0.0002, "upstream_inference_cost": 0.0012, "created_at": "2024-07-15T23:33:19.433273+00:00", "model": "sao10k/l3-stheno-8b", "app_id": 12345, "streamed": true, "cancelled": false, "provider_name": "Infermatic", "latency": 1250, "moderation_latency": 50, "generation_time": 1200, "finish_reason": "stop", "tokens_prompt": 10, "tokens_completion": 25, "native_tokens_prompt": 10, "native_tokens_completion": 25, "native_tokens_completion_images": 0, "native_tokens_reasoning": 5, "native_tokens_cached": 3, "num_media_prompt": 1, "num_media_completion": 0, "num_search_results": 5, "origin": "https://openrouter.ai/", "usage": 0.0015, "is_byok": false, "native_finish_reason": "stop", "external_user": "user-123", "api_type": "completions"}}
        4XX:
          application/json: {"error": {"code": 204, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 204, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
  getCount:
    speakeasy-default-get-count:
      responses:
        "200":
          application/json: {"data": {"count": 150}}
        4XX:
          application/json: {"error": {"code": 401, "message": "<value>", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 401, "message": "<value>", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
  listModels:
    speakeasy-default-list-models:
      parameters:
        query:
          category: "<value>"
          supported_parameters: "<value>"
          use_rss: "<value>"
          use_rss_chat_links: "<value>"
      responses:
        "200":
          application/json: {"data": [{"id": "openai/gpt-4", "canonical_slug": "openai/gpt-4", "hugging_face_id": null, "name": "GPT-4", "created": 1692901234, "description": "GPT-4 is a large multimodal model that can solve difficult problems with greater accuracy.", "pricing": {"prompt": "0.00003", "completion": "0.00006", "request": "<value>", "image": 5243.25, "image_output": "<value>", "audio": "<value>", "input_audio_cache": "<value>", "web_search": 1914, "internal_reasoning": 579.8, "input_cache_read": 752.9, "input_cache_write": 580.05, "discount": 6840.83}, "context_length": 8192, "architecture": {"tokenizer": "GPT", "instruct_type": "chatml", "modality": "text", "input_modalities": ["text", "image"], "output_modalities": ["text"]}, "top_provider": {"context_length": 8192, "max_completion_tokens": 4096, "is_moderated": true}, "per_request_limits": null, "supported_parameters": ["temperature", "max_tokens", "top_p", "frequency_penalty", "presence_penalty"], "default_parameters": null}]}
          application/rss+xml: "<value>"
        4XX:
          application/json: {"error": {"code": 425, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": null}
        5XX:
          application/json: {"error": {"code": 425, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": null}
  listUserModels:
    speakeasy-default-list-user-models:
      responses:
        "200":
          application/json: {"data": [{"id": "openai/gpt-4", "canonical_slug": "openai/gpt-4", "hugging_face_id": null, "name": "GPT-4", "created": 1692901234, "description": "GPT-4 is a large multimodal model that can solve difficult problems with greater accuracy.", "pricing": {"prompt": "0.00003", "completion": "0.00006", "request": "<value>", "image": "https://picsum.photos/seed/lSNiEzd/2336/2231", "image_output": "<value>", "audio": 1588.92, "input_audio_cache": 5768.64, "web_search": "<value>", "internal_reasoning": "<value>", "input_cache_read": 4442.74, "input_cache_write": "<value>", "discount": 4799.95}, "context_length": 8192, "architecture": {"tokenizer": "GPT", "instruct_type": "chatml", "modality": "text", "input_modalities": ["text", "image"], "output_modalities": ["text"]}, "top_provider": {"context_length": 8192, "max_completion_tokens": 4096, "is_moderated": true}, "per_request_limits": null, "supported_parameters": ["temperature", "max_tokens", "top_p", "frequency_penalty", "presence_penalty"], "default_parameters": null}]}
        4XX:
          application/json: {"error": {"code": 418, "message": "<value>", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 418, "message": "<value>", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
  list:
    speakeasy-default-list:
      parameters:
        path:
          author: "<value>"
          slug: "<value>"
        query:
          include_disabled: "false"
          offset: "0"
      responses:
        "200":
          application/json: {"data": [{"hash": "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", "name": "My Production Key", "label": "Production API Key", "disabled": false, "limit": 100, "limit_remaining": 74.5, "limit_reset": "monthly", "include_byok_in_limit": false, "usage": 25.5, "usage_daily": 25.5, "usage_weekly": 25.5, "usage_monthly": 25.5, "byok_usage": 17.38, "byok_usage_daily": 17.38, "byok_usage_weekly": 17.38, "byok_usage_monthly": 17.38, "created_at": "2025-08-24T10:30:00Z", "updated_at": "2025-08-24T15:45:00Z"}]}
        4XX:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        5XX:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        default:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        "401":
          application/json: {"error": {"code": 401, "message": "Missing Authentication header", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": null}
        "429":
          application/json: {"error": {"code": 429, "message": "Rate limit exceeded", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        "500":
          application/json: {"error": {"code": 500, "message": "Internal Server Error", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
  previewZDR:
    speakeasy-default-preview-ZDR:
      responses:
        "200":
          application/json: {"data": [{"name": "<value>", "model_name": "<value>", "context_length": 6951.94, "pricing": {"prompt": "<value>", "completion": "<value>", "request": "<value>", "image": "https://loremflickr.com/2171/1012?lock=1976973374583634", "image_output": 1734.86, "audio": 1678.84, "input_audio_cache": 289.49, "web_search": "<value>", "internal_reasoning": 7147.04, "input_cache_read": "<value>", "input_cache_write": "<value>", "discount": 9729.16}, "provider_name": "NextBit", "tag": "<value>", "quantization": "int8", "max_completion_tokens": 7825.26, "max_prompt_tokens": 7373.51, "supported_parameters": ["top_k"], "status": -1, "uptime_last_30m": 3173.05, "supports_implicit_caching": false}]}
        4XX:
          application/json: {"error": {"code": 510, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 510, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
  getParameters:
    speakeasy-default-get-parameters:
      parameters:
        path:
          author: "<value>"
          slug: "<value>"
        query:
          provider: "Google AI Studio"
      responses:
        "200":
          application/json: {"data": {"model": "openai/gpt-4", "supported_parameters": ["temperature", "top_p", "max_tokens"]}}
        4XX:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        5XX:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        default:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        "401":
          application/json: {"error": {"code": 401, "message": "Missing Authentication header", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        "404":
          application/json: {"error": {"code": 404, "message": "Resource not found", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        "500":
          application/json: {"error": {"code": 500, "message": "Internal Server Error", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
  listProviders:
    speakeasy-default-list-providers:
      responses:
        "200":
          application/json: {"data": [{"name": "OpenAI", "slug": "openai", "privacy_policy_url": "https://openai.com/privacy", "terms_of_service_url": "https://openai.com/terms", "status_page_url": "https://status.openai.com"}]}
        "500":
          application/json: {"error": {"code": 500, "message": "Internal Server Error", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
  listApiKeys:
    speakeasy-default-list-api-keys:
      parameters:
        query:
          include_disabled: "false"
          offset: "0"
      responses:
        "200":
          application/json: {"data": [{"hash": "sk-or-v1-abc123def456", "name": "My Production Key", "label": "Production API Key", "disabled": false, "limit": 100, "limit_remaining": 74.5, "limit_reset": "monthly", "include_byok_in_limit": false, "usage": 25.5, "usage_daily": 5, "usage_weekly": 15, "usage_monthly": 25.5, "byok_usage": 0, "byok_usage_daily": 0, "byok_usage_weekly": 0, "byok_usage_monthly": 0, "created_at": "2025-08-24T10:30:00Z", "updated_at": "2025-08-24T15:45:00Z"}, {"hash": "sk-or-v1-xyz789ghi012", "name": "My Development Key", "label": "Development API Key", "disabled": false, "limit": 50, "limit_remaining": 40, "limit_reset": "monthly", "include_byok_in_limit": false, "usage": 10, "usage_daily": 2, "usage_weekly": 7, "usage_monthly": 10, "byok_usage": 0, "byok_usage_daily": 0, "byok_usage_weekly": 0, "byok_usage_monthly": 0, "created_at": "2025-08-20T08:00:00Z", "updated_at": null}]}
        4XX:
          application/json: {"error": {"code": 305, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 305, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
  create:
    speakeasy-default-create:
      requestBody:
        application/json: {"name": "My New API Key", "limit": 50, "limit_reset": "monthly", "include_byok_in_limit": true}
      responses:
        "201":
          application/json: {"data": {"hash": "sk-or-v1-abc123def456", "name": "My New API Key", "label": "Production API Key", "disabled": false, "limit": 50, "limit_remaining": 50, "limit_reset": "monthly", "include_byok_in_limit": false, "usage": 0, "usage_daily": 0, "usage_weekly": 0, "usage_monthly": 0, "byok_usage": 0, "byok_usage_daily": 0, "byok_usage_weekly": 0, "byok_usage_monthly": 0, "created_at": "2025-08-24T10:30:00Z", "updated_at": null}, "key": "sk-or-v1-abc123def456ghi789jkl012"}
        4XX:
          application/json: {"error": {"code": 206, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 206, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
  update:
    speakeasy-default-update:
      parameters:
        path:
          hash: "sk-or-v1-abc123def456"
      requestBody:
        application/json: {"name": "Updated API Key Name", "disabled": false, "limit": 75, "limit_reset": "daily", "include_byok_in_limit": true}
      responses:
        "200":
          application/json: {"data": {"hash": "sk-or-v1-abc123def456", "name": "Updated API Key Name", "label": "Production API Key", "disabled": false, "limit": 75, "limit_remaining": 49.5, "limit_reset": "daily", "include_byok_in_limit": true, "usage": 25.5, "usage_daily": 5, "usage_weekly": 15, "usage_monthly": 25.5, "byok_usage": 0, "byok_usage_daily": 0, "byok_usage_weekly": 0, "byok_usage_monthly": 0, "created_at": "2025-08-24T10:30:00Z", "updated_at": "2025-08-24T16:00:00Z"}}
        4XX:
          application/json: {"error": {"code": 424, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 424, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
  delete:
    speakeasy-default-delete:
      parameters:
        path:
          hash: "sk-or-v1-abc123def456"
      responses:
        "200":
          application/json: {"deleted": true}
        4XX:
          application/json: {"error": {"code": 203, "message": "<value>", "metadata": null}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 203, "message": "<value>", "metadata": null}, "user_id": "<id>"}
  getApiKey:
    speakeasy-default-get-api-key:
      parameters:
        path:
          hash: "sk-or-v1-abc123def456"
      responses:
        "200":
          application/json: {"data": {"hash": "sk-or-v1-abc123def456", "name": "My Production Key", "label": "Production API Key", "disabled": false, "limit": 100, "limit_remaining": 74.5, "limit_reset": "monthly", "include_byok_in_limit": false, "usage": 25.5, "usage_daily": 5, "usage_weekly": 15, "usage_monthly": 25.5, "byok_usage": 0, "byok_usage_daily": 0, "byok_usage_weekly": 0, "byok_usage_monthly": 0, "created_at": "2025-08-24T10:30:00Z", "updated_at": "2025-08-24T15:45:00Z"}}
        4XX:
          application/json: {"error": {"code": 428, "message": "<value>", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 428, "message": "<value>", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
  getCurrentKey:
    speakeasy-default-get-current-key:
      responses:
        "200":
          application/json: {"data": {"label": "sk-or-v1-au78b3456789012345678901234567890", "limit": 100, "usage": 25.5, "usage_daily": 25.5, "usage_weekly": 25.5, "usage_monthly": 25.5, "byok_usage": 17.38, "byok_usage_daily": 17.38, "byok_usage_weekly": 17.38, "byok_usage_monthly": 17.38, "is_free_tier": false, "is_provisioning_key": false, "limit_remaining": 74.5, "limit_reset": "monthly", "include_byok_in_limit": false, "rate_limit": {"requests": 1000, "interval": "1h", "note": "This field is deprecated and safe to ignore."}}}
        4XX:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        5XX:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        default:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        "401":
          application/json: {"error": {"code": 401, "message": "Missing Authentication header", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        "500":
          application/json: {"error": {"code": 500, "message": "Internal Server Error", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": null}
  exchangeAuthorizationCode:
    speakeasy-default-exchange-authorization-code:
      requestBody:
        application/json: {"code": "auth_code_abc123def456", "code_verifier": "dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk", "code_challenge_method": "S256"}
      responses:
        "200":
          application/json: {"key": "sk-or-v1-abc123def456ghi789jkl012", "user_id": "or_user_1234567890abcdef"}
        4XX:
          application/json: {"error": {"code": 100, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 100, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
  createAuthorizationCode:
    speakeasy-default-create-authorization-code:
      requestBody:
        application/json: {"callback_url": "https://myapp.com/auth/callback", "code_challenge": "E9Melhoa2OwvFrEMTJguCHaoeK1t8URWbuGJSstw-cM", "code_challenge_method": "S256", "limit": 100}
      responses:
        "200":
          application/json: {"data": {"id": "auth_code_xyz789", "app_id": 12345, "created_at": "2025-08-24T10:30:00Z"}}
        4XX:
          application/json: {"error": {"code": 417, "message": "<value>", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 417, "message": "<value>", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
  createChatCompletions:
    speakeasy-default-create-chat-completions:
      requestBody:
        application/json: {"messages": [], "model": "Civic", "frequency_penalty": 3319.9, "logit_bias": {"key": 3222.08, "key1": 8277.92, "key2": 6037.07}, "logprobs": false, "top_logprobs": 4930.36, "max_completion_tokens": 7320.99, "max_tokens": 7020.38, "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "presence_penalty": 5375.8, "reasoning": {"effort": null, "generate_summary": "detailed", "summary": null}, "response_format": {"type": "text"}, "seed": 956602, "stop": "<value>", "stream": false, "stream_options": {"include_usage": true}, "temperature": 1, "tool_choice": "<value>", "tools": [{"type": "function", "function": {"name": "<value>", "description": "fellow wavy simple after", "parameters": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "strict": true}}], "top_p": 1, "user": "Gage.Cronin"}
      responses:
        "200":
          application/json: {"id": "<id>", "choices": [{"finish_reason": "error", "index": 1790.94, "message": {"role": "assistant", "content": [], "name": "<value>", "tool_calls": [{"id": "<id>", "type": "function", "function": {"name": "<value>", "arguments": "<value>"}}], "refusal": "<value>", "reasoning": "<value>"}, "logprobs": {"content": null, "refusal": []}}], "created": 3147.25, "model": "2", "object": "chat.completion", "system_fingerprint": "<value>", "usage": {"completion_tokens": 9590.23, "prompt_tokens": 2631.8, "total_tokens": 7908.25, "completion_tokens_details": {"reasoning_tokens": 7841.69, "audio_tokens": 4442.81, "accepted_prediction_tokens": 9674.71, "rejected_prediction_tokens": 4637.29}, "prompt_tokens_details": {"cached_tokens": 9671.36, "audio_tokens": 3868.78}}}
        "400":
          application/json: {"error": {"code": "<value>", "message": "<value>", "param": "<value>", "type": "<value>"}}
        "500":
          application/json: {"error": {"code": "<value>", "message": "<value>", "param": "<value>", "type": "<value>"}}
  createCompletions:
    speakeasy-default-create-completions:
      requestBody:
        application/json: {"model": "Model T", "prompt": "<value>", "best_of": 163488, "echo": true, "frequency_penalty": 27.55, "logit_bias": {"key": 9064.25, "key1": 7698.06, "key2": 6481.8}, "logprobs": 482258, "max_tokens": null, "n": 629532, "presence_penalty": 5430.28, "seed": 853393, "stop": ["<value 1>", "<value 2>"], "stream": false, "stream_options": {"include_usage": false}, "suffix": "<value>", "temperature": null, "top_p": 5229.98, "user": "Anita53", "metadata": {"key": "<value>", "key1": "<value>"}, "response_format": {"type": "text"}}
      responses:
        "200":
          application/json: {"id": "<id>", "object": "text_completion", "created": 2021.59, "model": "Jetta", "system_fingerprint": "<value>", "choices": [], "usage": {"prompt_tokens": 8379.72, "completion_tokens": 7782.47, "total_tokens": 4749.16}}
        "400":
          application/json: {"error": {"code": "<value>", "message": "<value>", "param": "<value>", "type": "<value>"}}
        "500":
          application/json: {"error": {"code": "<value>", "message": "<value>", "param": "<value>", "type": "<value>"}}
  sendResponsesRequest:
    speakeasy-default-send-responses-request:
      requestBody:
        application/json: {"input": "Hello, how can I help you today?", "instructions": "<value>", "metadata": {"user_id": "user-123", "session_id": "session-abc"}, "tools": [{"type": "function", "function": {"name": "<value>", "description": "petal righteously sans athwart down front tuxedo overfeed", "parameters": {"key": "<value>"}, "strict": false}}], "tool_choice": "auto", "parallel_tool_calls": true, "model": "Fortwo", "models": ["<value 1>", "<value 2>"], "text": {"format": {"type": "text"}, "verbosity": "medium"}, "reasoning": {"effort": "medium", "summary": "auto", "max_tokens": 6520.65, "enabled": false}, "max_output_tokens": 6181.51, "temperature": 8715.21, "top_p": 3848.26, "top_k": 2241.14, "prompt_cache_key": "<value>", "previous_response_id": "<id>", "prompt": {"id": "prompt-123", "variables": {"user_name": {"type": "input_text", "text": "John"}}}, "include": ["file_search_call.results"], "background": false, "safety_identifier": "<value>", "store": false, "service_tier": "scale", "truncation": "auto", "stream": null, "provider": null, "plugins": [{"id": "chain-of-thought"}], "user": "Ilene51"}
      responses:
        "200":
          application/json: {"id": "resp_001", "object": "response", "created_at": 1234567890, "model": "gpt-4", "status": "completed", "output": [{"type": "message", "id": "msg_001", "status": "completed", "role": "assistant", "content": [{"type": "output_text", "text": "Hello! How can I help you today?", "annotations": []}]}], "user": "Alex.Hermiston11", "output_text": "<value>", "prompt_cache_key": "<value>", "safety_identifier": null, "error": null, "incomplete_details": null, "usage": {"input_tokens": 10, "input_tokens_details": {"cached_tokens": 0}, "output_tokens": 8, "output_tokens_details": {"reasoning_tokens": 0}, "total_tokens": 18, "cost": 7782.07, "is_byok": false, "cost_details": {"upstream_inference_cost": 6612.28, "upstream_inference_input_cost": 7382.89, "upstream_inference_output_cost": 1653.97}}, "max_tool_calls": 1639.51, "top_logprobs": 5802.7, "max_output_tokens": 1000, "temperature": 0.7, "top_p": 1, "instructions": null, "metadata": {}, "tools": [], "tool_choice": "auto", "parallel_tool_calls": true, "prompt": {"id": "prompt-123", "variables": {"user_name": {"type": "input_text", "text": "John"}}}, "background": false, "previous_response_id": "<id>", "reasoning": {"effort": "medium", "summary": "auto", "max_tokens": 5674.12, "enabled": true}, "service_tier": "default", "store": true, "truncation": "disabled", "text": {"format": {"type": "text"}, "verbosity": "medium"}}
        4XX:
          application/json: {"error": {"code": 522, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        5XX:
          application/json: {"error": {"code": 522, "message": "<value>", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
  sendChatCompletionRequest:
    speakeasy-default-send-chat-completion-request:
      requestBody:
        application/json: {"messages": [], "model": "Charger", "frequency_penalty": 8689.88, "logit_bias": {"key": 4876.54, "key1": 7346.88}, "logprobs": false, "top_logprobs": 2140.15, "max_completion_tokens": 89.43, "max_tokens": 7392.4, "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}, "presence_penalty": 9132.54, "reasoning": {"effort": "medium", "summary": null}, "response_format": {"type": "grammar", "grammar": "<value>"}, "seed": null, "stop": [], "stream": false, "stream_options": {"include_usage": true}, "temperature": 1, "tool_choice": "<value>", "tools": [{"type": "function", "function": {"name": "<value>", "description": "pro even bank rewarding ha modulo aboard mentor", "parameters": {"key": "<value>"}, "strict": null}}], "top_p": 1, "user": "Francesco.Bartell"}
      responses:
        "200":
          application/json: {"id": "<id>", "choices": [], "created": 2736.96, "model": "Impala", "object": "chat.completion", "system_fingerprint": "<value>", "usage": {"completion_tokens": 1508.33, "prompt_tokens": 8882.56, "total_tokens": 6462.52, "completion_tokens_details": {"reasoning_tokens": 29.52, "audio_tokens": 2712.88, "accepted_prediction_tokens": 9343.84, "rejected_prediction_tokens": 3891.43}, "prompt_tokens_details": {"cached_tokens": 8011.45, "audio_tokens": 6106.12}}}
        "400":
          application/json: {"error": {"code": "<value>", "message": "<value>", "param": "<value>", "type": "<value>"}}
        "500":
          application/json: {"error": {"code": "<value>", "message": "<value>", "param": "<value>", "type": "<value>"}}
  createApiAlphaResponses:
    speakeasy-default-create-api-alpha-responses:
      requestBody:
        application/json: {"input": [{"type": "message", "role": "user", "content": "Hello, how are you?"}], "instructions": "<value>", "metadata": {"user_id": "123", "session_id": "abc-def-ghi"}, "tools": [{"type": "function", "name": "get_current_weather", "description": "Get the current weather in a given location", "strict": true, "parameters": {"type": "object", "properties": {"location": {"type": "string"}}}}], "tool_choice": {"type": "function", "name": "<value>"}, "parallel_tool_calls": true, "model": "anthropic/claude-4.5-sonnet-20250929", "models": ["<value 1>", "<value 2>"], "text": {"format": {"type": "text"}, "verbosity": "medium"}, "reasoning": {"effort": "minimal", "summary": "auto", "max_tokens": 5632.72, "enabled": true}, "max_output_tokens": 5913.88, "temperature": 0.7, "top_p": 0.9, "top_k": 1770.66, "prompt_cache_key": "<value>", "previous_response_id": "<id>", "prompt": {"id": "<id>", "variables": {"key": {"type": "input_text", "text": "Hello, how can I help you?"}}}, "include": ["file_search_call.results"], "background": false, "safety_identifier": "<value>", "store": false, "service_tier": "auto", "truncation": "auto", "stream": false, "provider": {"allow_fallbacks": false, "require_parameters": false, "data_collection": "deny", "zdr": true, "order": ["OpenAI"], "only": null, "ignore": ["OpenAI"], "quantizations": ["fp16"], "sort": "price", "max_price": {"prompt": "1000", "completion": 1000, "image": 1000, "audio": 1000, "request": 1000}, "experimental": {}}, "plugins": [{"id": "file-parser", "max_files": 6167.86, "pdf": {"engine": "native"}}], "user": "Minnie.Ratke"}
      responses:
        "200":
          application/json: {"id": "resp-abc123", "object": "response", "created_at": 1704067200, "model": "gpt-4", "status": "completed", "output": [{"id": "msg-abc123", "role": "assistant", "type": "message", "status": "completed", "content": [{"type": "output_text", "text": "Hello! How can I help you today?", "annotations": []}]}], "user": "Alphonso_Stokes-Parisian", "output_text": "<value>", "prompt_cache_key": "<value>", "safety_identifier": "<value>", "error": null, "incomplete_details": null, "usage": {"input_tokens": 10, "input_tokens_details": {"cached_tokens": 0}, "output_tokens": 25, "output_tokens_details": {"reasoning_tokens": 0}, "total_tokens": 35, "cost": 8700.29, "is_byok": true, "cost_details": {"upstream_inference_cost": 5688.69, "upstream_inference_input_cost": 1605.62, "upstream_inference_output_cost": 6596.56}}, "max_tool_calls": 3304.4, "top_logprobs": 2211.18, "max_output_tokens": null, "temperature": null, "top_p": null, "instructions": null, "metadata": null, "tools": [], "tool_choice": "auto", "parallel_tool_calls": true, "prompt": {"id": "<id>", "variables": {"key": {"type": "input_text", "text": "Hello, how can I help you?"}}}, "background": false, "previous_response_id": "<id>", "reasoning": {"effort": "high", "summary": "auto"}, "service_tier": "default", "store": true, "truncation": null, "text": {"format": {"type": "text"}, "verbosity": "medium"}}
        default:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        "400":
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        "401":
          application/json: {"error": {"code": 401, "message": "Missing Authentication header", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        "402":
          application/json: {"error": {"code": 402, "message": "Insufficient credits. Add more using https://openrouter.ai/credits", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        "404":
          application/json: {"error": {"code": 404, "message": "Resource not found", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        "408":
          application/json: {"error": {"code": 408, "message": "Operation timed out. Please try again later.", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        "413":
          application/json: {"error": {"code": 413, "message": "Request payload too large", "metadata": {"key": "<value>"}}, "user_id": null}
        "422":
          application/json: {"error": {"code": 422, "message": "Invalid argument", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        "429":
          application/json: {"error": {"code": 429, "message": "Rate limit exceeded", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        "500":
          application/json: {"error": {"code": 500, "message": "Internal Server Error", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        "502":
          application/json: {"error": {"code": 502, "message": "Provider returned error", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        "503":
          application/json: {"error": {"code": 503, "message": "Service temporarily unavailable", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        "524":
          application/json: {"error": {"code": 524, "message": "Request timed out. Please try again later.", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        "529":
          application/json: {"error": {"code": 529, "message": "Provider returned error", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
  createCoinbaseCharge:
    speakeasy-default-create-coinbase-charge:
      requestBody:
        application/json: {"amount": 100, "sender": "0x1234567890123456789012345678901234567890", "chain_id": 1}
      responses:
        "200":
          application/json: {"data": {"id": "<id>", "created_at": "1715098772685", "expires_at": "1755552807642", "web3_data": {"transfer_intent": {"call_data": {"deadline": "<value>", "fee_amount": "<value>", "id": "<id>", "operator": "<value>", "prefix": "<value>", "recipient": "<value>", "recipient_amount": "<value>", "recipient_currency": "<value>", "refund_destination": "<value>", "signature": "<value>"}, "metadata": {"chain_id": 4907.84, "contract_address": "<value>", "sender": "<value>"}}}}}
        default:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        4XX:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        5XX:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        "400":
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": null}, "user_id": "<id>"}
        "401":
          application/json: {"error": {"code": 401, "message": "Missing Authentication header", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        "429":
          application/json: {"error": {"code": 429, "message": "Rate limit exceeded", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        "500":
          application/json: {"error": {"code": 500, "message": "Internal Server Error", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
  getGeneration:
    speakeasy-default-get-generation:
      parameters:
        query:
          id: "<id>"
      responses:
        "200":
          application/json: {"data": {"id": "gen-3bhGkxlo4XFrqiabUM7NDtwDzWwG", "upstream_id": "chatcmpl-791bcf62-080e-4568-87d0-94c72e3b4946", "total_cost": 0.0015, "cache_discount": 0.0002, "upstream_inference_cost": 0.0012, "created_at": "2024-07-15T23:33:19.433273+00:00", "model": "sao10k/l3-stheno-8b", "app_id": 12345, "streamed": true, "cancelled": false, "provider_name": "Infermatic", "latency": 1250, "moderation_latency": 50, "generation_time": 1200, "finish_reason": "stop", "tokens_prompt": 10, "tokens_completion": 25, "native_tokens_prompt": 10, "native_tokens_completion": 25, "native_tokens_completion_images": 0, "native_tokens_reasoning": 5, "native_tokens_cached": 3, "num_media_prompt": 1, "num_input_audio_prompt": 0, "num_media_completion": 0, "num_search_results": 5, "origin": "https://openrouter.ai/", "usage": 0.0015, "is_byok": false, "native_finish_reason": "stop", "external_user": "user-123", "api_type": "completions"}}
        default:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        4XX:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        5XX:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        "401":
          application/json: {"error": {"code": 401, "message": "Missing Authentication header", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        "402":
          application/json: {"error": {"code": 402, "message": "Insufficient credits. Add more using https://openrouter.ai/credits", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        "404":
          application/json: {"error": {"code": 404, "message": "Resource not found", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        "429":
          application/json: {"error": {"code": 429, "message": "Rate limit exceeded", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        "500":
          application/json: {"error": {"code": 500, "message": "Internal Server Error", "metadata": null}, "user_id": null}
        "502":
          application/json: {"error": {"code": 502, "message": "Provider returned error", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        "524":
          application/json: {"error": {"code": 524, "message": "Request timed out. Please try again later.", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        "529":
          application/json: {"error": {"code": 529, "message": "Provider returned error", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
  listModelsCount:
    speakeasy-default-list-models-count:
      responses:
        "200":
          application/json: {"data": {"count": 150}}
        default:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        "500":
          application/json: {"error": {"code": 500, "message": "Internal Server Error", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
  getModels:
    speakeasy-default-get-models:
      parameters:
        query:
          category: "<value>"
          supported_parameters: "<value>"
          use_rss: "<value>"
          use_rss_chat_links: "<value>"
      responses:
        "200":
          application/json: {"data": [{"id": "openai/gpt-4", "canonical_slug": "openai/gpt-4", "hugging_face_id": "microsoft/DialoGPT-medium", "name": "GPT-4", "created": 1692901234, "description": "GPT-4 is a large multimodal model that can solve difficult problems with greater accuracy.", "pricing": {"prompt": "0.00003", "completion": "0.00006", "request": "0", "image": "0", "image_output": 1000, "audio": 1000, "input_audio_cache": "1000", "web_search": 1000, "internal_reasoning": "1000", "input_cache_read": 1000, "input_cache_write": 1000, "discount": 8591.99}, "context_length": 8192, "architecture": {"tokenizer": "GPT", "instruct_type": "chatml", "modality": "text->text", "input_modalities": ["text"], "output_modalities": ["text"]}, "top_provider": {"context_length": 8192, "max_completion_tokens": 4096, "is_moderated": true}, "per_request_limits": null, "supported_parameters": ["temperature", "top_p", "max_tokens", "frequency_penalty", "presence_penalty"], "default_parameters": null}]}
          application/rss+xml: "<value>"
        default:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        "400":
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        "500":
          application/json: {"error": {"code": 500, "message": "Internal Server Error", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
  listModelsUser:
    speakeasy-default-list-models-user:
      responses:
        "200":
          application/json: {"data": [{"id": "openai/gpt-4", "canonical_slug": "openai/gpt-4", "hugging_face_id": "microsoft/DialoGPT-medium", "name": "GPT-4", "created": 1692901234, "description": "GPT-4 is a large multimodal model that can solve difficult problems with greater accuracy.", "pricing": {"prompt": "0.00003", "completion": "0.00006", "request": "0", "image": "0", "image_output": 1000, "audio": 1000, "input_audio_cache": "1000", "web_search": "1000", "internal_reasoning": 1000, "input_cache_read": 1000, "input_cache_write": 1000, "discount": 389.6}, "context_length": 8192, "architecture": {"tokenizer": "GPT", "instruct_type": "chatml", "modality": "text->text", "input_modalities": ["text"], "output_modalities": ["text"]}, "top_provider": {"context_length": 8192, "max_completion_tokens": 4096, "is_moderated": true}, "per_request_limits": null, "supported_parameters": ["temperature", "top_p", "max_tokens", "frequency_penalty", "presence_penalty"], "default_parameters": null}]}
        default:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        "401":
          application/json: {"error": {"code": 401, "message": "Missing Authentication header", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        "500":
          application/json: {"error": {"code": 500, "message": "Internal Server Error", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
  listEndpoints:
    speakeasy-default-list-endpoints:
      parameters:
        path:
          author: "<value>"
          slug: "<value>"
      responses:
        "200":
          application/json: {"data": {"id": "openai/gpt-4", "name": "GPT-4", "created": 1692901234, "description": "GPT-4 is a large multimodal model that can solve difficult problems with greater accuracy.", "architecture": {"tokenizer": "GPT", "instruct_type": "chatml", "modality": "text->text", "input_modalities": ["text"], "output_modalities": ["text"]}, "endpoints": [{"name": "OpenAI: GPT-4", "model_name": "GPT-4", "context_length": 8192, "pricing": {"prompt": "0.00003", "completion": "0.00006", "request": "0", "image": "0", "image_output": "1000", "audio": 1000, "input_audio_cache": "1000", "web_search": 1000, "internal_reasoning": 1000, "input_cache_read": 1000, "input_cache_write": "1000", "discount": 5355.68}, "provider_name": "OpenAI", "tag": "openai", "quantization": "fp16", "max_completion_tokens": 4096, "max_prompt_tokens": 8192, "supported_parameters": ["temperature", "top_p", "max_tokens", "frequency_penalty", "presence_penalty"], "status": -5, "uptime_last_30m": 99.5, "supports_implicit_caching": true}]}}
        default:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        4XX:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        5XX:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        "404":
          application/json: {"error": {"code": 404, "message": "Resource not found", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        "500":
          application/json: {"error": {"code": 500, "message": "Internal Server Error", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
  listEndpointsZdr:
    speakeasy-default-list-endpoints-zdr:
      responses:
        "200":
          application/json: {"data": [{"name": "<value>", "model_name": "<value>", "context_length": 8891.09, "pricing": {"prompt": "1000", "completion": 1000, "request": 1000, "image": 1000, "image_output": 1000, "audio": 1000, "input_audio_cache": 1000, "web_search": 1000, "internal_reasoning": "1000", "input_cache_read": 1000, "input_cache_write": 1000, "discount": 6579.66}, "provider_name": "OpenAI", "tag": "<value>", "quantization": "fp16", "max_completion_tokens": 4685.25, "max_prompt_tokens": 22.7, "supported_parameters": ["temperature"], "status": 0, "uptime_last_30m": 6060.66, "supports_implicit_caching": true}]}
        default:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        "500":
          application/json: {"error": {"code": 500, "message": "Internal Server Error", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
  createKeys:
    speakeasy-default-create-keys:
      requestBody:
        application/json: {"name": "My New API Key", "limit": 50, "limit_reset": "monthly", "include_byok_in_limit": true}
      responses:
        "201":
          application/json: {"data": {"hash": "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", "name": "My New API Key", "label": "My New API Key", "disabled": false, "limit": 50, "limit_remaining": 50, "limit_reset": "monthly", "include_byok_in_limit": true, "usage": 0, "usage_daily": 0, "usage_weekly": 0, "usage_monthly": 0, "byok_usage": 0, "byok_usage_daily": 0, "byok_usage_weekly": 0, "byok_usage_monthly": 0, "created_at": "2025-08-24T10:30:00Z", "updated_at": null}, "key": "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"}
        default:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        4XX:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        5XX:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        "400":
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"key": "<value>"}}, "user_id": null}
        "401":
          application/json: {"error": {"code": 401, "message": "Missing Authentication header", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        "429":
          application/json: {"error": {"code": 429, "message": "Rate limit exceeded", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        "500":
          application/json: {"error": {"code": 500, "message": "Internal Server Error", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
  updateKeys:
    speakeasy-default-update-keys:
      parameters:
        path:
          hash: "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"
      requestBody:
        application/json: {"name": "Updated API Key Name", "disabled": false, "limit": 75, "limit_reset": "daily", "include_byok_in_limit": true}
      responses:
        "200":
          application/json: {"data": {"hash": "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", "name": "Updated API Key Name", "label": "Updated API Key Name", "disabled": false, "limit": 75, "limit_remaining": 49.5, "limit_reset": "daily", "include_byok_in_limit": true, "usage": 25.5, "usage_daily": 25.5, "usage_weekly": 25.5, "usage_monthly": 25.5, "byok_usage": 17.38, "byok_usage_daily": 17.38, "byok_usage_weekly": 17.38, "byok_usage_monthly": 17.38, "created_at": "2025-08-24T10:30:00Z", "updated_at": "2025-08-24T16:00:00Z"}}
        default:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        4XX:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        5XX:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        "400":
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        "401":
          application/json: {"error": {"code": 401, "message": "Missing Authentication header", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        "404":
          application/json: {"error": {"code": 404, "message": "Resource not found", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        "429":
          application/json: {"error": {"code": 429, "message": "Rate limit exceeded", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        "500":
          application/json: {"error": {"code": 500, "message": "Internal Server Error", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
  deleteKeys:
    speakeasy-default-delete-keys:
      parameters:
        path:
          hash: "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"
      responses:
        "200":
          application/json: {"deleted": true}
        default:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        4XX:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        5XX:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        "401":
          application/json: {"error": {"code": 401, "message": "Missing Authentication header", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        "404":
          application/json: {"error": {"code": 404, "message": "Resource not found", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        "429":
          application/json: {"error": {"code": 429, "message": "Rate limit exceeded", "metadata": {"key": "<value>"}}, "user_id": null}
        "500":
          application/json: {"error": {"code": 500, "message": "Internal Server Error", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": null}
  getKey:
    speakeasy-default-get-key:
      parameters:
        path:
          hash: "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"
      responses:
        "200":
          application/json: {"data": {"hash": "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", "name": "My Production Key", "label": "Production API Key", "disabled": false, "limit": 100, "limit_remaining": 74.5, "limit_reset": "monthly", "include_byok_in_limit": false, "usage": 25.5, "usage_daily": 25.5, "usage_weekly": 25.5, "usage_monthly": 25.5, "byok_usage": 17.38, "byok_usage_daily": 17.38, "byok_usage_weekly": 17.38, "byok_usage_monthly": 17.38, "created_at": "2025-08-24T10:30:00Z", "updated_at": "2025-08-24T15:45:00Z"}}
        default:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        4XX:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        5XX:
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"field": "temperature", "reason": "Must be between 0 and 2"}}, "user_id": "user-abc123"}
        "401":
          application/json: {"error": {"code": 401, "message": "Missing Authentication header", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        "404":
          application/json: {"error": {"code": 404, "message": "Resource not found", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        "429":
          application/json: {"error": {"code": 429, "message": "Rate limit exceeded", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        "500":
          application/json: {"error": {"code": 500, "message": "Internal Server Error", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
  createResponses:
    speakeasy-default-create-responses:
      requestBody:
        application/json: {"input": [{"type": "message", "role": "user", "content": "Hello, how are you?"}], "instructions": "<value>", "metadata": {"user_id": "123", "session_id": "abc-def-ghi"}, "tools": [{"type": "function", "name": "get_current_weather", "description": "Get the current weather in a given location", "strict": true, "parameters": {"type": "object", "properties": {"location": {"type": "string"}}}}], "tool_choice": {"type": "function", "name": "<value>"}, "parallel_tool_calls": true, "model": "anthropic/claude-4.5-sonnet-20250929", "models": ["<value 1>"], "text": {"format": {"type": "text"}, "verbosity": "medium"}, "reasoning": {"effort": "high", "summary": "auto", "max_tokens": 8661.16, "enabled": true}, "max_output_tokens": null, "temperature": 0.7, "top_p": 0.9, "top_k": 193.77, "prompt_cache_key": "<value>", "previous_response_id": "<id>", "prompt": {"id": "<id>", "variables": {"key": {"type": "input_text", "text": "Hello, how can I help you?"}}}, "include": ["reasoning.encrypted_content"], "background": true, "safety_identifier": "<value>", "store": true, "service_tier": "auto", "truncation": "auto", "stream": false, "provider": {"allow_fallbacks": null, "require_parameters": true, "data_collection": "deny", "zdr": true, "order": ["OpenAI"], "only": ["OpenAI"], "ignore": null, "quantizations": ["fp16"], "sort": "price", "max_price": {"prompt": "1000", "completion": 1000, "image": 1000, "audio": "1000", "request": 1000}, "experimental": {}}, "plugins": [{"id": "file-parser", "max_files": 4870.55, "pdf": {"engine": "mistral-ocr"}}], "user": "Elmer_Yundt72"}
      responses:
        "200":
          application/json: {"id": "resp-abc123", "object": "response", "created_at": 1704067200, "model": "gpt-4", "status": "completed", "output": [{"id": "msg-abc123", "role": "assistant", "type": "message", "status": "completed", "content": [{"type": "output_text", "text": "Hello! How can I help you today?", "annotations": []}]}], "user": "Maria_Zboncak17", "output_text": "<value>", "prompt_cache_key": "<value>", "safety_identifier": "<value>", "error": null, "incomplete_details": null, "usage": {"input_tokens": 10, "input_tokens_details": {"cached_tokens": 0}, "output_tokens": 25, "output_tokens_details": {"reasoning_tokens": 0}, "total_tokens": 35, "cost": 4793.03, "is_byok": false, "cost_details": {"upstream_inference_cost": 2597.96, "upstream_inference_input_cost": 1590.87, "upstream_inference_output_cost": 2325.17}}, "max_tool_calls": 1419.9, "top_logprobs": 1435.99, "max_output_tokens": null, "temperature": null, "top_p": null, "instructions": null, "metadata": null, "tools": [], "tool_choice": "auto", "parallel_tool_calls": true, "prompt": {"id": "<id>", "variables": {"key": {"type": "input_text", "text": "Hello, how can I help you?"}}}, "background": false, "previous_response_id": "<id>", "reasoning": {"effort": "low", "summary": "concise"}, "service_tier": "priority", "store": true, "truncation": "disabled", "text": {"format": {"type": "text"}, "verbosity": "medium"}}
        "400":
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        "401":
          application/json: {"error": {"code": 401, "message": "Missing Authentication header", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        "402":
          application/json: {"error": {"code": 402, "message": "Insufficient credits. Add more using https://openrouter.ai/credits", "metadata": null}, "user_id": null}
        "404":
          application/json: {"error": {"code": 404, "message": "Resource not found", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        "408":
          application/json: {"error": {"code": 408, "message": "Operation timed out. Please try again later.", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        "413":
          application/json: {"error": {"code": 413, "message": "Request payload too large", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        "422":
          application/json: {"error": {"code": 422, "message": "Invalid argument", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        "429":
          application/json: {"error": {"code": 429, "message": "Rate limit exceeded", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        "500":
          application/json: {"error": {"code": 500, "message": "Internal Server Error", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        "502":
          application/json: {"error": {"code": 502, "message": "Provider returned error", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        "503":
          application/json: {"error": {"code": 503, "message": "Service temporarily unavailable", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        "524":
          application/json: {"error": {"code": 524, "message": "Request timed out. Please try again later.", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
        "529":
          application/json: {"error": {"code": 529, "message": "Provider returned error", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
  exchangeAuthCodeForAPIKey:
    speakeasy-default-exchange-auth-code-for-API-key:
      requestBody:
        application/json: {"code": "auth_code_abc123def456", "code_verifier": "dBjftJeZ4CVP-mB92K27uhbUJU1p1r_wW1gFWFOEjXk", "code_challenge_method": "S256"}
      responses:
        "200":
          application/json: {"key": "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", "user_id": "user_2yOPcMpKoQhcd4bVgSMlELRaIah"}
        "400":
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"key": "<value>", "key1": "<value>"}}, "user_id": "<id>"}
        "403":
          application/json: {"error": {"code": 403, "message": "Only provisioning keys can perform this operation", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        "500":
          application/json: {"error": {"code": 500, "message": "Internal Server Error", "metadata": null}, "user_id": "<id>"}
  createAuthKeysCode:
    speakeasy-default-create-auth-keys-code:
      requestBody:
        application/json: {"callback_url": "https://myapp.com/auth/callback", "code_challenge": "E9Melhoa2OwvFrEMTJguCHaoeK1t8URWbuGJSstw-cM", "code_challenge_method": "S256", "limit": 100}
      responses:
        "200":
          application/json: {"data": {"id": "auth_code_xyz789", "app_id": 12345, "created_at": "2025-08-24T10:30:00Z"}}
        "400":
          application/json: {"error": {"code": 400, "message": "Invalid request parameters", "metadata": {"key": "<value>"}}, "user_id": "<id>"}
        "401":
          application/json: {"error": {"code": 401, "message": "Missing Authentication header", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": null}
        "500":
          application/json: {"error": {"code": 500, "message": "Internal Server Error", "metadata": {"key": "<value>", "key1": "<value>", "key2": "<value>"}}, "user_id": "<id>"}
examplesVersion: 1.0.2
